// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: anyq.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "anyq.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace anyq {

namespace {

const ::google::protobuf::Descriptor* DictConfig_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  DictConfig_reflection_ = NULL;
const ::google::protobuf::Descriptor* DictManagerConfig_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  DictManagerConfig_reflection_ = NULL;
const ::google::protobuf::Descriptor* AnalysisMethodConfig_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  AnalysisMethodConfig_reflection_ = NULL;
const ::google::protobuf::Descriptor* AnalysisConfig_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  AnalysisConfig_reflection_ = NULL;
const ::google::protobuf::Descriptor* SolrQConfig_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  SolrQConfig_reflection_ = NULL;
const ::google::protobuf::Descriptor* RetrievalPluginConfig_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  RetrievalPluginConfig_reflection_ = NULL;
const ::google::protobuf::Descriptor* RetrievalConfig_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  RetrievalConfig_reflection_ = NULL;
const ::google::protobuf::Descriptor* SelectConfig_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  SelectConfig_reflection_ = NULL;
const ::google::protobuf::Descriptor* RankPredict_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  RankPredict_reflection_ = NULL;
const ::google::protobuf::Descriptor* PatternConfig_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  PatternConfig_reflection_ = NULL;
const ::google::protobuf::Descriptor* TFSimConfig_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  TFSimConfig_reflection_ = NULL;
const ::google::protobuf::Descriptor* MatchingConfig_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  MatchingConfig_reflection_ = NULL;
const ::google::protobuf::Descriptor* RankConfig_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  RankConfig_reflection_ = NULL;
const ::google::protobuf::Descriptor* AnyqStrategyConfig_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  AnyqStrategyConfig_reflection_ = NULL;
const ::google::protobuf::Descriptor* ReqPreprocPluginConfig_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  ReqPreprocPluginConfig_reflection_ = NULL;
const ::google::protobuf::Descriptor* ReqPostprocPluginConfig_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  ReqPostprocPluginConfig_reflection_ = NULL;
const ::google::protobuf::Descriptor* ServerConfig_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  ServerConfig_reflection_ = NULL;

}  // namespace


void protobuf_AssignDesc_anyq_2eproto() GOOGLE_ATTRIBUTE_COLD;
void protobuf_AssignDesc_anyq_2eproto() {
  protobuf_AddDesc_anyq_2eproto();
  const ::google::protobuf::FileDescriptor* file =
    ::google::protobuf::DescriptorPool::generated_pool()->FindFileByName(
      "anyq.proto");
  GOOGLE_CHECK(file != NULL);
  DictConfig_descriptor_ = file->message_type(0);
  static const int DictConfig_offsets_[5] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DictConfig, name_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DictConfig, type_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DictConfig, path_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DictConfig, blob_name_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DictConfig, is_reload_able_),
  };
  DictConfig_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      DictConfig_descriptor_,
      DictConfig::internal_default_instance(),
      DictConfig_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DictConfig, _has_bits_),
      -1,
      -1,
      sizeof(DictConfig),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DictConfig, _internal_metadata_));
  DictManagerConfig_descriptor_ = file->message_type(1);
  static const int DictManagerConfig_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DictManagerConfig, name_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DictManagerConfig, dict_config_),
  };
  DictManagerConfig_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      DictManagerConfig_descriptor_,
      DictManagerConfig::internal_default_instance(),
      DictManagerConfig_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DictManagerConfig, _has_bits_),
      -1,
      -1,
      sizeof(DictManagerConfig),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DictManagerConfig, _internal_metadata_));
  AnalysisMethodConfig_descriptor_ = file->message_type(2);
  static const int AnalysisMethodConfig_offsets_[8] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AnalysisMethodConfig, name_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AnalysisMethodConfig, type_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AnalysisMethodConfig, using_dict_name_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AnalysisMethodConfig, need_phrase_seg_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AnalysisMethodConfig, query_feed_name_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AnalysisMethodConfig, cand_feed_name_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AnalysisMethodConfig, embedding_fetch_name_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AnalysisMethodConfig, dim_),
  };
  AnalysisMethodConfig_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      AnalysisMethodConfig_descriptor_,
      AnalysisMethodConfig::internal_default_instance(),
      AnalysisMethodConfig_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AnalysisMethodConfig, _has_bits_),
      -1,
      -1,
      sizeof(AnalysisMethodConfig),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AnalysisMethodConfig, _internal_metadata_));
  AnalysisConfig_descriptor_ = file->message_type(3);
  static const int AnalysisConfig_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AnalysisConfig, name_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AnalysisConfig, hide_tag_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AnalysisConfig, analysis_method_),
  };
  AnalysisConfig_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      AnalysisConfig_descriptor_,
      AnalysisConfig::internal_default_instance(),
      AnalysisConfig_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AnalysisConfig, _has_bits_),
      -1,
      -1,
      sizeof(AnalysisConfig),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AnalysisConfig, _internal_metadata_));
  SolrQConfig_descriptor_ = file->message_type(4);
  static const int SolrQConfig_offsets_[6] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SolrQConfig, type_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SolrQConfig, name_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SolrQConfig, solr_field_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SolrQConfig, source_name_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SolrQConfig, weight_dict_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SolrQConfig, compare_type_),
  };
  SolrQConfig_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      SolrQConfig_descriptor_,
      SolrQConfig::internal_default_instance(),
      SolrQConfig_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SolrQConfig, _has_bits_),
      -1,
      -1,
      sizeof(SolrQConfig),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SolrQConfig, _internal_metadata_));
  RetrievalPluginConfig_descriptor_ = file->message_type(5);
  static const int RetrievalPluginConfig_offsets_[13] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RetrievalPluginConfig, type_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RetrievalPluginConfig, name_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RetrievalPluginConfig, num_result_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RetrievalPluginConfig, search_host_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RetrievalPluginConfig, search_port_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RetrievalPluginConfig, engine_name_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RetrievalPluginConfig, solr_result_fl_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RetrievalPluginConfig, solr_q_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RetrievalPluginConfig, vector_size_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RetrievalPluginConfig, search_k_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RetrievalPluginConfig, index_path_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RetrievalPluginConfig, using_dict_name_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RetrievalPluginConfig, type_name_),
  };
  RetrievalPluginConfig_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      RetrievalPluginConfig_descriptor_,
      RetrievalPluginConfig::internal_default_instance(),
      RetrievalPluginConfig_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RetrievalPluginConfig, _has_bits_),
      -1,
      -1,
      sizeof(RetrievalPluginConfig),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RetrievalPluginConfig, _internal_metadata_));
  RetrievalConfig_descriptor_ = file->message_type(6);
  static const int RetrievalConfig_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RetrievalConfig, retrieval_plugin_),
  };
  RetrievalConfig_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      RetrievalConfig_descriptor_,
      RetrievalConfig::internal_default_instance(),
      RetrievalConfig_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RetrievalConfig, _has_bits_),
      -1,
      -1,
      sizeof(RetrievalConfig),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RetrievalConfig, _internal_metadata_));
  SelectConfig_descriptor_ = file->message_type(7);
  static const int SelectConfig_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SelectConfig, select_index_),
  };
  SelectConfig_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      SelectConfig_descriptor_,
      SelectConfig::internal_default_instance(),
      SelectConfig_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SelectConfig, _has_bits_),
      -1,
      -1,
      sizeof(SelectConfig),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SelectConfig, _internal_metadata_));
  RankPredict_descriptor_ = file->message_type(8);
  static const int RankPredict_offsets_[4] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RankPredict, type_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RankPredict, using_dict_name_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RankPredict, booster_model_path_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RankPredict, select_config_),
  };
  RankPredict_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      RankPredict_descriptor_,
      RankPredict::internal_default_instance(),
      RankPredict_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RankPredict, _has_bits_),
      -1,
      -1,
      sizeof(RankPredict),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RankPredict, _internal_metadata_));
  PatternConfig_descriptor_ = file->message_type(9);
  static const int PatternConfig_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PatternConfig, pat_fname_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PatternConfig, dict_fname_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PatternConfig, igno_fname_),
  };
  PatternConfig_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      PatternConfig_descriptor_,
      PatternConfig::internal_default_instance(),
      PatternConfig_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PatternConfig, _has_bits_),
      -1,
      -1,
      sizeof(PatternConfig),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PatternConfig, _internal_metadata_));
  TFSimConfig_descriptor_ = file->message_type(10);
  static const int TFSimConfig_offsets_[5] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TFSimConfig, pad_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TFSimConfig, sen_len_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TFSimConfig, left_input_name_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TFSimConfig, right_input_name_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TFSimConfig, output_name_),
  };
  TFSimConfig_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      TFSimConfig_descriptor_,
      TFSimConfig::internal_default_instance(),
      TFSimConfig_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TFSimConfig, _has_bits_),
      -1,
      -1,
      sizeof(TFSimConfig),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TFSimConfig, _internal_metadata_));
  MatchingConfig_descriptor_ = file->message_type(11);
  static const int MatchingConfig_offsets_[10] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MatchingConfig, name_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MatchingConfig, type_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MatchingConfig, using_dict_name_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MatchingConfig, output_num_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MatchingConfig, rough_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MatchingConfig, pattern_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MatchingConfig, tfconf_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MatchingConfig, query_feed_name_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MatchingConfig, cand_feed_name_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MatchingConfig, score_fetch_name_),
  };
  MatchingConfig_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      MatchingConfig_descriptor_,
      MatchingConfig::internal_default_instance(),
      MatchingConfig_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MatchingConfig, _has_bits_),
      -1,
      -1,
      sizeof(MatchingConfig),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MatchingConfig, _internal_metadata_));
  RankConfig_descriptor_ = file->message_type(12);
  static const int RankConfig_offsets_[10] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RankConfig, name_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RankConfig, rough_top_result_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RankConfig, top_result_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RankConfig, matching_config_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RankConfig, rough_rank_predictor_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RankConfig, rank_predictor_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RankConfig, rough_threshold_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RankConfig, threshold_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RankConfig, deep_rank_with_answer_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RankConfig, max_ans_num_per_query_),
  };
  RankConfig_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      RankConfig_descriptor_,
      RankConfig::internal_default_instance(),
      RankConfig_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RankConfig, _has_bits_),
      -1,
      -1,
      sizeof(RankConfig),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RankConfig, _internal_metadata_));
  AnyqStrategyConfig_descriptor_ = file->message_type(13);
  static const int AnyqStrategyConfig_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AnyqStrategyConfig, analysis_config_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AnyqStrategyConfig, retrieval_config_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AnyqStrategyConfig, rank_config_),
  };
  AnyqStrategyConfig_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      AnyqStrategyConfig_descriptor_,
      AnyqStrategyConfig::internal_default_instance(),
      AnyqStrategyConfig_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AnyqStrategyConfig, _has_bits_),
      -1,
      -1,
      sizeof(AnyqStrategyConfig),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AnyqStrategyConfig, _internal_metadata_));
  ReqPreprocPluginConfig_descriptor_ = file->message_type(14);
  static const int ReqPreprocPluginConfig_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ReqPreprocPluginConfig, type_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ReqPreprocPluginConfig, name_),
  };
  ReqPreprocPluginConfig_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      ReqPreprocPluginConfig_descriptor_,
      ReqPreprocPluginConfig::internal_default_instance(),
      ReqPreprocPluginConfig_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ReqPreprocPluginConfig, _has_bits_),
      -1,
      -1,
      sizeof(ReqPreprocPluginConfig),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ReqPreprocPluginConfig, _internal_metadata_));
  ReqPostprocPluginConfig_descriptor_ = file->message_type(15);
  static const int ReqPostprocPluginConfig_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ReqPostprocPluginConfig, type_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ReqPostprocPluginConfig, name_),
  };
  ReqPostprocPluginConfig_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      ReqPostprocPluginConfig_descriptor_,
      ReqPostprocPluginConfig::internal_default_instance(),
      ReqPostprocPluginConfig_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ReqPostprocPluginConfig, _has_bits_),
      -1,
      -1,
      sizeof(ReqPostprocPluginConfig),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ReqPostprocPluginConfig, _internal_metadata_));
  ServerConfig_descriptor_ = file->message_type(16);
  static const int ServerConfig_offsets_[10] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ServerConfig, idle_timeout_sec_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ServerConfig, max_concurrency_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ServerConfig, port_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ServerConfig, server_conf_dir_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ServerConfig, log_conf_file_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ServerConfig, anyq_dict_conf_dir_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ServerConfig, anyq_conf_dir_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ServerConfig, preproc_plugin_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ServerConfig, postproc_plugin_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ServerConfig, solr_clear_passwd_),
  };
  ServerConfig_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      ServerConfig_descriptor_,
      ServerConfig::internal_default_instance(),
      ServerConfig_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ServerConfig, _has_bits_),
      -1,
      -1,
      sizeof(ServerConfig),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ServerConfig, _internal_metadata_));
}

namespace {

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AssignDescriptors_once_);
void protobuf_AssignDescriptorsOnce() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AssignDescriptors_once_,
                 &protobuf_AssignDesc_anyq_2eproto);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      DictConfig_descriptor_, DictConfig::internal_default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      DictManagerConfig_descriptor_, DictManagerConfig::internal_default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      AnalysisMethodConfig_descriptor_, AnalysisMethodConfig::internal_default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      AnalysisConfig_descriptor_, AnalysisConfig::internal_default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      SolrQConfig_descriptor_, SolrQConfig::internal_default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      RetrievalPluginConfig_descriptor_, RetrievalPluginConfig::internal_default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      RetrievalConfig_descriptor_, RetrievalConfig::internal_default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      SelectConfig_descriptor_, SelectConfig::internal_default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      RankPredict_descriptor_, RankPredict::internal_default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      PatternConfig_descriptor_, PatternConfig::internal_default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      TFSimConfig_descriptor_, TFSimConfig::internal_default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      MatchingConfig_descriptor_, MatchingConfig::internal_default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      RankConfig_descriptor_, RankConfig::internal_default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      AnyqStrategyConfig_descriptor_, AnyqStrategyConfig::internal_default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      ReqPreprocPluginConfig_descriptor_, ReqPreprocPluginConfig::internal_default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      ReqPostprocPluginConfig_descriptor_, ReqPostprocPluginConfig::internal_default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      ServerConfig_descriptor_, ServerConfig::internal_default_instance());
}

}  // namespace

void protobuf_ShutdownFile_anyq_2eproto() {
  DictConfig_default_instance_.Shutdown();
  delete DictConfig_reflection_;
  DictManagerConfig_default_instance_.Shutdown();
  delete DictManagerConfig_reflection_;
  AnalysisMethodConfig_default_instance_.Shutdown();
  delete AnalysisMethodConfig_reflection_;
  AnalysisConfig_default_instance_.Shutdown();
  delete AnalysisConfig_reflection_;
  SolrQConfig_default_instance_.Shutdown();
  delete SolrQConfig_reflection_;
  RetrievalPluginConfig_default_instance_.Shutdown();
  delete RetrievalPluginConfig_reflection_;
  RetrievalConfig_default_instance_.Shutdown();
  delete RetrievalConfig_reflection_;
  SelectConfig_default_instance_.Shutdown();
  delete SelectConfig_reflection_;
  RankPredict_default_instance_.Shutdown();
  delete RankPredict_reflection_;
  PatternConfig_default_instance_.Shutdown();
  delete PatternConfig_reflection_;
  TFSimConfig_default_instance_.Shutdown();
  delete TFSimConfig_reflection_;
  MatchingConfig_default_instance_.Shutdown();
  delete MatchingConfig_reflection_;
  RankConfig_default_instance_.Shutdown();
  delete RankConfig_reflection_;
  AnyqStrategyConfig_default_instance_.Shutdown();
  delete AnyqStrategyConfig_reflection_;
  ReqPreprocPluginConfig_default_instance_.Shutdown();
  delete ReqPreprocPluginConfig_reflection_;
  ReqPostprocPluginConfig_default_instance_.Shutdown();
  delete ReqPostprocPluginConfig_reflection_;
  ServerConfig_default_instance_.Shutdown();
  delete ServerConfig_reflection_;
}

void protobuf_InitDefaults_anyq_2eproto_impl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::google::protobuf::internal::GetEmptyString();
  DictConfig_default_instance_.DefaultConstruct();
  ::google::protobuf::internal::GetEmptyString();
  DictManagerConfig_default_instance_.DefaultConstruct();
  ::google::protobuf::internal::GetEmptyString();
  AnalysisMethodConfig_default_instance_.DefaultConstruct();
  ::google::protobuf::internal::GetEmptyString();
  AnalysisConfig_default_instance_.DefaultConstruct();
  ::google::protobuf::internal::GetEmptyString();
  SolrQConfig_default_instance_.DefaultConstruct();
  ::google::protobuf::internal::GetEmptyString();
  RetrievalPluginConfig_default_instance_.DefaultConstruct();
  RetrievalConfig_default_instance_.DefaultConstruct();
  SelectConfig_default_instance_.DefaultConstruct();
  ::google::protobuf::internal::GetEmptyString();
  RankPredict_default_instance_.DefaultConstruct();
  ::google::protobuf::internal::GetEmptyString();
  PatternConfig_default_instance_.DefaultConstruct();
  ::google::protobuf::internal::GetEmptyString();
  TFSimConfig_default_instance_.DefaultConstruct();
  ::google::protobuf::internal::GetEmptyString();
  MatchingConfig_default_instance_.DefaultConstruct();
  ::google::protobuf::internal::GetEmptyString();
  RankConfig_default_instance_.DefaultConstruct();
  ::google::protobuf::internal::GetEmptyString();
  AnyqStrategyConfig_default_instance_.DefaultConstruct();
  ::google::protobuf::internal::GetEmptyString();
  ReqPreprocPluginConfig_default_instance_.DefaultConstruct();
  ::google::protobuf::internal::GetEmptyString();
  ReqPostprocPluginConfig_default_instance_.DefaultConstruct();
  ::google::protobuf::internal::GetEmptyString();
  ServerConfig_default_instance_.DefaultConstruct();
  DictConfig_default_instance_.get_mutable()->InitAsDefaultInstance();
  DictManagerConfig_default_instance_.get_mutable()->InitAsDefaultInstance();
  AnalysisMethodConfig_default_instance_.get_mutable()->InitAsDefaultInstance();
  AnalysisConfig_default_instance_.get_mutable()->InitAsDefaultInstance();
  SolrQConfig_default_instance_.get_mutable()->InitAsDefaultInstance();
  RetrievalPluginConfig_default_instance_.get_mutable()->InitAsDefaultInstance();
  RetrievalConfig_default_instance_.get_mutable()->InitAsDefaultInstance();
  SelectConfig_default_instance_.get_mutable()->InitAsDefaultInstance();
  RankPredict_default_instance_.get_mutable()->InitAsDefaultInstance();
  PatternConfig_default_instance_.get_mutable()->InitAsDefaultInstance();
  TFSimConfig_default_instance_.get_mutable()->InitAsDefaultInstance();
  MatchingConfig_default_instance_.get_mutable()->InitAsDefaultInstance();
  RankConfig_default_instance_.get_mutable()->InitAsDefaultInstance();
  AnyqStrategyConfig_default_instance_.get_mutable()->InitAsDefaultInstance();
  ReqPreprocPluginConfig_default_instance_.get_mutable()->InitAsDefaultInstance();
  ReqPostprocPluginConfig_default_instance_.get_mutable()->InitAsDefaultInstance();
  ServerConfig_default_instance_.get_mutable()->InitAsDefaultInstance();
}

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_InitDefaults_anyq_2eproto_once_);
void protobuf_InitDefaults_anyq_2eproto() {
  ::google::protobuf::GoogleOnceInit(&protobuf_InitDefaults_anyq_2eproto_once_,
                 &protobuf_InitDefaults_anyq_2eproto_impl);
}
void protobuf_AddDesc_anyq_2eproto_impl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  protobuf_InitDefaults_anyq_2eproto();
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
    "\n\nanyq.proto\022\004anyq\"a\n\nDictConfig\022\014\n\004name"
    "\030\001 \002(\t\022\014\n\004type\030\002 \002(\t\022\014\n\004path\030\003 \002(\t\022\021\n\tbl"
    "ob_name\030\004 \001(\t\022\026\n\016is_reload_able\030\005 \001(\010\"H\n"
    "\021DictManagerConfig\022\014\n\004name\030\001 \002(\t\022%\n\013dict"
    "_config\030\002 \003(\0132\020.anyq.DictConfig\"\300\001\n\024Anal"
    "ysisMethodConfig\022\014\n\004name\030\001 \002(\t\022\014\n\004type\030\002"
    " \002(\t\022\027\n\017using_dict_name\030\003 \002(\t\022\027\n\017need_ph"
    "rase_seg\030\004 \001(\010\022\027\n\017query_feed_name\030\005 \001(\t\022"
    "\026\n\016cand_feed_name\030\006 \001(\t\022\034\n\024embedding_fet"
    "ch_name\030\007 \001(\t\022\013\n\003dim\030\010 \001(\r\"e\n\016AnalysisCo"
    "nfig\022\014\n\004name\030\001 \001(\t\022\020\n\010hide_tag\030\002 \001(\t\0223\n\017"
    "analysis_method\030\003 \003(\0132\032.anyq.AnalysisMet"
    "hodConfig\"}\n\013SolrQConfig\022\014\n\004type\030\001 \002(\t\022\014"
    "\n\004name\030\002 \002(\t\022\022\n\nsolr_field\030\003 \002(\t\022\023\n\013sour"
    "ce_name\030\004 \002(\t\022\023\n\013weight_dict\030\005 \001(\t\022\024\n\014co"
    "mpare_type\030\006 \001(\t\"\250\002\n\025RetrievalPluginConf"
    "ig\022\014\n\004type\030\001 \002(\t\022\014\n\004name\030\002 \002(\t\022\022\n\nnum_re"
    "sult\030\003 \002(\r\022\023\n\013search_host\030\004 \001(\t\022\023\n\013searc"
    "h_port\030\005 \001(\r\022\023\n\013engine_name\030\006 \001(\t\022\026\n\016sol"
    "r_result_fl\030\007 \001(\t\022!\n\006solr_q\030\010 \003(\0132\021.anyq"
    ".SolrQConfig\022\023\n\013vector_size\030\t \001(\r\022\020\n\010sea"
    "rch_k\030\n \001(\r\022\022\n\nindex_path\030\013 \001(\t\022\027\n\017using"
    "_dict_name\030\014 \001(\t\022\021\n\ttype_name\030\016 \001(\t\"H\n\017R"
    "etrievalConfig\0225\n\020retrieval_plugin\030\001 \003(\013"
    "2\033.anyq.RetrievalPluginConfig\"$\n\014SelectC"
    "onfig\022\024\n\014select_index\030\001 \001(\005\"{\n\013RankPredi"
    "ct\022\014\n\004type\030\001 \002(\t\022\027\n\017using_dict_name\030\002 \001("
    "\t\022\032\n\022booster_model_path\030\003 \001(\t\022)\n\rselect_"
    "config\030e \001(\0132\022.anyq.SelectConfig\"J\n\rPatt"
    "ernConfig\022\021\n\tpat_fname\030\001 \002(\t\022\022\n\ndict_fna"
    "me\030\002 \002(\t\022\022\n\nigno_fname\030\003 \002(\t\"v\n\013TFSimCon"
    "fig\022\016\n\006pad_id\030\001 \001(\005\022\017\n\007sen_len\030\002 \001(\005\022\027\n\017"
    "left_input_name\030\003 \001(\t\022\030\n\020right_input_nam"
    "e\030\004 \001(\t\022\023\n\013output_name\030\005 \001(\t\"\374\001\n\016Matchin"
    "gConfig\022\014\n\004name\030\001 \002(\t\022\014\n\004type\030\002 \002(\t\022\027\n\017u"
    "sing_dict_name\030\003 \001(\t\022\022\n\noutput_num\030\004 \002(\005"
    "\022\r\n\005rough\030\005 \002(\010\022$\n\007pattern\030\006 \001(\0132\023.anyq."
    "PatternConfig\022!\n\006tfconf\030\n \001(\0132\021.anyq.TFS"
    "imConfig\022\027\n\017query_feed_name\030\013 \001(\t\022\026\n\016can"
    "d_feed_name\030\014 \001(\t\022\030\n\020score_fetch_name\030\r "
    "\001(\t\"\275\002\n\nRankConfig\022\014\n\004name\030\001 \001(\t\022\030\n\020roug"
    "h_top_result\030\002 \001(\005\022\022\n\ntop_result\030\003 \001(\005\022-"
    "\n\017matching_config\030\004 \003(\0132\024.anyq.MatchingC"
    "onfig\022/\n\024rough_rank_predictor\030\005 \001(\0132\021.an"
    "yq.RankPredict\022)\n\016rank_predictor\030\006 \001(\0132\021"
    ".anyq.RankPredict\022\027\n\017rough_threshold\030\007 \001"
    "(\002\022\021\n\tthreshold\030\010 \001(\002\022\035\n\025deep_rank_with_"
    "answer\030\t \001(\010\022\035\n\025max_ans_num_per_query\030\n "
    "\001(\005\"\\\n\022AnyqStrategyConfig\022\027\n\017analysis_co"
    "nfig\030\001 \001(\t\022\030\n\020retrieval_config\030\002 \001(\t\022\023\n\013"
    "rank_config\030\003 \001(\t\"4\n\026ReqPreprocPluginCon"
    "fig\022\014\n\004type\030\001 \002(\t\022\014\n\004name\030\002 \002(\t\"5\n\027ReqPo"
    "stprocPluginConfig\022\014\n\004type\030\001 \002(\t\022\014\n\004name"
    "\030\002 \002(\t\"\273\002\n\014ServerConfig\022\030\n\020idle_timeout_"
    "sec\030\001 \002(\005\022\027\n\017max_concurrency\030\002 \002(\005\022\014\n\004po"
    "rt\030\003 \002(\005\022\027\n\017server_conf_dir\030\004 \002(\t\022\025\n\rlog"
    "_conf_file\030\005 \002(\t\022\032\n\022anyq_dict_conf_dir\030\006"
    " \002(\t\022\025\n\ranyq_conf_dir\030\007 \002(\t\0224\n\016preproc_p"
    "lugin\030\010 \002(\0132\034.anyq.ReqPreprocPluginConfi"
    "g\0226\n\017postproc_plugin\030\t \002(\0132\035.anyq.ReqPos"
    "tprocPluginConfig\022\031\n\021solr_clear_passwd\030\n"
    " \001(\t", 2444);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "anyq.proto", &protobuf_RegisterTypes);
  ::google::protobuf::internal::OnShutdown(&protobuf_ShutdownFile_anyq_2eproto);
}

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AddDesc_anyq_2eproto_once_);
void protobuf_AddDesc_anyq_2eproto() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AddDesc_anyq_2eproto_once_,
                 &protobuf_AddDesc_anyq_2eproto_impl);
}
// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer_anyq_2eproto {
  StaticDescriptorInitializer_anyq_2eproto() {
    protobuf_AddDesc_anyq_2eproto();
  }
} static_descriptor_initializer_anyq_2eproto_;

namespace {

static void MergeFromFail(int line) GOOGLE_ATTRIBUTE_COLD GOOGLE_ATTRIBUTE_NORETURN;
static void MergeFromFail(int line) {
  ::google::protobuf::internal::MergeFromFail(__FILE__, line);
}

}  // namespace


// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int DictConfig::kNameFieldNumber;
const int DictConfig::kTypeFieldNumber;
const int DictConfig::kPathFieldNumber;
const int DictConfig::kBlobNameFieldNumber;
const int DictConfig::kIsReloadAbleFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

DictConfig::DictConfig()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (this != internal_default_instance()) protobuf_InitDefaults_anyq_2eproto();
  SharedCtor();
  // @@protoc_insertion_point(constructor:anyq.DictConfig)
}

void DictConfig::InitAsDefaultInstance() {
}

DictConfig::DictConfig(const DictConfig& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  UnsafeMergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:anyq.DictConfig)
}

void DictConfig::SharedCtor() {
  _cached_size_ = 0;
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  type_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  path_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  blob_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  is_reload_able_ = false;
}

DictConfig::~DictConfig() {
  // @@protoc_insertion_point(destructor:anyq.DictConfig)
  SharedDtor();
}

void DictConfig::SharedDtor() {
  name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  type_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  path_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  blob_name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void DictConfig::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* DictConfig::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return DictConfig_descriptor_;
}

const DictConfig& DictConfig::default_instance() {
  protobuf_InitDefaults_anyq_2eproto();
  return *internal_default_instance();
}

::google::protobuf::internal::ExplicitlyConstructed<DictConfig> DictConfig_default_instance_;

DictConfig* DictConfig::New(::google::protobuf::Arena* arena) const {
  DictConfig* n = new DictConfig;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void DictConfig::Clear() {
// @@protoc_insertion_point(message_clear_start:anyq.DictConfig)
  if (_has_bits_[0 / 32] & 31u) {
    if (has_name()) {
      name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
    if (has_type()) {
      type_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
    if (has_path()) {
      path_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
    if (has_blob_name()) {
      blob_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
    is_reload_able_ = false;
  }
  _has_bits_.Clear();
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool DictConfig::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:anyq.DictConfig)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required string name = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->name().data(), this->name().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "anyq.DictConfig.name");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_type;
        break;
      }

      // required string type = 2;
      case 2: {
        if (tag == 18) {
         parse_type:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_type()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->type().data(), this->type().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "anyq.DictConfig.type");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_path;
        break;
      }

      // required string path = 3;
      case 3: {
        if (tag == 26) {
         parse_path:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_path()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->path().data(), this->path().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "anyq.DictConfig.path");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(34)) goto parse_blob_name;
        break;
      }

      // optional string blob_name = 4;
      case 4: {
        if (tag == 34) {
         parse_blob_name:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_blob_name()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->blob_name().data(), this->blob_name().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "anyq.DictConfig.blob_name");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(40)) goto parse_is_reload_able;
        break;
      }

      // optional bool is_reload_able = 5;
      case 5: {
        if (tag == 40) {
         parse_is_reload_able:
          set_has_is_reload_able();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &is_reload_able_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:anyq.DictConfig)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:anyq.DictConfig)
  return false;
#undef DO_
}

void DictConfig::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:anyq.DictConfig)
  // required string name = 1;
  if (has_name()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->name().data(), this->name().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "anyq.DictConfig.name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->name(), output);
  }

  // required string type = 2;
  if (has_type()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->type().data(), this->type().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "anyq.DictConfig.type");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->type(), output);
  }

  // required string path = 3;
  if (has_path()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->path().data(), this->path().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "anyq.DictConfig.path");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->path(), output);
  }

  // optional string blob_name = 4;
  if (has_blob_name()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->blob_name().data(), this->blob_name().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "anyq.DictConfig.blob_name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->blob_name(), output);
  }

  // optional bool is_reload_able = 5;
  if (has_is_reload_able()) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(5, this->is_reload_able(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:anyq.DictConfig)
}

::google::protobuf::uint8* DictConfig::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:anyq.DictConfig)
  // required string name = 1;
  if (has_name()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->name().data(), this->name().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "anyq.DictConfig.name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->name(), target);
  }

  // required string type = 2;
  if (has_type()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->type().data(), this->type().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "anyq.DictConfig.type");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->type(), target);
  }

  // required string path = 3;
  if (has_path()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->path().data(), this->path().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "anyq.DictConfig.path");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->path(), target);
  }

  // optional string blob_name = 4;
  if (has_blob_name()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->blob_name().data(), this->blob_name().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "anyq.DictConfig.blob_name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->blob_name(), target);
  }

  // optional bool is_reload_able = 5;
  if (has_is_reload_able()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(5, this->is_reload_able(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:anyq.DictConfig)
  return target;
}

size_t DictConfig::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:anyq.DictConfig)
  size_t total_size = 0;

  if (has_name()) {
    // required string name = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->name());
  }

  if (has_type()) {
    // required string type = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->type());
  }

  if (has_path()) {
    // required string path = 3;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->path());
  }

  return total_size;
}
size_t DictConfig::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:anyq.DictConfig)
  size_t total_size = 0;

  if (((_has_bits_[0] & 0x00000007) ^ 0x00000007) == 0) {  // All required fields are present.
    // required string name = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->name());

    // required string type = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->type());

    // required string path = 3;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->path());

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  if (_has_bits_[3 / 32] & 24u) {
    // optional string blob_name = 4;
    if (has_blob_name()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->blob_name());
    }

    // optional bool is_reload_able = 5;
    if (has_is_reload_able()) {
      total_size += 1 + 1;
    }

  }
  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void DictConfig::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:anyq.DictConfig)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const DictConfig* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const DictConfig>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:anyq.DictConfig)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:anyq.DictConfig)
    UnsafeMergeFrom(*source);
  }
}

void DictConfig::MergeFrom(const DictConfig& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:anyq.DictConfig)
  if (GOOGLE_PREDICT_TRUE(&from != this)) {
    UnsafeMergeFrom(from);
  } else {
    MergeFromFail(__LINE__);
  }
}

void DictConfig::UnsafeMergeFrom(const DictConfig& from) {
  GOOGLE_DCHECK(&from != this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_name()) {
      set_has_name();
      name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
    }
    if (from.has_type()) {
      set_has_type();
      type_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.type_);
    }
    if (from.has_path()) {
      set_has_path();
      path_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.path_);
    }
    if (from.has_blob_name()) {
      set_has_blob_name();
      blob_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.blob_name_);
    }
    if (from.has_is_reload_able()) {
      set_is_reload_able(from.is_reload_able());
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::UnknownFieldSet::MergeToInternalMetdata(
      from.unknown_fields(), &_internal_metadata_);
  }
}

void DictConfig::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:anyq.DictConfig)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void DictConfig::CopyFrom(const DictConfig& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:anyq.DictConfig)
  if (&from == this) return;
  Clear();
  UnsafeMergeFrom(from);
}

bool DictConfig::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000007) != 0x00000007) return false;

  return true;
}

void DictConfig::Swap(DictConfig* other) {
  if (other == this) return;
  InternalSwap(other);
}
void DictConfig::InternalSwap(DictConfig* other) {
  name_.Swap(&other->name_);
  type_.Swap(&other->type_);
  path_.Swap(&other->path_);
  blob_name_.Swap(&other->blob_name_);
  std::swap(is_reload_able_, other->is_reload_able_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata DictConfig::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = DictConfig_descriptor_;
  metadata.reflection = DictConfig_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// DictConfig

// required string name = 1;
bool DictConfig::has_name() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void DictConfig::set_has_name() {
  _has_bits_[0] |= 0x00000001u;
}
void DictConfig::clear_has_name() {
  _has_bits_[0] &= ~0x00000001u;
}
void DictConfig::clear_name() {
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_name();
}
const ::std::string& DictConfig::name() const {
  // @@protoc_insertion_point(field_get:anyq.DictConfig.name)
  return name_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void DictConfig::set_name(const ::std::string& value) {
  set_has_name();
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:anyq.DictConfig.name)
}
void DictConfig::set_name(const char* value) {
  set_has_name();
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:anyq.DictConfig.name)
}
void DictConfig::set_name(const char* value, size_t size) {
  set_has_name();
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:anyq.DictConfig.name)
}
::std::string* DictConfig::mutable_name() {
  set_has_name();
  // @@protoc_insertion_point(field_mutable:anyq.DictConfig.name)
  return name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* DictConfig::release_name() {
  // @@protoc_insertion_point(field_release:anyq.DictConfig.name)
  clear_has_name();
  return name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void DictConfig::set_allocated_name(::std::string* name) {
  if (name != NULL) {
    set_has_name();
  } else {
    clear_has_name();
  }
  name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), name);
  // @@protoc_insertion_point(field_set_allocated:anyq.DictConfig.name)
}

// required string type = 2;
bool DictConfig::has_type() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void DictConfig::set_has_type() {
  _has_bits_[0] |= 0x00000002u;
}
void DictConfig::clear_has_type() {
  _has_bits_[0] &= ~0x00000002u;
}
void DictConfig::clear_type() {
  type_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_type();
}
const ::std::string& DictConfig::type() const {
  // @@protoc_insertion_point(field_get:anyq.DictConfig.type)
  return type_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void DictConfig::set_type(const ::std::string& value) {
  set_has_type();
  type_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:anyq.DictConfig.type)
}
void DictConfig::set_type(const char* value) {
  set_has_type();
  type_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:anyq.DictConfig.type)
}
void DictConfig::set_type(const char* value, size_t size) {
  set_has_type();
  type_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:anyq.DictConfig.type)
}
::std::string* DictConfig::mutable_type() {
  set_has_type();
  // @@protoc_insertion_point(field_mutable:anyq.DictConfig.type)
  return type_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* DictConfig::release_type() {
  // @@protoc_insertion_point(field_release:anyq.DictConfig.type)
  clear_has_type();
  return type_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void DictConfig::set_allocated_type(::std::string* type) {
  if (type != NULL) {
    set_has_type();
  } else {
    clear_has_type();
  }
  type_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), type);
  // @@protoc_insertion_point(field_set_allocated:anyq.DictConfig.type)
}

// required string path = 3;
bool DictConfig::has_path() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
void DictConfig::set_has_path() {
  _has_bits_[0] |= 0x00000004u;
}
void DictConfig::clear_has_path() {
  _has_bits_[0] &= ~0x00000004u;
}
void DictConfig::clear_path() {
  path_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_path();
}
const ::std::string& DictConfig::path() const {
  // @@protoc_insertion_point(field_get:anyq.DictConfig.path)
  return path_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void DictConfig::set_path(const ::std::string& value) {
  set_has_path();
  path_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:anyq.DictConfig.path)
}
void DictConfig::set_path(const char* value) {
  set_has_path();
  path_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:anyq.DictConfig.path)
}
void DictConfig::set_path(const char* value, size_t size) {
  set_has_path();
  path_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:anyq.DictConfig.path)
}
::std::string* DictConfig::mutable_path() {
  set_has_path();
  // @@protoc_insertion_point(field_mutable:anyq.DictConfig.path)
  return path_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* DictConfig::release_path() {
  // @@protoc_insertion_point(field_release:anyq.DictConfig.path)
  clear_has_path();
  return path_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void DictConfig::set_allocated_path(::std::string* path) {
  if (path != NULL) {
    set_has_path();
  } else {
    clear_has_path();
  }
  path_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), path);
  // @@protoc_insertion_point(field_set_allocated:anyq.DictConfig.path)
}

// optional string blob_name = 4;
bool DictConfig::has_blob_name() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
void DictConfig::set_has_blob_name() {
  _has_bits_[0] |= 0x00000008u;
}
void DictConfig::clear_has_blob_name() {
  _has_bits_[0] &= ~0x00000008u;
}
void DictConfig::clear_blob_name() {
  blob_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_blob_name();
}
const ::std::string& DictConfig::blob_name() const {
  // @@protoc_insertion_point(field_get:anyq.DictConfig.blob_name)
  return blob_name_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void DictConfig::set_blob_name(const ::std::string& value) {
  set_has_blob_name();
  blob_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:anyq.DictConfig.blob_name)
}
void DictConfig::set_blob_name(const char* value) {
  set_has_blob_name();
  blob_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:anyq.DictConfig.blob_name)
}
void DictConfig::set_blob_name(const char* value, size_t size) {
  set_has_blob_name();
  blob_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:anyq.DictConfig.blob_name)
}
::std::string* DictConfig::mutable_blob_name() {
  set_has_blob_name();
  // @@protoc_insertion_point(field_mutable:anyq.DictConfig.blob_name)
  return blob_name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* DictConfig::release_blob_name() {
  // @@protoc_insertion_point(field_release:anyq.DictConfig.blob_name)
  clear_has_blob_name();
  return blob_name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void DictConfig::set_allocated_blob_name(::std::string* blob_name) {
  if (blob_name != NULL) {
    set_has_blob_name();
  } else {
    clear_has_blob_name();
  }
  blob_name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), blob_name);
  // @@protoc_insertion_point(field_set_allocated:anyq.DictConfig.blob_name)
}

// optional bool is_reload_able = 5;
bool DictConfig::has_is_reload_able() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
void DictConfig::set_has_is_reload_able() {
  _has_bits_[0] |= 0x00000010u;
}
void DictConfig::clear_has_is_reload_able() {
  _has_bits_[0] &= ~0x00000010u;
}
void DictConfig::clear_is_reload_able() {
  is_reload_able_ = false;
  clear_has_is_reload_able();
}
bool DictConfig::is_reload_able() const {
  // @@protoc_insertion_point(field_get:anyq.DictConfig.is_reload_able)
  return is_reload_able_;
}
void DictConfig::set_is_reload_able(bool value) {
  set_has_is_reload_able();
  is_reload_able_ = value;
  // @@protoc_insertion_point(field_set:anyq.DictConfig.is_reload_able)
}

inline const DictConfig* DictConfig::internal_default_instance() {
  return &DictConfig_default_instance_.get();
}
#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int DictManagerConfig::kNameFieldNumber;
const int DictManagerConfig::kDictConfigFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

DictManagerConfig::DictManagerConfig()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (this != internal_default_instance()) protobuf_InitDefaults_anyq_2eproto();
  SharedCtor();
  // @@protoc_insertion_point(constructor:anyq.DictManagerConfig)
}

void DictManagerConfig::InitAsDefaultInstance() {
}

DictManagerConfig::DictManagerConfig(const DictManagerConfig& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  UnsafeMergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:anyq.DictManagerConfig)
}

void DictManagerConfig::SharedCtor() {
  _cached_size_ = 0;
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

DictManagerConfig::~DictManagerConfig() {
  // @@protoc_insertion_point(destructor:anyq.DictManagerConfig)
  SharedDtor();
}

void DictManagerConfig::SharedDtor() {
  name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void DictManagerConfig::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* DictManagerConfig::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return DictManagerConfig_descriptor_;
}

const DictManagerConfig& DictManagerConfig::default_instance() {
  protobuf_InitDefaults_anyq_2eproto();
  return *internal_default_instance();
}

::google::protobuf::internal::ExplicitlyConstructed<DictManagerConfig> DictManagerConfig_default_instance_;

DictManagerConfig* DictManagerConfig::New(::google::protobuf::Arena* arena) const {
  DictManagerConfig* n = new DictManagerConfig;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void DictManagerConfig::Clear() {
// @@protoc_insertion_point(message_clear_start:anyq.DictManagerConfig)
  if (has_name()) {
    name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  dict_config_.Clear();
  _has_bits_.Clear();
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool DictManagerConfig::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:anyq.DictManagerConfig)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required string name = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->name().data(), this->name().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "anyq.DictManagerConfig.name");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_dict_config;
        break;
      }

      // repeated .anyq.DictConfig dict_config = 2;
      case 2: {
        if (tag == 18) {
         parse_dict_config:
          DO_(input->IncrementRecursionDepth());
         parse_loop_dict_config:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtualNoRecursionDepth(
                input, add_dict_config()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_loop_dict_config;
        input->UnsafeDecrementRecursionDepth();
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:anyq.DictManagerConfig)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:anyq.DictManagerConfig)
  return false;
#undef DO_
}

void DictManagerConfig::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:anyq.DictManagerConfig)
  // required string name = 1;
  if (has_name()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->name().data(), this->name().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "anyq.DictManagerConfig.name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->name(), output);
  }

  // repeated .anyq.DictConfig dict_config = 2;
  for (unsigned int i = 0, n = this->dict_config_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->dict_config(i), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:anyq.DictManagerConfig)
}

::google::protobuf::uint8* DictManagerConfig::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:anyq.DictManagerConfig)
  // required string name = 1;
  if (has_name()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->name().data(), this->name().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "anyq.DictManagerConfig.name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->name(), target);
  }

  // repeated .anyq.DictConfig dict_config = 2;
  for (unsigned int i = 0, n = this->dict_config_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        2, this->dict_config(i), false, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:anyq.DictManagerConfig)
  return target;
}

size_t DictManagerConfig::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:anyq.DictManagerConfig)
  size_t total_size = 0;

  // required string name = 1;
  if (has_name()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->name());
  }
  // repeated .anyq.DictConfig dict_config = 2;
  {
    unsigned int count = this->dict_config_size();
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->dict_config(i));
    }
  }

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void DictManagerConfig::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:anyq.DictManagerConfig)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const DictManagerConfig* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const DictManagerConfig>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:anyq.DictManagerConfig)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:anyq.DictManagerConfig)
    UnsafeMergeFrom(*source);
  }
}

void DictManagerConfig::MergeFrom(const DictManagerConfig& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:anyq.DictManagerConfig)
  if (GOOGLE_PREDICT_TRUE(&from != this)) {
    UnsafeMergeFrom(from);
  } else {
    MergeFromFail(__LINE__);
  }
}

void DictManagerConfig::UnsafeMergeFrom(const DictManagerConfig& from) {
  GOOGLE_DCHECK(&from != this);
  dict_config_.MergeFrom(from.dict_config_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_name()) {
      set_has_name();
      name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::UnknownFieldSet::MergeToInternalMetdata(
      from.unknown_fields(), &_internal_metadata_);
  }
}

void DictManagerConfig::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:anyq.DictManagerConfig)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void DictManagerConfig::CopyFrom(const DictManagerConfig& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:anyq.DictManagerConfig)
  if (&from == this) return;
  Clear();
  UnsafeMergeFrom(from);
}

bool DictManagerConfig::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;

  if (!::google::protobuf::internal::AllAreInitialized(this->dict_config())) return false;
  return true;
}

void DictManagerConfig::Swap(DictManagerConfig* other) {
  if (other == this) return;
  InternalSwap(other);
}
void DictManagerConfig::InternalSwap(DictManagerConfig* other) {
  name_.Swap(&other->name_);
  dict_config_.UnsafeArenaSwap(&other->dict_config_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata DictManagerConfig::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = DictManagerConfig_descriptor_;
  metadata.reflection = DictManagerConfig_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// DictManagerConfig

// required string name = 1;
bool DictManagerConfig::has_name() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void DictManagerConfig::set_has_name() {
  _has_bits_[0] |= 0x00000001u;
}
void DictManagerConfig::clear_has_name() {
  _has_bits_[0] &= ~0x00000001u;
}
void DictManagerConfig::clear_name() {
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_name();
}
const ::std::string& DictManagerConfig::name() const {
  // @@protoc_insertion_point(field_get:anyq.DictManagerConfig.name)
  return name_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void DictManagerConfig::set_name(const ::std::string& value) {
  set_has_name();
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:anyq.DictManagerConfig.name)
}
void DictManagerConfig::set_name(const char* value) {
  set_has_name();
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:anyq.DictManagerConfig.name)
}
void DictManagerConfig::set_name(const char* value, size_t size) {
  set_has_name();
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:anyq.DictManagerConfig.name)
}
::std::string* DictManagerConfig::mutable_name() {
  set_has_name();
  // @@protoc_insertion_point(field_mutable:anyq.DictManagerConfig.name)
  return name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* DictManagerConfig::release_name() {
  // @@protoc_insertion_point(field_release:anyq.DictManagerConfig.name)
  clear_has_name();
  return name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void DictManagerConfig::set_allocated_name(::std::string* name) {
  if (name != NULL) {
    set_has_name();
  } else {
    clear_has_name();
  }
  name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), name);
  // @@protoc_insertion_point(field_set_allocated:anyq.DictManagerConfig.name)
}

// repeated .anyq.DictConfig dict_config = 2;
int DictManagerConfig::dict_config_size() const {
  return dict_config_.size();
}
void DictManagerConfig::clear_dict_config() {
  dict_config_.Clear();
}
const ::anyq::DictConfig& DictManagerConfig::dict_config(int index) const {
  // @@protoc_insertion_point(field_get:anyq.DictManagerConfig.dict_config)
  return dict_config_.Get(index);
}
::anyq::DictConfig* DictManagerConfig::mutable_dict_config(int index) {
  // @@protoc_insertion_point(field_mutable:anyq.DictManagerConfig.dict_config)
  return dict_config_.Mutable(index);
}
::anyq::DictConfig* DictManagerConfig::add_dict_config() {
  // @@protoc_insertion_point(field_add:anyq.DictManagerConfig.dict_config)
  return dict_config_.Add();
}
::google::protobuf::RepeatedPtrField< ::anyq::DictConfig >*
DictManagerConfig::mutable_dict_config() {
  // @@protoc_insertion_point(field_mutable_list:anyq.DictManagerConfig.dict_config)
  return &dict_config_;
}
const ::google::protobuf::RepeatedPtrField< ::anyq::DictConfig >&
DictManagerConfig::dict_config() const {
  // @@protoc_insertion_point(field_list:anyq.DictManagerConfig.dict_config)
  return dict_config_;
}

inline const DictManagerConfig* DictManagerConfig::internal_default_instance() {
  return &DictManagerConfig_default_instance_.get();
}
#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int AnalysisMethodConfig::kNameFieldNumber;
const int AnalysisMethodConfig::kTypeFieldNumber;
const int AnalysisMethodConfig::kUsingDictNameFieldNumber;
const int AnalysisMethodConfig::kNeedPhraseSegFieldNumber;
const int AnalysisMethodConfig::kQueryFeedNameFieldNumber;
const int AnalysisMethodConfig::kCandFeedNameFieldNumber;
const int AnalysisMethodConfig::kEmbeddingFetchNameFieldNumber;
const int AnalysisMethodConfig::kDimFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

AnalysisMethodConfig::AnalysisMethodConfig()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (this != internal_default_instance()) protobuf_InitDefaults_anyq_2eproto();
  SharedCtor();
  // @@protoc_insertion_point(constructor:anyq.AnalysisMethodConfig)
}

void AnalysisMethodConfig::InitAsDefaultInstance() {
}

AnalysisMethodConfig::AnalysisMethodConfig(const AnalysisMethodConfig& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  UnsafeMergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:anyq.AnalysisMethodConfig)
}

void AnalysisMethodConfig::SharedCtor() {
  _cached_size_ = 0;
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  type_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  using_dict_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  query_feed_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  cand_feed_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  embedding_fetch_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&need_phrase_seg_, 0, reinterpret_cast<char*>(&dim_) -
    reinterpret_cast<char*>(&need_phrase_seg_) + sizeof(dim_));
}

AnalysisMethodConfig::~AnalysisMethodConfig() {
  // @@protoc_insertion_point(destructor:anyq.AnalysisMethodConfig)
  SharedDtor();
}

void AnalysisMethodConfig::SharedDtor() {
  name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  type_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  using_dict_name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  query_feed_name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  cand_feed_name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  embedding_fetch_name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void AnalysisMethodConfig::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* AnalysisMethodConfig::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return AnalysisMethodConfig_descriptor_;
}

const AnalysisMethodConfig& AnalysisMethodConfig::default_instance() {
  protobuf_InitDefaults_anyq_2eproto();
  return *internal_default_instance();
}

::google::protobuf::internal::ExplicitlyConstructed<AnalysisMethodConfig> AnalysisMethodConfig_default_instance_;

AnalysisMethodConfig* AnalysisMethodConfig::New(::google::protobuf::Arena* arena) const {
  AnalysisMethodConfig* n = new AnalysisMethodConfig;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void AnalysisMethodConfig::Clear() {
// @@protoc_insertion_point(message_clear_start:anyq.AnalysisMethodConfig)
#if defined(__clang__)
#define ZR_HELPER_(f) \
  _Pragma("clang diagnostic push") \
  _Pragma("clang diagnostic ignored \"-Winvalid-offsetof\"") \
  __builtin_offsetof(AnalysisMethodConfig, f) \
  _Pragma("clang diagnostic pop")
#else
#define ZR_HELPER_(f) reinterpret_cast<char*>(\
  &reinterpret_cast<AnalysisMethodConfig*>(16)->f)
#endif

#define ZR_(first, last) do {\
  ::memset(&(first), 0,\
           ZR_HELPER_(last) - ZR_HELPER_(first) + sizeof(last));\
} while (0)

  if (_has_bits_[0 / 32] & 255u) {
    ZR_(need_phrase_seg_, dim_);
    if (has_name()) {
      name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
    if (has_type()) {
      type_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
    if (has_using_dict_name()) {
      using_dict_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
    if (has_query_feed_name()) {
      query_feed_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
    if (has_cand_feed_name()) {
      cand_feed_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
    if (has_embedding_fetch_name()) {
      embedding_fetch_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
  }

#undef ZR_HELPER_
#undef ZR_

  _has_bits_.Clear();
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool AnalysisMethodConfig::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:anyq.AnalysisMethodConfig)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required string name = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->name().data(), this->name().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "anyq.AnalysisMethodConfig.name");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_type;
        break;
      }

      // required string type = 2;
      case 2: {
        if (tag == 18) {
         parse_type:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_type()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->type().data(), this->type().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "anyq.AnalysisMethodConfig.type");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_using_dict_name;
        break;
      }

      // required string using_dict_name = 3;
      case 3: {
        if (tag == 26) {
         parse_using_dict_name:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_using_dict_name()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->using_dict_name().data(), this->using_dict_name().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "anyq.AnalysisMethodConfig.using_dict_name");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(32)) goto parse_need_phrase_seg;
        break;
      }

      // optional bool need_phrase_seg = 4;
      case 4: {
        if (tag == 32) {
         parse_need_phrase_seg:
          set_has_need_phrase_seg();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &need_phrase_seg_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(42)) goto parse_query_feed_name;
        break;
      }

      // optional string query_feed_name = 5;
      case 5: {
        if (tag == 42) {
         parse_query_feed_name:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_query_feed_name()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->query_feed_name().data(), this->query_feed_name().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "anyq.AnalysisMethodConfig.query_feed_name");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(50)) goto parse_cand_feed_name;
        break;
      }

      // optional string cand_feed_name = 6;
      case 6: {
        if (tag == 50) {
         parse_cand_feed_name:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_cand_feed_name()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->cand_feed_name().data(), this->cand_feed_name().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "anyq.AnalysisMethodConfig.cand_feed_name");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(58)) goto parse_embedding_fetch_name;
        break;
      }

      // optional string embedding_fetch_name = 7;
      case 7: {
        if (tag == 58) {
         parse_embedding_fetch_name:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_embedding_fetch_name()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->embedding_fetch_name().data(), this->embedding_fetch_name().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "anyq.AnalysisMethodConfig.embedding_fetch_name");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(64)) goto parse_dim;
        break;
      }

      // optional uint32 dim = 8;
      case 8: {
        if (tag == 64) {
         parse_dim:
          set_has_dim();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &dim_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:anyq.AnalysisMethodConfig)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:anyq.AnalysisMethodConfig)
  return false;
#undef DO_
}

void AnalysisMethodConfig::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:anyq.AnalysisMethodConfig)
  // required string name = 1;
  if (has_name()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->name().data(), this->name().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "anyq.AnalysisMethodConfig.name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->name(), output);
  }

  // required string type = 2;
  if (has_type()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->type().data(), this->type().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "anyq.AnalysisMethodConfig.type");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->type(), output);
  }

  // required string using_dict_name = 3;
  if (has_using_dict_name()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->using_dict_name().data(), this->using_dict_name().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "anyq.AnalysisMethodConfig.using_dict_name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->using_dict_name(), output);
  }

  // optional bool need_phrase_seg = 4;
  if (has_need_phrase_seg()) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(4, this->need_phrase_seg(), output);
  }

  // optional string query_feed_name = 5;
  if (has_query_feed_name()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->query_feed_name().data(), this->query_feed_name().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "anyq.AnalysisMethodConfig.query_feed_name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      5, this->query_feed_name(), output);
  }

  // optional string cand_feed_name = 6;
  if (has_cand_feed_name()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->cand_feed_name().data(), this->cand_feed_name().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "anyq.AnalysisMethodConfig.cand_feed_name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      6, this->cand_feed_name(), output);
  }

  // optional string embedding_fetch_name = 7;
  if (has_embedding_fetch_name()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->embedding_fetch_name().data(), this->embedding_fetch_name().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "anyq.AnalysisMethodConfig.embedding_fetch_name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      7, this->embedding_fetch_name(), output);
  }

  // optional uint32 dim = 8;
  if (has_dim()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(8, this->dim(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:anyq.AnalysisMethodConfig)
}

::google::protobuf::uint8* AnalysisMethodConfig::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:anyq.AnalysisMethodConfig)
  // required string name = 1;
  if (has_name()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->name().data(), this->name().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "anyq.AnalysisMethodConfig.name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->name(), target);
  }

  // required string type = 2;
  if (has_type()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->type().data(), this->type().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "anyq.AnalysisMethodConfig.type");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->type(), target);
  }

  // required string using_dict_name = 3;
  if (has_using_dict_name()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->using_dict_name().data(), this->using_dict_name().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "anyq.AnalysisMethodConfig.using_dict_name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->using_dict_name(), target);
  }

  // optional bool need_phrase_seg = 4;
  if (has_need_phrase_seg()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(4, this->need_phrase_seg(), target);
  }

  // optional string query_feed_name = 5;
  if (has_query_feed_name()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->query_feed_name().data(), this->query_feed_name().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "anyq.AnalysisMethodConfig.query_feed_name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        5, this->query_feed_name(), target);
  }

  // optional string cand_feed_name = 6;
  if (has_cand_feed_name()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->cand_feed_name().data(), this->cand_feed_name().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "anyq.AnalysisMethodConfig.cand_feed_name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        6, this->cand_feed_name(), target);
  }

  // optional string embedding_fetch_name = 7;
  if (has_embedding_fetch_name()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->embedding_fetch_name().data(), this->embedding_fetch_name().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "anyq.AnalysisMethodConfig.embedding_fetch_name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        7, this->embedding_fetch_name(), target);
  }

  // optional uint32 dim = 8;
  if (has_dim()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(8, this->dim(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:anyq.AnalysisMethodConfig)
  return target;
}

size_t AnalysisMethodConfig::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:anyq.AnalysisMethodConfig)
  size_t total_size = 0;

  if (has_name()) {
    // required string name = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->name());
  }

  if (has_type()) {
    // required string type = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->type());
  }

  if (has_using_dict_name()) {
    // required string using_dict_name = 3;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->using_dict_name());
  }

  return total_size;
}
size_t AnalysisMethodConfig::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:anyq.AnalysisMethodConfig)
  size_t total_size = 0;

  if (((_has_bits_[0] & 0x00000007) ^ 0x00000007) == 0) {  // All required fields are present.
    // required string name = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->name());

    // required string type = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->type());

    // required string using_dict_name = 3;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->using_dict_name());

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  if (_has_bits_[3 / 32] & 248u) {
    // optional bool need_phrase_seg = 4;
    if (has_need_phrase_seg()) {
      total_size += 1 + 1;
    }

    // optional string query_feed_name = 5;
    if (has_query_feed_name()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->query_feed_name());
    }

    // optional string cand_feed_name = 6;
    if (has_cand_feed_name()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->cand_feed_name());
    }

    // optional string embedding_fetch_name = 7;
    if (has_embedding_fetch_name()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->embedding_fetch_name());
    }

    // optional uint32 dim = 8;
    if (has_dim()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->dim());
    }

  }
  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void AnalysisMethodConfig::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:anyq.AnalysisMethodConfig)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const AnalysisMethodConfig* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const AnalysisMethodConfig>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:anyq.AnalysisMethodConfig)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:anyq.AnalysisMethodConfig)
    UnsafeMergeFrom(*source);
  }
}

void AnalysisMethodConfig::MergeFrom(const AnalysisMethodConfig& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:anyq.AnalysisMethodConfig)
  if (GOOGLE_PREDICT_TRUE(&from != this)) {
    UnsafeMergeFrom(from);
  } else {
    MergeFromFail(__LINE__);
  }
}

void AnalysisMethodConfig::UnsafeMergeFrom(const AnalysisMethodConfig& from) {
  GOOGLE_DCHECK(&from != this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_name()) {
      set_has_name();
      name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
    }
    if (from.has_type()) {
      set_has_type();
      type_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.type_);
    }
    if (from.has_using_dict_name()) {
      set_has_using_dict_name();
      using_dict_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.using_dict_name_);
    }
    if (from.has_need_phrase_seg()) {
      set_need_phrase_seg(from.need_phrase_seg());
    }
    if (from.has_query_feed_name()) {
      set_has_query_feed_name();
      query_feed_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.query_feed_name_);
    }
    if (from.has_cand_feed_name()) {
      set_has_cand_feed_name();
      cand_feed_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.cand_feed_name_);
    }
    if (from.has_embedding_fetch_name()) {
      set_has_embedding_fetch_name();
      embedding_fetch_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.embedding_fetch_name_);
    }
    if (from.has_dim()) {
      set_dim(from.dim());
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::UnknownFieldSet::MergeToInternalMetdata(
      from.unknown_fields(), &_internal_metadata_);
  }
}

void AnalysisMethodConfig::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:anyq.AnalysisMethodConfig)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void AnalysisMethodConfig::CopyFrom(const AnalysisMethodConfig& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:anyq.AnalysisMethodConfig)
  if (&from == this) return;
  Clear();
  UnsafeMergeFrom(from);
}

bool AnalysisMethodConfig::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000007) != 0x00000007) return false;

  return true;
}

void AnalysisMethodConfig::Swap(AnalysisMethodConfig* other) {
  if (other == this) return;
  InternalSwap(other);
}
void AnalysisMethodConfig::InternalSwap(AnalysisMethodConfig* other) {
  name_.Swap(&other->name_);
  type_.Swap(&other->type_);
  using_dict_name_.Swap(&other->using_dict_name_);
  std::swap(need_phrase_seg_, other->need_phrase_seg_);
  query_feed_name_.Swap(&other->query_feed_name_);
  cand_feed_name_.Swap(&other->cand_feed_name_);
  embedding_fetch_name_.Swap(&other->embedding_fetch_name_);
  std::swap(dim_, other->dim_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata AnalysisMethodConfig::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = AnalysisMethodConfig_descriptor_;
  metadata.reflection = AnalysisMethodConfig_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// AnalysisMethodConfig

// required string name = 1;
bool AnalysisMethodConfig::has_name() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void AnalysisMethodConfig::set_has_name() {
  _has_bits_[0] |= 0x00000001u;
}
void AnalysisMethodConfig::clear_has_name() {
  _has_bits_[0] &= ~0x00000001u;
}
void AnalysisMethodConfig::clear_name() {
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_name();
}
const ::std::string& AnalysisMethodConfig::name() const {
  // @@protoc_insertion_point(field_get:anyq.AnalysisMethodConfig.name)
  return name_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void AnalysisMethodConfig::set_name(const ::std::string& value) {
  set_has_name();
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:anyq.AnalysisMethodConfig.name)
}
void AnalysisMethodConfig::set_name(const char* value) {
  set_has_name();
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:anyq.AnalysisMethodConfig.name)
}
void AnalysisMethodConfig::set_name(const char* value, size_t size) {
  set_has_name();
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:anyq.AnalysisMethodConfig.name)
}
::std::string* AnalysisMethodConfig::mutable_name() {
  set_has_name();
  // @@protoc_insertion_point(field_mutable:anyq.AnalysisMethodConfig.name)
  return name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* AnalysisMethodConfig::release_name() {
  // @@protoc_insertion_point(field_release:anyq.AnalysisMethodConfig.name)
  clear_has_name();
  return name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void AnalysisMethodConfig::set_allocated_name(::std::string* name) {
  if (name != NULL) {
    set_has_name();
  } else {
    clear_has_name();
  }
  name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), name);
  // @@protoc_insertion_point(field_set_allocated:anyq.AnalysisMethodConfig.name)
}

// required string type = 2;
bool AnalysisMethodConfig::has_type() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void AnalysisMethodConfig::set_has_type() {
  _has_bits_[0] |= 0x00000002u;
}
void AnalysisMethodConfig::clear_has_type() {
  _has_bits_[0] &= ~0x00000002u;
}
void AnalysisMethodConfig::clear_type() {
  type_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_type();
}
const ::std::string& AnalysisMethodConfig::type() const {
  // @@protoc_insertion_point(field_get:anyq.AnalysisMethodConfig.type)
  return type_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void AnalysisMethodConfig::set_type(const ::std::string& value) {
  set_has_type();
  type_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:anyq.AnalysisMethodConfig.type)
}
void AnalysisMethodConfig::set_type(const char* value) {
  set_has_type();
  type_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:anyq.AnalysisMethodConfig.type)
}
void AnalysisMethodConfig::set_type(const char* value, size_t size) {
  set_has_type();
  type_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:anyq.AnalysisMethodConfig.type)
}
::std::string* AnalysisMethodConfig::mutable_type() {
  set_has_type();
  // @@protoc_insertion_point(field_mutable:anyq.AnalysisMethodConfig.type)
  return type_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* AnalysisMethodConfig::release_type() {
  // @@protoc_insertion_point(field_release:anyq.AnalysisMethodConfig.type)
  clear_has_type();
  return type_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void AnalysisMethodConfig::set_allocated_type(::std::string* type) {
  if (type != NULL) {
    set_has_type();
  } else {
    clear_has_type();
  }
  type_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), type);
  // @@protoc_insertion_point(field_set_allocated:anyq.AnalysisMethodConfig.type)
}

// required string using_dict_name = 3;
bool AnalysisMethodConfig::has_using_dict_name() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
void AnalysisMethodConfig::set_has_using_dict_name() {
  _has_bits_[0] |= 0x00000004u;
}
void AnalysisMethodConfig::clear_has_using_dict_name() {
  _has_bits_[0] &= ~0x00000004u;
}
void AnalysisMethodConfig::clear_using_dict_name() {
  using_dict_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_using_dict_name();
}
const ::std::string& AnalysisMethodConfig::using_dict_name() const {
  // @@protoc_insertion_point(field_get:anyq.AnalysisMethodConfig.using_dict_name)
  return using_dict_name_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void AnalysisMethodConfig::set_using_dict_name(const ::std::string& value) {
  set_has_using_dict_name();
  using_dict_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:anyq.AnalysisMethodConfig.using_dict_name)
}
void AnalysisMethodConfig::set_using_dict_name(const char* value) {
  set_has_using_dict_name();
  using_dict_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:anyq.AnalysisMethodConfig.using_dict_name)
}
void AnalysisMethodConfig::set_using_dict_name(const char* value, size_t size) {
  set_has_using_dict_name();
  using_dict_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:anyq.AnalysisMethodConfig.using_dict_name)
}
::std::string* AnalysisMethodConfig::mutable_using_dict_name() {
  set_has_using_dict_name();
  // @@protoc_insertion_point(field_mutable:anyq.AnalysisMethodConfig.using_dict_name)
  return using_dict_name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* AnalysisMethodConfig::release_using_dict_name() {
  // @@protoc_insertion_point(field_release:anyq.AnalysisMethodConfig.using_dict_name)
  clear_has_using_dict_name();
  return using_dict_name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void AnalysisMethodConfig::set_allocated_using_dict_name(::std::string* using_dict_name) {
  if (using_dict_name != NULL) {
    set_has_using_dict_name();
  } else {
    clear_has_using_dict_name();
  }
  using_dict_name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), using_dict_name);
  // @@protoc_insertion_point(field_set_allocated:anyq.AnalysisMethodConfig.using_dict_name)
}

// optional bool need_phrase_seg = 4;
bool AnalysisMethodConfig::has_need_phrase_seg() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
void AnalysisMethodConfig::set_has_need_phrase_seg() {
  _has_bits_[0] |= 0x00000008u;
}
void AnalysisMethodConfig::clear_has_need_phrase_seg() {
  _has_bits_[0] &= ~0x00000008u;
}
void AnalysisMethodConfig::clear_need_phrase_seg() {
  need_phrase_seg_ = false;
  clear_has_need_phrase_seg();
}
bool AnalysisMethodConfig::need_phrase_seg() const {
  // @@protoc_insertion_point(field_get:anyq.AnalysisMethodConfig.need_phrase_seg)
  return need_phrase_seg_;
}
void AnalysisMethodConfig::set_need_phrase_seg(bool value) {
  set_has_need_phrase_seg();
  need_phrase_seg_ = value;
  // @@protoc_insertion_point(field_set:anyq.AnalysisMethodConfig.need_phrase_seg)
}

// optional string query_feed_name = 5;
bool AnalysisMethodConfig::has_query_feed_name() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
void AnalysisMethodConfig::set_has_query_feed_name() {
  _has_bits_[0] |= 0x00000010u;
}
void AnalysisMethodConfig::clear_has_query_feed_name() {
  _has_bits_[0] &= ~0x00000010u;
}
void AnalysisMethodConfig::clear_query_feed_name() {
  query_feed_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_query_feed_name();
}
const ::std::string& AnalysisMethodConfig::query_feed_name() const {
  // @@protoc_insertion_point(field_get:anyq.AnalysisMethodConfig.query_feed_name)
  return query_feed_name_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void AnalysisMethodConfig::set_query_feed_name(const ::std::string& value) {
  set_has_query_feed_name();
  query_feed_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:anyq.AnalysisMethodConfig.query_feed_name)
}
void AnalysisMethodConfig::set_query_feed_name(const char* value) {
  set_has_query_feed_name();
  query_feed_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:anyq.AnalysisMethodConfig.query_feed_name)
}
void AnalysisMethodConfig::set_query_feed_name(const char* value, size_t size) {
  set_has_query_feed_name();
  query_feed_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:anyq.AnalysisMethodConfig.query_feed_name)
}
::std::string* AnalysisMethodConfig::mutable_query_feed_name() {
  set_has_query_feed_name();
  // @@protoc_insertion_point(field_mutable:anyq.AnalysisMethodConfig.query_feed_name)
  return query_feed_name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* AnalysisMethodConfig::release_query_feed_name() {
  // @@protoc_insertion_point(field_release:anyq.AnalysisMethodConfig.query_feed_name)
  clear_has_query_feed_name();
  return query_feed_name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void AnalysisMethodConfig::set_allocated_query_feed_name(::std::string* query_feed_name) {
  if (query_feed_name != NULL) {
    set_has_query_feed_name();
  } else {
    clear_has_query_feed_name();
  }
  query_feed_name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), query_feed_name);
  // @@protoc_insertion_point(field_set_allocated:anyq.AnalysisMethodConfig.query_feed_name)
}

// optional string cand_feed_name = 6;
bool AnalysisMethodConfig::has_cand_feed_name() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
void AnalysisMethodConfig::set_has_cand_feed_name() {
  _has_bits_[0] |= 0x00000020u;
}
void AnalysisMethodConfig::clear_has_cand_feed_name() {
  _has_bits_[0] &= ~0x00000020u;
}
void AnalysisMethodConfig::clear_cand_feed_name() {
  cand_feed_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_cand_feed_name();
}
const ::std::string& AnalysisMethodConfig::cand_feed_name() const {
  // @@protoc_insertion_point(field_get:anyq.AnalysisMethodConfig.cand_feed_name)
  return cand_feed_name_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void AnalysisMethodConfig::set_cand_feed_name(const ::std::string& value) {
  set_has_cand_feed_name();
  cand_feed_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:anyq.AnalysisMethodConfig.cand_feed_name)
}
void AnalysisMethodConfig::set_cand_feed_name(const char* value) {
  set_has_cand_feed_name();
  cand_feed_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:anyq.AnalysisMethodConfig.cand_feed_name)
}
void AnalysisMethodConfig::set_cand_feed_name(const char* value, size_t size) {
  set_has_cand_feed_name();
  cand_feed_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:anyq.AnalysisMethodConfig.cand_feed_name)
}
::std::string* AnalysisMethodConfig::mutable_cand_feed_name() {
  set_has_cand_feed_name();
  // @@protoc_insertion_point(field_mutable:anyq.AnalysisMethodConfig.cand_feed_name)
  return cand_feed_name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* AnalysisMethodConfig::release_cand_feed_name() {
  // @@protoc_insertion_point(field_release:anyq.AnalysisMethodConfig.cand_feed_name)
  clear_has_cand_feed_name();
  return cand_feed_name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void AnalysisMethodConfig::set_allocated_cand_feed_name(::std::string* cand_feed_name) {
  if (cand_feed_name != NULL) {
    set_has_cand_feed_name();
  } else {
    clear_has_cand_feed_name();
  }
  cand_feed_name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), cand_feed_name);
  // @@protoc_insertion_point(field_set_allocated:anyq.AnalysisMethodConfig.cand_feed_name)
}

// optional string embedding_fetch_name = 7;
bool AnalysisMethodConfig::has_embedding_fetch_name() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
void AnalysisMethodConfig::set_has_embedding_fetch_name() {
  _has_bits_[0] |= 0x00000040u;
}
void AnalysisMethodConfig::clear_has_embedding_fetch_name() {
  _has_bits_[0] &= ~0x00000040u;
}
void AnalysisMethodConfig::clear_embedding_fetch_name() {
  embedding_fetch_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_embedding_fetch_name();
}
const ::std::string& AnalysisMethodConfig::embedding_fetch_name() const {
  // @@protoc_insertion_point(field_get:anyq.AnalysisMethodConfig.embedding_fetch_name)
  return embedding_fetch_name_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void AnalysisMethodConfig::set_embedding_fetch_name(const ::std::string& value) {
  set_has_embedding_fetch_name();
  embedding_fetch_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:anyq.AnalysisMethodConfig.embedding_fetch_name)
}
void AnalysisMethodConfig::set_embedding_fetch_name(const char* value) {
  set_has_embedding_fetch_name();
  embedding_fetch_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:anyq.AnalysisMethodConfig.embedding_fetch_name)
}
void AnalysisMethodConfig::set_embedding_fetch_name(const char* value, size_t size) {
  set_has_embedding_fetch_name();
  embedding_fetch_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:anyq.AnalysisMethodConfig.embedding_fetch_name)
}
::std::string* AnalysisMethodConfig::mutable_embedding_fetch_name() {
  set_has_embedding_fetch_name();
  // @@protoc_insertion_point(field_mutable:anyq.AnalysisMethodConfig.embedding_fetch_name)
  return embedding_fetch_name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* AnalysisMethodConfig::release_embedding_fetch_name() {
  // @@protoc_insertion_point(field_release:anyq.AnalysisMethodConfig.embedding_fetch_name)
  clear_has_embedding_fetch_name();
  return embedding_fetch_name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void AnalysisMethodConfig::set_allocated_embedding_fetch_name(::std::string* embedding_fetch_name) {
  if (embedding_fetch_name != NULL) {
    set_has_embedding_fetch_name();
  } else {
    clear_has_embedding_fetch_name();
  }
  embedding_fetch_name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), embedding_fetch_name);
  // @@protoc_insertion_point(field_set_allocated:anyq.AnalysisMethodConfig.embedding_fetch_name)
}

// optional uint32 dim = 8;
bool AnalysisMethodConfig::has_dim() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
void AnalysisMethodConfig::set_has_dim() {
  _has_bits_[0] |= 0x00000080u;
}
void AnalysisMethodConfig::clear_has_dim() {
  _has_bits_[0] &= ~0x00000080u;
}
void AnalysisMethodConfig::clear_dim() {
  dim_ = 0u;
  clear_has_dim();
}
::google::protobuf::uint32 AnalysisMethodConfig::dim() const {
  // @@protoc_insertion_point(field_get:anyq.AnalysisMethodConfig.dim)
  return dim_;
}
void AnalysisMethodConfig::set_dim(::google::protobuf::uint32 value) {
  set_has_dim();
  dim_ = value;
  // @@protoc_insertion_point(field_set:anyq.AnalysisMethodConfig.dim)
}

inline const AnalysisMethodConfig* AnalysisMethodConfig::internal_default_instance() {
  return &AnalysisMethodConfig_default_instance_.get();
}
#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int AnalysisConfig::kNameFieldNumber;
const int AnalysisConfig::kHideTagFieldNumber;
const int AnalysisConfig::kAnalysisMethodFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

AnalysisConfig::AnalysisConfig()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (this != internal_default_instance()) protobuf_InitDefaults_anyq_2eproto();
  SharedCtor();
  // @@protoc_insertion_point(constructor:anyq.AnalysisConfig)
}

void AnalysisConfig::InitAsDefaultInstance() {
}

AnalysisConfig::AnalysisConfig(const AnalysisConfig& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  UnsafeMergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:anyq.AnalysisConfig)
}

void AnalysisConfig::SharedCtor() {
  _cached_size_ = 0;
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  hide_tag_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

AnalysisConfig::~AnalysisConfig() {
  // @@protoc_insertion_point(destructor:anyq.AnalysisConfig)
  SharedDtor();
}

void AnalysisConfig::SharedDtor() {
  name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  hide_tag_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void AnalysisConfig::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* AnalysisConfig::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return AnalysisConfig_descriptor_;
}

const AnalysisConfig& AnalysisConfig::default_instance() {
  protobuf_InitDefaults_anyq_2eproto();
  return *internal_default_instance();
}

::google::protobuf::internal::ExplicitlyConstructed<AnalysisConfig> AnalysisConfig_default_instance_;

AnalysisConfig* AnalysisConfig::New(::google::protobuf::Arena* arena) const {
  AnalysisConfig* n = new AnalysisConfig;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void AnalysisConfig::Clear() {
// @@protoc_insertion_point(message_clear_start:anyq.AnalysisConfig)
  if (_has_bits_[0 / 32] & 3u) {
    if (has_name()) {
      name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
    if (has_hide_tag()) {
      hide_tag_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
  }
  analysis_method_.Clear();
  _has_bits_.Clear();
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool AnalysisConfig::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:anyq.AnalysisConfig)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string name = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->name().data(), this->name().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "anyq.AnalysisConfig.name");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_hide_tag;
        break;
      }

      // optional string hide_tag = 2;
      case 2: {
        if (tag == 18) {
         parse_hide_tag:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_hide_tag()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->hide_tag().data(), this->hide_tag().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "anyq.AnalysisConfig.hide_tag");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_analysis_method;
        break;
      }

      // repeated .anyq.AnalysisMethodConfig analysis_method = 3;
      case 3: {
        if (tag == 26) {
         parse_analysis_method:
          DO_(input->IncrementRecursionDepth());
         parse_loop_analysis_method:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtualNoRecursionDepth(
                input, add_analysis_method()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_loop_analysis_method;
        input->UnsafeDecrementRecursionDepth();
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:anyq.AnalysisConfig)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:anyq.AnalysisConfig)
  return false;
#undef DO_
}

void AnalysisConfig::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:anyq.AnalysisConfig)
  // optional string name = 1;
  if (has_name()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->name().data(), this->name().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "anyq.AnalysisConfig.name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->name(), output);
  }

  // optional string hide_tag = 2;
  if (has_hide_tag()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->hide_tag().data(), this->hide_tag().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "anyq.AnalysisConfig.hide_tag");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->hide_tag(), output);
  }

  // repeated .anyq.AnalysisMethodConfig analysis_method = 3;
  for (unsigned int i = 0, n = this->analysis_method_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->analysis_method(i), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:anyq.AnalysisConfig)
}

::google::protobuf::uint8* AnalysisConfig::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:anyq.AnalysisConfig)
  // optional string name = 1;
  if (has_name()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->name().data(), this->name().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "anyq.AnalysisConfig.name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->name(), target);
  }

  // optional string hide_tag = 2;
  if (has_hide_tag()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->hide_tag().data(), this->hide_tag().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "anyq.AnalysisConfig.hide_tag");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->hide_tag(), target);
  }

  // repeated .anyq.AnalysisMethodConfig analysis_method = 3;
  for (unsigned int i = 0, n = this->analysis_method_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        3, this->analysis_method(i), false, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:anyq.AnalysisConfig)
  return target;
}

size_t AnalysisConfig::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:anyq.AnalysisConfig)
  size_t total_size = 0;

  if (_has_bits_[0 / 32] & 3u) {
    // optional string name = 1;
    if (has_name()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->name());
    }

    // optional string hide_tag = 2;
    if (has_hide_tag()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->hide_tag());
    }

  }
  // repeated .anyq.AnalysisMethodConfig analysis_method = 3;
  {
    unsigned int count = this->analysis_method_size();
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->analysis_method(i));
    }
  }

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void AnalysisConfig::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:anyq.AnalysisConfig)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const AnalysisConfig* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const AnalysisConfig>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:anyq.AnalysisConfig)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:anyq.AnalysisConfig)
    UnsafeMergeFrom(*source);
  }
}

void AnalysisConfig::MergeFrom(const AnalysisConfig& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:anyq.AnalysisConfig)
  if (GOOGLE_PREDICT_TRUE(&from != this)) {
    UnsafeMergeFrom(from);
  } else {
    MergeFromFail(__LINE__);
  }
}

void AnalysisConfig::UnsafeMergeFrom(const AnalysisConfig& from) {
  GOOGLE_DCHECK(&from != this);
  analysis_method_.MergeFrom(from.analysis_method_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_name()) {
      set_has_name();
      name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
    }
    if (from.has_hide_tag()) {
      set_has_hide_tag();
      hide_tag_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.hide_tag_);
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::UnknownFieldSet::MergeToInternalMetdata(
      from.unknown_fields(), &_internal_metadata_);
  }
}

void AnalysisConfig::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:anyq.AnalysisConfig)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void AnalysisConfig::CopyFrom(const AnalysisConfig& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:anyq.AnalysisConfig)
  if (&from == this) return;
  Clear();
  UnsafeMergeFrom(from);
}

bool AnalysisConfig::IsInitialized() const {

  if (!::google::protobuf::internal::AllAreInitialized(this->analysis_method())) return false;
  return true;
}

void AnalysisConfig::Swap(AnalysisConfig* other) {
  if (other == this) return;
  InternalSwap(other);
}
void AnalysisConfig::InternalSwap(AnalysisConfig* other) {
  name_.Swap(&other->name_);
  hide_tag_.Swap(&other->hide_tag_);
  analysis_method_.UnsafeArenaSwap(&other->analysis_method_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata AnalysisConfig::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = AnalysisConfig_descriptor_;
  metadata.reflection = AnalysisConfig_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// AnalysisConfig

// optional string name = 1;
bool AnalysisConfig::has_name() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void AnalysisConfig::set_has_name() {
  _has_bits_[0] |= 0x00000001u;
}
void AnalysisConfig::clear_has_name() {
  _has_bits_[0] &= ~0x00000001u;
}
void AnalysisConfig::clear_name() {
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_name();
}
const ::std::string& AnalysisConfig::name() const {
  // @@protoc_insertion_point(field_get:anyq.AnalysisConfig.name)
  return name_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void AnalysisConfig::set_name(const ::std::string& value) {
  set_has_name();
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:anyq.AnalysisConfig.name)
}
void AnalysisConfig::set_name(const char* value) {
  set_has_name();
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:anyq.AnalysisConfig.name)
}
void AnalysisConfig::set_name(const char* value, size_t size) {
  set_has_name();
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:anyq.AnalysisConfig.name)
}
::std::string* AnalysisConfig::mutable_name() {
  set_has_name();
  // @@protoc_insertion_point(field_mutable:anyq.AnalysisConfig.name)
  return name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* AnalysisConfig::release_name() {
  // @@protoc_insertion_point(field_release:anyq.AnalysisConfig.name)
  clear_has_name();
  return name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void AnalysisConfig::set_allocated_name(::std::string* name) {
  if (name != NULL) {
    set_has_name();
  } else {
    clear_has_name();
  }
  name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), name);
  // @@protoc_insertion_point(field_set_allocated:anyq.AnalysisConfig.name)
}

// optional string hide_tag = 2;
bool AnalysisConfig::has_hide_tag() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void AnalysisConfig::set_has_hide_tag() {
  _has_bits_[0] |= 0x00000002u;
}
void AnalysisConfig::clear_has_hide_tag() {
  _has_bits_[0] &= ~0x00000002u;
}
void AnalysisConfig::clear_hide_tag() {
  hide_tag_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_hide_tag();
}
const ::std::string& AnalysisConfig::hide_tag() const {
  // @@protoc_insertion_point(field_get:anyq.AnalysisConfig.hide_tag)
  return hide_tag_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void AnalysisConfig::set_hide_tag(const ::std::string& value) {
  set_has_hide_tag();
  hide_tag_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:anyq.AnalysisConfig.hide_tag)
}
void AnalysisConfig::set_hide_tag(const char* value) {
  set_has_hide_tag();
  hide_tag_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:anyq.AnalysisConfig.hide_tag)
}
void AnalysisConfig::set_hide_tag(const char* value, size_t size) {
  set_has_hide_tag();
  hide_tag_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:anyq.AnalysisConfig.hide_tag)
}
::std::string* AnalysisConfig::mutable_hide_tag() {
  set_has_hide_tag();
  // @@protoc_insertion_point(field_mutable:anyq.AnalysisConfig.hide_tag)
  return hide_tag_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* AnalysisConfig::release_hide_tag() {
  // @@protoc_insertion_point(field_release:anyq.AnalysisConfig.hide_tag)
  clear_has_hide_tag();
  return hide_tag_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void AnalysisConfig::set_allocated_hide_tag(::std::string* hide_tag) {
  if (hide_tag != NULL) {
    set_has_hide_tag();
  } else {
    clear_has_hide_tag();
  }
  hide_tag_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), hide_tag);
  // @@protoc_insertion_point(field_set_allocated:anyq.AnalysisConfig.hide_tag)
}

// repeated .anyq.AnalysisMethodConfig analysis_method = 3;
int AnalysisConfig::analysis_method_size() const {
  return analysis_method_.size();
}
void AnalysisConfig::clear_analysis_method() {
  analysis_method_.Clear();
}
const ::anyq::AnalysisMethodConfig& AnalysisConfig::analysis_method(int index) const {
  // @@protoc_insertion_point(field_get:anyq.AnalysisConfig.analysis_method)
  return analysis_method_.Get(index);
}
::anyq::AnalysisMethodConfig* AnalysisConfig::mutable_analysis_method(int index) {
  // @@protoc_insertion_point(field_mutable:anyq.AnalysisConfig.analysis_method)
  return analysis_method_.Mutable(index);
}
::anyq::AnalysisMethodConfig* AnalysisConfig::add_analysis_method() {
  // @@protoc_insertion_point(field_add:anyq.AnalysisConfig.analysis_method)
  return analysis_method_.Add();
}
::google::protobuf::RepeatedPtrField< ::anyq::AnalysisMethodConfig >*
AnalysisConfig::mutable_analysis_method() {
  // @@protoc_insertion_point(field_mutable_list:anyq.AnalysisConfig.analysis_method)
  return &analysis_method_;
}
const ::google::protobuf::RepeatedPtrField< ::anyq::AnalysisMethodConfig >&
AnalysisConfig::analysis_method() const {
  // @@protoc_insertion_point(field_list:anyq.AnalysisConfig.analysis_method)
  return analysis_method_;
}

inline const AnalysisConfig* AnalysisConfig::internal_default_instance() {
  return &AnalysisConfig_default_instance_.get();
}
#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int SolrQConfig::kTypeFieldNumber;
const int SolrQConfig::kNameFieldNumber;
const int SolrQConfig::kSolrFieldFieldNumber;
const int SolrQConfig::kSourceNameFieldNumber;
const int SolrQConfig::kWeightDictFieldNumber;
const int SolrQConfig::kCompareTypeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

SolrQConfig::SolrQConfig()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (this != internal_default_instance()) protobuf_InitDefaults_anyq_2eproto();
  SharedCtor();
  // @@protoc_insertion_point(constructor:anyq.SolrQConfig)
}

void SolrQConfig::InitAsDefaultInstance() {
}

SolrQConfig::SolrQConfig(const SolrQConfig& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  UnsafeMergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:anyq.SolrQConfig)
}

void SolrQConfig::SharedCtor() {
  _cached_size_ = 0;
  type_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  solr_field_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  source_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  weight_dict_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  compare_type_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

SolrQConfig::~SolrQConfig() {
  // @@protoc_insertion_point(destructor:anyq.SolrQConfig)
  SharedDtor();
}

void SolrQConfig::SharedDtor() {
  type_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  solr_field_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  source_name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  weight_dict_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  compare_type_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void SolrQConfig::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* SolrQConfig::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return SolrQConfig_descriptor_;
}

const SolrQConfig& SolrQConfig::default_instance() {
  protobuf_InitDefaults_anyq_2eproto();
  return *internal_default_instance();
}

::google::protobuf::internal::ExplicitlyConstructed<SolrQConfig> SolrQConfig_default_instance_;

SolrQConfig* SolrQConfig::New(::google::protobuf::Arena* arena) const {
  SolrQConfig* n = new SolrQConfig;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void SolrQConfig::Clear() {
// @@protoc_insertion_point(message_clear_start:anyq.SolrQConfig)
  if (_has_bits_[0 / 32] & 63u) {
    if (has_type()) {
      type_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
    if (has_name()) {
      name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
    if (has_solr_field()) {
      solr_field_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
    if (has_source_name()) {
      source_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
    if (has_weight_dict()) {
      weight_dict_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
    if (has_compare_type()) {
      compare_type_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
  }
  _has_bits_.Clear();
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool SolrQConfig::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:anyq.SolrQConfig)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required string type = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_type()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->type().data(), this->type().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "anyq.SolrQConfig.type");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_name;
        break;
      }

      // required string name = 2;
      case 2: {
        if (tag == 18) {
         parse_name:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->name().data(), this->name().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "anyq.SolrQConfig.name");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_solr_field;
        break;
      }

      // required string solr_field = 3;
      case 3: {
        if (tag == 26) {
         parse_solr_field:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_solr_field()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->solr_field().data(), this->solr_field().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "anyq.SolrQConfig.solr_field");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(34)) goto parse_source_name;
        break;
      }

      // required string source_name = 4;
      case 4: {
        if (tag == 34) {
         parse_source_name:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_source_name()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->source_name().data(), this->source_name().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "anyq.SolrQConfig.source_name");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(42)) goto parse_weight_dict;
        break;
      }

      // optional string weight_dict = 5;
      case 5: {
        if (tag == 42) {
         parse_weight_dict:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_weight_dict()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->weight_dict().data(), this->weight_dict().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "anyq.SolrQConfig.weight_dict");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(50)) goto parse_compare_type;
        break;
      }

      // optional string compare_type = 6;
      case 6: {
        if (tag == 50) {
         parse_compare_type:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_compare_type()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->compare_type().data(), this->compare_type().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "anyq.SolrQConfig.compare_type");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:anyq.SolrQConfig)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:anyq.SolrQConfig)
  return false;
#undef DO_
}

void SolrQConfig::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:anyq.SolrQConfig)
  // required string type = 1;
  if (has_type()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->type().data(), this->type().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "anyq.SolrQConfig.type");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->type(), output);
  }

  // required string name = 2;
  if (has_name()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->name().data(), this->name().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "anyq.SolrQConfig.name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->name(), output);
  }

  // required string solr_field = 3;
  if (has_solr_field()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->solr_field().data(), this->solr_field().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "anyq.SolrQConfig.solr_field");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->solr_field(), output);
  }

  // required string source_name = 4;
  if (has_source_name()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->source_name().data(), this->source_name().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "anyq.SolrQConfig.source_name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->source_name(), output);
  }

  // optional string weight_dict = 5;
  if (has_weight_dict()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->weight_dict().data(), this->weight_dict().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "anyq.SolrQConfig.weight_dict");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      5, this->weight_dict(), output);
  }

  // optional string compare_type = 6;
  if (has_compare_type()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->compare_type().data(), this->compare_type().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "anyq.SolrQConfig.compare_type");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      6, this->compare_type(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:anyq.SolrQConfig)
}

::google::protobuf::uint8* SolrQConfig::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:anyq.SolrQConfig)
  // required string type = 1;
  if (has_type()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->type().data(), this->type().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "anyq.SolrQConfig.type");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->type(), target);
  }

  // required string name = 2;
  if (has_name()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->name().data(), this->name().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "anyq.SolrQConfig.name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->name(), target);
  }

  // required string solr_field = 3;
  if (has_solr_field()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->solr_field().data(), this->solr_field().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "anyq.SolrQConfig.solr_field");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->solr_field(), target);
  }

  // required string source_name = 4;
  if (has_source_name()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->source_name().data(), this->source_name().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "anyq.SolrQConfig.source_name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->source_name(), target);
  }

  // optional string weight_dict = 5;
  if (has_weight_dict()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->weight_dict().data(), this->weight_dict().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "anyq.SolrQConfig.weight_dict");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        5, this->weight_dict(), target);
  }

  // optional string compare_type = 6;
  if (has_compare_type()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->compare_type().data(), this->compare_type().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "anyq.SolrQConfig.compare_type");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        6, this->compare_type(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:anyq.SolrQConfig)
  return target;
}

size_t SolrQConfig::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:anyq.SolrQConfig)
  size_t total_size = 0;

  if (has_type()) {
    // required string type = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->type());
  }

  if (has_name()) {
    // required string name = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->name());
  }

  if (has_solr_field()) {
    // required string solr_field = 3;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->solr_field());
  }

  if (has_source_name()) {
    // required string source_name = 4;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->source_name());
  }

  return total_size;
}
size_t SolrQConfig::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:anyq.SolrQConfig)
  size_t total_size = 0;

  if (((_has_bits_[0] & 0x0000000f) ^ 0x0000000f) == 0) {  // All required fields are present.
    // required string type = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->type());

    // required string name = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->name());

    // required string solr_field = 3;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->solr_field());

    // required string source_name = 4;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->source_name());

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  if (_has_bits_[4 / 32] & 48u) {
    // optional string weight_dict = 5;
    if (has_weight_dict()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->weight_dict());
    }

    // optional string compare_type = 6;
    if (has_compare_type()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->compare_type());
    }

  }
  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void SolrQConfig::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:anyq.SolrQConfig)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const SolrQConfig* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const SolrQConfig>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:anyq.SolrQConfig)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:anyq.SolrQConfig)
    UnsafeMergeFrom(*source);
  }
}

void SolrQConfig::MergeFrom(const SolrQConfig& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:anyq.SolrQConfig)
  if (GOOGLE_PREDICT_TRUE(&from != this)) {
    UnsafeMergeFrom(from);
  } else {
    MergeFromFail(__LINE__);
  }
}

void SolrQConfig::UnsafeMergeFrom(const SolrQConfig& from) {
  GOOGLE_DCHECK(&from != this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_type()) {
      set_has_type();
      type_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.type_);
    }
    if (from.has_name()) {
      set_has_name();
      name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
    }
    if (from.has_solr_field()) {
      set_has_solr_field();
      solr_field_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.solr_field_);
    }
    if (from.has_source_name()) {
      set_has_source_name();
      source_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.source_name_);
    }
    if (from.has_weight_dict()) {
      set_has_weight_dict();
      weight_dict_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.weight_dict_);
    }
    if (from.has_compare_type()) {
      set_has_compare_type();
      compare_type_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.compare_type_);
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::UnknownFieldSet::MergeToInternalMetdata(
      from.unknown_fields(), &_internal_metadata_);
  }
}

void SolrQConfig::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:anyq.SolrQConfig)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SolrQConfig::CopyFrom(const SolrQConfig& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:anyq.SolrQConfig)
  if (&from == this) return;
  Clear();
  UnsafeMergeFrom(from);
}

bool SolrQConfig::IsInitialized() const {
  if ((_has_bits_[0] & 0x0000000f) != 0x0000000f) return false;

  return true;
}

void SolrQConfig::Swap(SolrQConfig* other) {
  if (other == this) return;
  InternalSwap(other);
}
void SolrQConfig::InternalSwap(SolrQConfig* other) {
  type_.Swap(&other->type_);
  name_.Swap(&other->name_);
  solr_field_.Swap(&other->solr_field_);
  source_name_.Swap(&other->source_name_);
  weight_dict_.Swap(&other->weight_dict_);
  compare_type_.Swap(&other->compare_type_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata SolrQConfig::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = SolrQConfig_descriptor_;
  metadata.reflection = SolrQConfig_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// SolrQConfig

// required string type = 1;
bool SolrQConfig::has_type() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void SolrQConfig::set_has_type() {
  _has_bits_[0] |= 0x00000001u;
}
void SolrQConfig::clear_has_type() {
  _has_bits_[0] &= ~0x00000001u;
}
void SolrQConfig::clear_type() {
  type_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_type();
}
const ::std::string& SolrQConfig::type() const {
  // @@protoc_insertion_point(field_get:anyq.SolrQConfig.type)
  return type_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void SolrQConfig::set_type(const ::std::string& value) {
  set_has_type();
  type_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:anyq.SolrQConfig.type)
}
void SolrQConfig::set_type(const char* value) {
  set_has_type();
  type_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:anyq.SolrQConfig.type)
}
void SolrQConfig::set_type(const char* value, size_t size) {
  set_has_type();
  type_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:anyq.SolrQConfig.type)
}
::std::string* SolrQConfig::mutable_type() {
  set_has_type();
  // @@protoc_insertion_point(field_mutable:anyq.SolrQConfig.type)
  return type_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* SolrQConfig::release_type() {
  // @@protoc_insertion_point(field_release:anyq.SolrQConfig.type)
  clear_has_type();
  return type_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void SolrQConfig::set_allocated_type(::std::string* type) {
  if (type != NULL) {
    set_has_type();
  } else {
    clear_has_type();
  }
  type_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), type);
  // @@protoc_insertion_point(field_set_allocated:anyq.SolrQConfig.type)
}

// required string name = 2;
bool SolrQConfig::has_name() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void SolrQConfig::set_has_name() {
  _has_bits_[0] |= 0x00000002u;
}
void SolrQConfig::clear_has_name() {
  _has_bits_[0] &= ~0x00000002u;
}
void SolrQConfig::clear_name() {
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_name();
}
const ::std::string& SolrQConfig::name() const {
  // @@protoc_insertion_point(field_get:anyq.SolrQConfig.name)
  return name_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void SolrQConfig::set_name(const ::std::string& value) {
  set_has_name();
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:anyq.SolrQConfig.name)
}
void SolrQConfig::set_name(const char* value) {
  set_has_name();
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:anyq.SolrQConfig.name)
}
void SolrQConfig::set_name(const char* value, size_t size) {
  set_has_name();
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:anyq.SolrQConfig.name)
}
::std::string* SolrQConfig::mutable_name() {
  set_has_name();
  // @@protoc_insertion_point(field_mutable:anyq.SolrQConfig.name)
  return name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* SolrQConfig::release_name() {
  // @@protoc_insertion_point(field_release:anyq.SolrQConfig.name)
  clear_has_name();
  return name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void SolrQConfig::set_allocated_name(::std::string* name) {
  if (name != NULL) {
    set_has_name();
  } else {
    clear_has_name();
  }
  name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), name);
  // @@protoc_insertion_point(field_set_allocated:anyq.SolrQConfig.name)
}

// required string solr_field = 3;
bool SolrQConfig::has_solr_field() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
void SolrQConfig::set_has_solr_field() {
  _has_bits_[0] |= 0x00000004u;
}
void SolrQConfig::clear_has_solr_field() {
  _has_bits_[0] &= ~0x00000004u;
}
void SolrQConfig::clear_solr_field() {
  solr_field_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_solr_field();
}
const ::std::string& SolrQConfig::solr_field() const {
  // @@protoc_insertion_point(field_get:anyq.SolrQConfig.solr_field)
  return solr_field_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void SolrQConfig::set_solr_field(const ::std::string& value) {
  set_has_solr_field();
  solr_field_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:anyq.SolrQConfig.solr_field)
}
void SolrQConfig::set_solr_field(const char* value) {
  set_has_solr_field();
  solr_field_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:anyq.SolrQConfig.solr_field)
}
void SolrQConfig::set_solr_field(const char* value, size_t size) {
  set_has_solr_field();
  solr_field_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:anyq.SolrQConfig.solr_field)
}
::std::string* SolrQConfig::mutable_solr_field() {
  set_has_solr_field();
  // @@protoc_insertion_point(field_mutable:anyq.SolrQConfig.solr_field)
  return solr_field_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* SolrQConfig::release_solr_field() {
  // @@protoc_insertion_point(field_release:anyq.SolrQConfig.solr_field)
  clear_has_solr_field();
  return solr_field_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void SolrQConfig::set_allocated_solr_field(::std::string* solr_field) {
  if (solr_field != NULL) {
    set_has_solr_field();
  } else {
    clear_has_solr_field();
  }
  solr_field_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), solr_field);
  // @@protoc_insertion_point(field_set_allocated:anyq.SolrQConfig.solr_field)
}

// required string source_name = 4;
bool SolrQConfig::has_source_name() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
void SolrQConfig::set_has_source_name() {
  _has_bits_[0] |= 0x00000008u;
}
void SolrQConfig::clear_has_source_name() {
  _has_bits_[0] &= ~0x00000008u;
}
void SolrQConfig::clear_source_name() {
  source_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_source_name();
}
const ::std::string& SolrQConfig::source_name() const {
  // @@protoc_insertion_point(field_get:anyq.SolrQConfig.source_name)
  return source_name_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void SolrQConfig::set_source_name(const ::std::string& value) {
  set_has_source_name();
  source_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:anyq.SolrQConfig.source_name)
}
void SolrQConfig::set_source_name(const char* value) {
  set_has_source_name();
  source_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:anyq.SolrQConfig.source_name)
}
void SolrQConfig::set_source_name(const char* value, size_t size) {
  set_has_source_name();
  source_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:anyq.SolrQConfig.source_name)
}
::std::string* SolrQConfig::mutable_source_name() {
  set_has_source_name();
  // @@protoc_insertion_point(field_mutable:anyq.SolrQConfig.source_name)
  return source_name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* SolrQConfig::release_source_name() {
  // @@protoc_insertion_point(field_release:anyq.SolrQConfig.source_name)
  clear_has_source_name();
  return source_name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void SolrQConfig::set_allocated_source_name(::std::string* source_name) {
  if (source_name != NULL) {
    set_has_source_name();
  } else {
    clear_has_source_name();
  }
  source_name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), source_name);
  // @@protoc_insertion_point(field_set_allocated:anyq.SolrQConfig.source_name)
}

// optional string weight_dict = 5;
bool SolrQConfig::has_weight_dict() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
void SolrQConfig::set_has_weight_dict() {
  _has_bits_[0] |= 0x00000010u;
}
void SolrQConfig::clear_has_weight_dict() {
  _has_bits_[0] &= ~0x00000010u;
}
void SolrQConfig::clear_weight_dict() {
  weight_dict_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_weight_dict();
}
const ::std::string& SolrQConfig::weight_dict() const {
  // @@protoc_insertion_point(field_get:anyq.SolrQConfig.weight_dict)
  return weight_dict_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void SolrQConfig::set_weight_dict(const ::std::string& value) {
  set_has_weight_dict();
  weight_dict_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:anyq.SolrQConfig.weight_dict)
}
void SolrQConfig::set_weight_dict(const char* value) {
  set_has_weight_dict();
  weight_dict_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:anyq.SolrQConfig.weight_dict)
}
void SolrQConfig::set_weight_dict(const char* value, size_t size) {
  set_has_weight_dict();
  weight_dict_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:anyq.SolrQConfig.weight_dict)
}
::std::string* SolrQConfig::mutable_weight_dict() {
  set_has_weight_dict();
  // @@protoc_insertion_point(field_mutable:anyq.SolrQConfig.weight_dict)
  return weight_dict_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* SolrQConfig::release_weight_dict() {
  // @@protoc_insertion_point(field_release:anyq.SolrQConfig.weight_dict)
  clear_has_weight_dict();
  return weight_dict_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void SolrQConfig::set_allocated_weight_dict(::std::string* weight_dict) {
  if (weight_dict != NULL) {
    set_has_weight_dict();
  } else {
    clear_has_weight_dict();
  }
  weight_dict_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), weight_dict);
  // @@protoc_insertion_point(field_set_allocated:anyq.SolrQConfig.weight_dict)
}

// optional string compare_type = 6;
bool SolrQConfig::has_compare_type() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
void SolrQConfig::set_has_compare_type() {
  _has_bits_[0] |= 0x00000020u;
}
void SolrQConfig::clear_has_compare_type() {
  _has_bits_[0] &= ~0x00000020u;
}
void SolrQConfig::clear_compare_type() {
  compare_type_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_compare_type();
}
const ::std::string& SolrQConfig::compare_type() const {
  // @@protoc_insertion_point(field_get:anyq.SolrQConfig.compare_type)
  return compare_type_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void SolrQConfig::set_compare_type(const ::std::string& value) {
  set_has_compare_type();
  compare_type_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:anyq.SolrQConfig.compare_type)
}
void SolrQConfig::set_compare_type(const char* value) {
  set_has_compare_type();
  compare_type_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:anyq.SolrQConfig.compare_type)
}
void SolrQConfig::set_compare_type(const char* value, size_t size) {
  set_has_compare_type();
  compare_type_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:anyq.SolrQConfig.compare_type)
}
::std::string* SolrQConfig::mutable_compare_type() {
  set_has_compare_type();
  // @@protoc_insertion_point(field_mutable:anyq.SolrQConfig.compare_type)
  return compare_type_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* SolrQConfig::release_compare_type() {
  // @@protoc_insertion_point(field_release:anyq.SolrQConfig.compare_type)
  clear_has_compare_type();
  return compare_type_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void SolrQConfig::set_allocated_compare_type(::std::string* compare_type) {
  if (compare_type != NULL) {
    set_has_compare_type();
  } else {
    clear_has_compare_type();
  }
  compare_type_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), compare_type);
  // @@protoc_insertion_point(field_set_allocated:anyq.SolrQConfig.compare_type)
}

inline const SolrQConfig* SolrQConfig::internal_default_instance() {
  return &SolrQConfig_default_instance_.get();
}
#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int RetrievalPluginConfig::kTypeFieldNumber;
const int RetrievalPluginConfig::kNameFieldNumber;
const int RetrievalPluginConfig::kNumResultFieldNumber;
const int RetrievalPluginConfig::kSearchHostFieldNumber;
const int RetrievalPluginConfig::kSearchPortFieldNumber;
const int RetrievalPluginConfig::kEngineNameFieldNumber;
const int RetrievalPluginConfig::kSolrResultFlFieldNumber;
const int RetrievalPluginConfig::kSolrQFieldNumber;
const int RetrievalPluginConfig::kVectorSizeFieldNumber;
const int RetrievalPluginConfig::kSearchKFieldNumber;
const int RetrievalPluginConfig::kIndexPathFieldNumber;
const int RetrievalPluginConfig::kUsingDictNameFieldNumber;
const int RetrievalPluginConfig::kTypeNameFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

RetrievalPluginConfig::RetrievalPluginConfig()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (this != internal_default_instance()) protobuf_InitDefaults_anyq_2eproto();
  SharedCtor();
  // @@protoc_insertion_point(constructor:anyq.RetrievalPluginConfig)
}

void RetrievalPluginConfig::InitAsDefaultInstance() {
}

RetrievalPluginConfig::RetrievalPluginConfig(const RetrievalPluginConfig& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  UnsafeMergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:anyq.RetrievalPluginConfig)
}

void RetrievalPluginConfig::SharedCtor() {
  _cached_size_ = 0;
  type_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  search_host_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  engine_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  solr_result_fl_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  index_path_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  using_dict_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  type_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&num_result_, 0, reinterpret_cast<char*>(&search_k_) -
    reinterpret_cast<char*>(&num_result_) + sizeof(search_k_));
}

RetrievalPluginConfig::~RetrievalPluginConfig() {
  // @@protoc_insertion_point(destructor:anyq.RetrievalPluginConfig)
  SharedDtor();
}

void RetrievalPluginConfig::SharedDtor() {
  type_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  search_host_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  engine_name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  solr_result_fl_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  index_path_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  using_dict_name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  type_name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void RetrievalPluginConfig::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* RetrievalPluginConfig::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return RetrievalPluginConfig_descriptor_;
}

const RetrievalPluginConfig& RetrievalPluginConfig::default_instance() {
  protobuf_InitDefaults_anyq_2eproto();
  return *internal_default_instance();
}

::google::protobuf::internal::ExplicitlyConstructed<RetrievalPluginConfig> RetrievalPluginConfig_default_instance_;

RetrievalPluginConfig* RetrievalPluginConfig::New(::google::protobuf::Arena* arena) const {
  RetrievalPluginConfig* n = new RetrievalPluginConfig;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void RetrievalPluginConfig::Clear() {
// @@protoc_insertion_point(message_clear_start:anyq.RetrievalPluginConfig)
#if defined(__clang__)
#define ZR_HELPER_(f) \
  _Pragma("clang diagnostic push") \
  _Pragma("clang diagnostic ignored \"-Winvalid-offsetof\"") \
  __builtin_offsetof(RetrievalPluginConfig, f) \
  _Pragma("clang diagnostic pop")
#else
#define ZR_HELPER_(f) reinterpret_cast<char*>(\
  &reinterpret_cast<RetrievalPluginConfig*>(16)->f)
#endif

#define ZR_(first, last) do {\
  ::memset(&(first), 0,\
           ZR_HELPER_(last) - ZR_HELPER_(first) + sizeof(last));\
} while (0)

  if (_has_bits_[0 / 32] & 127u) {
    ZR_(num_result_, search_port_);
    if (has_type()) {
      type_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
    if (has_name()) {
      name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
    if (has_search_host()) {
      search_host_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
    if (has_engine_name()) {
      engine_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
    if (has_solr_result_fl()) {
      solr_result_fl_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
  }
  if (_has_bits_[8 / 32] & 7936u) {
    ZR_(vector_size_, search_k_);
    if (has_index_path()) {
      index_path_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
    if (has_using_dict_name()) {
      using_dict_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
    if (has_type_name()) {
      type_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
  }

#undef ZR_HELPER_
#undef ZR_

  solr_q_.Clear();
  _has_bits_.Clear();
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool RetrievalPluginConfig::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:anyq.RetrievalPluginConfig)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required string type = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_type()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->type().data(), this->type().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "anyq.RetrievalPluginConfig.type");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_name;
        break;
      }

      // required string name = 2;
      case 2: {
        if (tag == 18) {
         parse_name:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->name().data(), this->name().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "anyq.RetrievalPluginConfig.name");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_num_result;
        break;
      }

      // required uint32 num_result = 3;
      case 3: {
        if (tag == 24) {
         parse_num_result:
          set_has_num_result();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &num_result_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(34)) goto parse_search_host;
        break;
      }

      // optional string search_host = 4;
      case 4: {
        if (tag == 34) {
         parse_search_host:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_search_host()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->search_host().data(), this->search_host().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "anyq.RetrievalPluginConfig.search_host");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(40)) goto parse_search_port;
        break;
      }

      // optional uint32 search_port = 5;
      case 5: {
        if (tag == 40) {
         parse_search_port:
          set_has_search_port();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &search_port_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(50)) goto parse_engine_name;
        break;
      }

      // optional string engine_name = 6;
      case 6: {
        if (tag == 50) {
         parse_engine_name:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_engine_name()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->engine_name().data(), this->engine_name().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "anyq.RetrievalPluginConfig.engine_name");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(58)) goto parse_solr_result_fl;
        break;
      }

      // optional string solr_result_fl = 7;
      case 7: {
        if (tag == 58) {
         parse_solr_result_fl:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_solr_result_fl()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->solr_result_fl().data(), this->solr_result_fl().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "anyq.RetrievalPluginConfig.solr_result_fl");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(66)) goto parse_solr_q;
        break;
      }

      // repeated .anyq.SolrQConfig solr_q = 8;
      case 8: {
        if (tag == 66) {
         parse_solr_q:
          DO_(input->IncrementRecursionDepth());
         parse_loop_solr_q:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtualNoRecursionDepth(
                input, add_solr_q()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(66)) goto parse_loop_solr_q;
        input->UnsafeDecrementRecursionDepth();
        if (input->ExpectTag(72)) goto parse_vector_size;
        break;
      }

      // optional uint32 vector_size = 9;
      case 9: {
        if (tag == 72) {
         parse_vector_size:
          set_has_vector_size();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &vector_size_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(80)) goto parse_search_k;
        break;
      }

      // optional uint32 search_k = 10;
      case 10: {
        if (tag == 80) {
         parse_search_k:
          set_has_search_k();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &search_k_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(90)) goto parse_index_path;
        break;
      }

      // optional string index_path = 11;
      case 11: {
        if (tag == 90) {
         parse_index_path:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_index_path()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->index_path().data(), this->index_path().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "anyq.RetrievalPluginConfig.index_path");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(98)) goto parse_using_dict_name;
        break;
      }

      // optional string using_dict_name = 12;
      case 12: {
        if (tag == 98) {
         parse_using_dict_name:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_using_dict_name()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->using_dict_name().data(), this->using_dict_name().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "anyq.RetrievalPluginConfig.using_dict_name");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(114)) goto parse_type_name;
        break;
      }

      // optional string type_name = 14;
      case 14: {
        if (tag == 114) {
         parse_type_name:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_type_name()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->type_name().data(), this->type_name().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "anyq.RetrievalPluginConfig.type_name");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:anyq.RetrievalPluginConfig)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:anyq.RetrievalPluginConfig)
  return false;
#undef DO_
}

void RetrievalPluginConfig::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:anyq.RetrievalPluginConfig)
  // required string type = 1;
  if (has_type()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->type().data(), this->type().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "anyq.RetrievalPluginConfig.type");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->type(), output);
  }

  // required string name = 2;
  if (has_name()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->name().data(), this->name().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "anyq.RetrievalPluginConfig.name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->name(), output);
  }

  // required uint32 num_result = 3;
  if (has_num_result()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->num_result(), output);
  }

  // optional string search_host = 4;
  if (has_search_host()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->search_host().data(), this->search_host().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "anyq.RetrievalPluginConfig.search_host");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->search_host(), output);
  }

  // optional uint32 search_port = 5;
  if (has_search_port()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(5, this->search_port(), output);
  }

  // optional string engine_name = 6;
  if (has_engine_name()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->engine_name().data(), this->engine_name().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "anyq.RetrievalPluginConfig.engine_name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      6, this->engine_name(), output);
  }

  // optional string solr_result_fl = 7;
  if (has_solr_result_fl()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->solr_result_fl().data(), this->solr_result_fl().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "anyq.RetrievalPluginConfig.solr_result_fl");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      7, this->solr_result_fl(), output);
  }

  // repeated .anyq.SolrQConfig solr_q = 8;
  for (unsigned int i = 0, n = this->solr_q_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      8, this->solr_q(i), output);
  }

  // optional uint32 vector_size = 9;
  if (has_vector_size()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(9, this->vector_size(), output);
  }

  // optional uint32 search_k = 10;
  if (has_search_k()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(10, this->search_k(), output);
  }

  // optional string index_path = 11;
  if (has_index_path()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->index_path().data(), this->index_path().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "anyq.RetrievalPluginConfig.index_path");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      11, this->index_path(), output);
  }

  // optional string using_dict_name = 12;
  if (has_using_dict_name()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->using_dict_name().data(), this->using_dict_name().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "anyq.RetrievalPluginConfig.using_dict_name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      12, this->using_dict_name(), output);
  }

  // optional string type_name = 14;
  if (has_type_name()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->type_name().data(), this->type_name().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "anyq.RetrievalPluginConfig.type_name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      14, this->type_name(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:anyq.RetrievalPluginConfig)
}

::google::protobuf::uint8* RetrievalPluginConfig::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:anyq.RetrievalPluginConfig)
  // required string type = 1;
  if (has_type()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->type().data(), this->type().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "anyq.RetrievalPluginConfig.type");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->type(), target);
  }

  // required string name = 2;
  if (has_name()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->name().data(), this->name().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "anyq.RetrievalPluginConfig.name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->name(), target);
  }

  // required uint32 num_result = 3;
  if (has_num_result()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->num_result(), target);
  }

  // optional string search_host = 4;
  if (has_search_host()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->search_host().data(), this->search_host().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "anyq.RetrievalPluginConfig.search_host");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->search_host(), target);
  }

  // optional uint32 search_port = 5;
  if (has_search_port()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(5, this->search_port(), target);
  }

  // optional string engine_name = 6;
  if (has_engine_name()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->engine_name().data(), this->engine_name().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "anyq.RetrievalPluginConfig.engine_name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        6, this->engine_name(), target);
  }

  // optional string solr_result_fl = 7;
  if (has_solr_result_fl()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->solr_result_fl().data(), this->solr_result_fl().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "anyq.RetrievalPluginConfig.solr_result_fl");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        7, this->solr_result_fl(), target);
  }

  // repeated .anyq.SolrQConfig solr_q = 8;
  for (unsigned int i = 0, n = this->solr_q_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        8, this->solr_q(i), false, target);
  }

  // optional uint32 vector_size = 9;
  if (has_vector_size()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(9, this->vector_size(), target);
  }

  // optional uint32 search_k = 10;
  if (has_search_k()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(10, this->search_k(), target);
  }

  // optional string index_path = 11;
  if (has_index_path()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->index_path().data(), this->index_path().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "anyq.RetrievalPluginConfig.index_path");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        11, this->index_path(), target);
  }

  // optional string using_dict_name = 12;
  if (has_using_dict_name()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->using_dict_name().data(), this->using_dict_name().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "anyq.RetrievalPluginConfig.using_dict_name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        12, this->using_dict_name(), target);
  }

  // optional string type_name = 14;
  if (has_type_name()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->type_name().data(), this->type_name().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "anyq.RetrievalPluginConfig.type_name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        14, this->type_name(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:anyq.RetrievalPluginConfig)
  return target;
}

size_t RetrievalPluginConfig::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:anyq.RetrievalPluginConfig)
  size_t total_size = 0;

  if (has_type()) {
    // required string type = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->type());
  }

  if (has_name()) {
    // required string name = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->name());
  }

  if (has_num_result()) {
    // required uint32 num_result = 3;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->num_result());
  }

  return total_size;
}
size_t RetrievalPluginConfig::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:anyq.RetrievalPluginConfig)
  size_t total_size = 0;

  if (((_has_bits_[0] & 0x00000007) ^ 0x00000007) == 0) {  // All required fields are present.
    // required string type = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->type());

    // required string name = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->name());

    // required uint32 num_result = 3;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->num_result());

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  if (_has_bits_[3 / 32] & 120u) {
    // optional string search_host = 4;
    if (has_search_host()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->search_host());
    }

    // optional uint32 search_port = 5;
    if (has_search_port()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->search_port());
    }

    // optional string engine_name = 6;
    if (has_engine_name()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->engine_name());
    }

    // optional string solr_result_fl = 7;
    if (has_solr_result_fl()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->solr_result_fl());
    }

  }
  if (_has_bits_[8 / 32] & 7936u) {
    // optional uint32 vector_size = 9;
    if (has_vector_size()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->vector_size());
    }

    // optional uint32 search_k = 10;
    if (has_search_k()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->search_k());
    }

    // optional string index_path = 11;
    if (has_index_path()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->index_path());
    }

    // optional string using_dict_name = 12;
    if (has_using_dict_name()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->using_dict_name());
    }

    // optional string type_name = 14;
    if (has_type_name()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->type_name());
    }

  }
  // repeated .anyq.SolrQConfig solr_q = 8;
  {
    unsigned int count = this->solr_q_size();
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->solr_q(i));
    }
  }

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void RetrievalPluginConfig::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:anyq.RetrievalPluginConfig)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const RetrievalPluginConfig* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const RetrievalPluginConfig>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:anyq.RetrievalPluginConfig)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:anyq.RetrievalPluginConfig)
    UnsafeMergeFrom(*source);
  }
}

void RetrievalPluginConfig::MergeFrom(const RetrievalPluginConfig& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:anyq.RetrievalPluginConfig)
  if (GOOGLE_PREDICT_TRUE(&from != this)) {
    UnsafeMergeFrom(from);
  } else {
    MergeFromFail(__LINE__);
  }
}

void RetrievalPluginConfig::UnsafeMergeFrom(const RetrievalPluginConfig& from) {
  GOOGLE_DCHECK(&from != this);
  solr_q_.MergeFrom(from.solr_q_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_type()) {
      set_has_type();
      type_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.type_);
    }
    if (from.has_name()) {
      set_has_name();
      name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
    }
    if (from.has_num_result()) {
      set_num_result(from.num_result());
    }
    if (from.has_search_host()) {
      set_has_search_host();
      search_host_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.search_host_);
    }
    if (from.has_search_port()) {
      set_search_port(from.search_port());
    }
    if (from.has_engine_name()) {
      set_has_engine_name();
      engine_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.engine_name_);
    }
    if (from.has_solr_result_fl()) {
      set_has_solr_result_fl();
      solr_result_fl_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.solr_result_fl_);
    }
  }
  if (from._has_bits_[8 / 32] & (0xffu << (8 % 32))) {
    if (from.has_vector_size()) {
      set_vector_size(from.vector_size());
    }
    if (from.has_search_k()) {
      set_search_k(from.search_k());
    }
    if (from.has_index_path()) {
      set_has_index_path();
      index_path_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.index_path_);
    }
    if (from.has_using_dict_name()) {
      set_has_using_dict_name();
      using_dict_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.using_dict_name_);
    }
    if (from.has_type_name()) {
      set_has_type_name();
      type_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.type_name_);
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::UnknownFieldSet::MergeToInternalMetdata(
      from.unknown_fields(), &_internal_metadata_);
  }
}

void RetrievalPluginConfig::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:anyq.RetrievalPluginConfig)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void RetrievalPluginConfig::CopyFrom(const RetrievalPluginConfig& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:anyq.RetrievalPluginConfig)
  if (&from == this) return;
  Clear();
  UnsafeMergeFrom(from);
}

bool RetrievalPluginConfig::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000007) != 0x00000007) return false;

  if (!::google::protobuf::internal::AllAreInitialized(this->solr_q())) return false;
  return true;
}

void RetrievalPluginConfig::Swap(RetrievalPluginConfig* other) {
  if (other == this) return;
  InternalSwap(other);
}
void RetrievalPluginConfig::InternalSwap(RetrievalPluginConfig* other) {
  type_.Swap(&other->type_);
  name_.Swap(&other->name_);
  std::swap(num_result_, other->num_result_);
  search_host_.Swap(&other->search_host_);
  std::swap(search_port_, other->search_port_);
  engine_name_.Swap(&other->engine_name_);
  solr_result_fl_.Swap(&other->solr_result_fl_);
  solr_q_.UnsafeArenaSwap(&other->solr_q_);
  std::swap(vector_size_, other->vector_size_);
  std::swap(search_k_, other->search_k_);
  index_path_.Swap(&other->index_path_);
  using_dict_name_.Swap(&other->using_dict_name_);
  type_name_.Swap(&other->type_name_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata RetrievalPluginConfig::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = RetrievalPluginConfig_descriptor_;
  metadata.reflection = RetrievalPluginConfig_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// RetrievalPluginConfig

// required string type = 1;
bool RetrievalPluginConfig::has_type() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void RetrievalPluginConfig::set_has_type() {
  _has_bits_[0] |= 0x00000001u;
}
void RetrievalPluginConfig::clear_has_type() {
  _has_bits_[0] &= ~0x00000001u;
}
void RetrievalPluginConfig::clear_type() {
  type_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_type();
}
const ::std::string& RetrievalPluginConfig::type() const {
  // @@protoc_insertion_point(field_get:anyq.RetrievalPluginConfig.type)
  return type_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void RetrievalPluginConfig::set_type(const ::std::string& value) {
  set_has_type();
  type_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:anyq.RetrievalPluginConfig.type)
}
void RetrievalPluginConfig::set_type(const char* value) {
  set_has_type();
  type_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:anyq.RetrievalPluginConfig.type)
}
void RetrievalPluginConfig::set_type(const char* value, size_t size) {
  set_has_type();
  type_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:anyq.RetrievalPluginConfig.type)
}
::std::string* RetrievalPluginConfig::mutable_type() {
  set_has_type();
  // @@protoc_insertion_point(field_mutable:anyq.RetrievalPluginConfig.type)
  return type_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* RetrievalPluginConfig::release_type() {
  // @@protoc_insertion_point(field_release:anyq.RetrievalPluginConfig.type)
  clear_has_type();
  return type_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void RetrievalPluginConfig::set_allocated_type(::std::string* type) {
  if (type != NULL) {
    set_has_type();
  } else {
    clear_has_type();
  }
  type_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), type);
  // @@protoc_insertion_point(field_set_allocated:anyq.RetrievalPluginConfig.type)
}

// required string name = 2;
bool RetrievalPluginConfig::has_name() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void RetrievalPluginConfig::set_has_name() {
  _has_bits_[0] |= 0x00000002u;
}
void RetrievalPluginConfig::clear_has_name() {
  _has_bits_[0] &= ~0x00000002u;
}
void RetrievalPluginConfig::clear_name() {
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_name();
}
const ::std::string& RetrievalPluginConfig::name() const {
  // @@protoc_insertion_point(field_get:anyq.RetrievalPluginConfig.name)
  return name_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void RetrievalPluginConfig::set_name(const ::std::string& value) {
  set_has_name();
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:anyq.RetrievalPluginConfig.name)
}
void RetrievalPluginConfig::set_name(const char* value) {
  set_has_name();
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:anyq.RetrievalPluginConfig.name)
}
void RetrievalPluginConfig::set_name(const char* value, size_t size) {
  set_has_name();
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:anyq.RetrievalPluginConfig.name)
}
::std::string* RetrievalPluginConfig::mutable_name() {
  set_has_name();
  // @@protoc_insertion_point(field_mutable:anyq.RetrievalPluginConfig.name)
  return name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* RetrievalPluginConfig::release_name() {
  // @@protoc_insertion_point(field_release:anyq.RetrievalPluginConfig.name)
  clear_has_name();
  return name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void RetrievalPluginConfig::set_allocated_name(::std::string* name) {
  if (name != NULL) {
    set_has_name();
  } else {
    clear_has_name();
  }
  name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), name);
  // @@protoc_insertion_point(field_set_allocated:anyq.RetrievalPluginConfig.name)
}

// required uint32 num_result = 3;
bool RetrievalPluginConfig::has_num_result() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
void RetrievalPluginConfig::set_has_num_result() {
  _has_bits_[0] |= 0x00000004u;
}
void RetrievalPluginConfig::clear_has_num_result() {
  _has_bits_[0] &= ~0x00000004u;
}
void RetrievalPluginConfig::clear_num_result() {
  num_result_ = 0u;
  clear_has_num_result();
}
::google::protobuf::uint32 RetrievalPluginConfig::num_result() const {
  // @@protoc_insertion_point(field_get:anyq.RetrievalPluginConfig.num_result)
  return num_result_;
}
void RetrievalPluginConfig::set_num_result(::google::protobuf::uint32 value) {
  set_has_num_result();
  num_result_ = value;
  // @@protoc_insertion_point(field_set:anyq.RetrievalPluginConfig.num_result)
}

// optional string search_host = 4;
bool RetrievalPluginConfig::has_search_host() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
void RetrievalPluginConfig::set_has_search_host() {
  _has_bits_[0] |= 0x00000008u;
}
void RetrievalPluginConfig::clear_has_search_host() {
  _has_bits_[0] &= ~0x00000008u;
}
void RetrievalPluginConfig::clear_search_host() {
  search_host_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_search_host();
}
const ::std::string& RetrievalPluginConfig::search_host() const {
  // @@protoc_insertion_point(field_get:anyq.RetrievalPluginConfig.search_host)
  return search_host_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void RetrievalPluginConfig::set_search_host(const ::std::string& value) {
  set_has_search_host();
  search_host_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:anyq.RetrievalPluginConfig.search_host)
}
void RetrievalPluginConfig::set_search_host(const char* value) {
  set_has_search_host();
  search_host_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:anyq.RetrievalPluginConfig.search_host)
}
void RetrievalPluginConfig::set_search_host(const char* value, size_t size) {
  set_has_search_host();
  search_host_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:anyq.RetrievalPluginConfig.search_host)
}
::std::string* RetrievalPluginConfig::mutable_search_host() {
  set_has_search_host();
  // @@protoc_insertion_point(field_mutable:anyq.RetrievalPluginConfig.search_host)
  return search_host_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* RetrievalPluginConfig::release_search_host() {
  // @@protoc_insertion_point(field_release:anyq.RetrievalPluginConfig.search_host)
  clear_has_search_host();
  return search_host_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void RetrievalPluginConfig::set_allocated_search_host(::std::string* search_host) {
  if (search_host != NULL) {
    set_has_search_host();
  } else {
    clear_has_search_host();
  }
  search_host_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), search_host);
  // @@protoc_insertion_point(field_set_allocated:anyq.RetrievalPluginConfig.search_host)
}

// optional uint32 search_port = 5;
bool RetrievalPluginConfig::has_search_port() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
void RetrievalPluginConfig::set_has_search_port() {
  _has_bits_[0] |= 0x00000010u;
}
void RetrievalPluginConfig::clear_has_search_port() {
  _has_bits_[0] &= ~0x00000010u;
}
void RetrievalPluginConfig::clear_search_port() {
  search_port_ = 0u;
  clear_has_search_port();
}
::google::protobuf::uint32 RetrievalPluginConfig::search_port() const {
  // @@protoc_insertion_point(field_get:anyq.RetrievalPluginConfig.search_port)
  return search_port_;
}
void RetrievalPluginConfig::set_search_port(::google::protobuf::uint32 value) {
  set_has_search_port();
  search_port_ = value;
  // @@protoc_insertion_point(field_set:anyq.RetrievalPluginConfig.search_port)
}

// optional string engine_name = 6;
bool RetrievalPluginConfig::has_engine_name() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
void RetrievalPluginConfig::set_has_engine_name() {
  _has_bits_[0] |= 0x00000020u;
}
void RetrievalPluginConfig::clear_has_engine_name() {
  _has_bits_[0] &= ~0x00000020u;
}
void RetrievalPluginConfig::clear_engine_name() {
  engine_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_engine_name();
}
const ::std::string& RetrievalPluginConfig::engine_name() const {
  // @@protoc_insertion_point(field_get:anyq.RetrievalPluginConfig.engine_name)
  return engine_name_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void RetrievalPluginConfig::set_engine_name(const ::std::string& value) {
  set_has_engine_name();
  engine_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:anyq.RetrievalPluginConfig.engine_name)
}
void RetrievalPluginConfig::set_engine_name(const char* value) {
  set_has_engine_name();
  engine_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:anyq.RetrievalPluginConfig.engine_name)
}
void RetrievalPluginConfig::set_engine_name(const char* value, size_t size) {
  set_has_engine_name();
  engine_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:anyq.RetrievalPluginConfig.engine_name)
}
::std::string* RetrievalPluginConfig::mutable_engine_name() {
  set_has_engine_name();
  // @@protoc_insertion_point(field_mutable:anyq.RetrievalPluginConfig.engine_name)
  return engine_name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* RetrievalPluginConfig::release_engine_name() {
  // @@protoc_insertion_point(field_release:anyq.RetrievalPluginConfig.engine_name)
  clear_has_engine_name();
  return engine_name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void RetrievalPluginConfig::set_allocated_engine_name(::std::string* engine_name) {
  if (engine_name != NULL) {
    set_has_engine_name();
  } else {
    clear_has_engine_name();
  }
  engine_name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), engine_name);
  // @@protoc_insertion_point(field_set_allocated:anyq.RetrievalPluginConfig.engine_name)
}

// optional string solr_result_fl = 7;
bool RetrievalPluginConfig::has_solr_result_fl() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
void RetrievalPluginConfig::set_has_solr_result_fl() {
  _has_bits_[0] |= 0x00000040u;
}
void RetrievalPluginConfig::clear_has_solr_result_fl() {
  _has_bits_[0] &= ~0x00000040u;
}
void RetrievalPluginConfig::clear_solr_result_fl() {
  solr_result_fl_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_solr_result_fl();
}
const ::std::string& RetrievalPluginConfig::solr_result_fl() const {
  // @@protoc_insertion_point(field_get:anyq.RetrievalPluginConfig.solr_result_fl)
  return solr_result_fl_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void RetrievalPluginConfig::set_solr_result_fl(const ::std::string& value) {
  set_has_solr_result_fl();
  solr_result_fl_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:anyq.RetrievalPluginConfig.solr_result_fl)
}
void RetrievalPluginConfig::set_solr_result_fl(const char* value) {
  set_has_solr_result_fl();
  solr_result_fl_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:anyq.RetrievalPluginConfig.solr_result_fl)
}
void RetrievalPluginConfig::set_solr_result_fl(const char* value, size_t size) {
  set_has_solr_result_fl();
  solr_result_fl_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:anyq.RetrievalPluginConfig.solr_result_fl)
}
::std::string* RetrievalPluginConfig::mutable_solr_result_fl() {
  set_has_solr_result_fl();
  // @@protoc_insertion_point(field_mutable:anyq.RetrievalPluginConfig.solr_result_fl)
  return solr_result_fl_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* RetrievalPluginConfig::release_solr_result_fl() {
  // @@protoc_insertion_point(field_release:anyq.RetrievalPluginConfig.solr_result_fl)
  clear_has_solr_result_fl();
  return solr_result_fl_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void RetrievalPluginConfig::set_allocated_solr_result_fl(::std::string* solr_result_fl) {
  if (solr_result_fl != NULL) {
    set_has_solr_result_fl();
  } else {
    clear_has_solr_result_fl();
  }
  solr_result_fl_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), solr_result_fl);
  // @@protoc_insertion_point(field_set_allocated:anyq.RetrievalPluginConfig.solr_result_fl)
}

// repeated .anyq.SolrQConfig solr_q = 8;
int RetrievalPluginConfig::solr_q_size() const {
  return solr_q_.size();
}
void RetrievalPluginConfig::clear_solr_q() {
  solr_q_.Clear();
}
const ::anyq::SolrQConfig& RetrievalPluginConfig::solr_q(int index) const {
  // @@protoc_insertion_point(field_get:anyq.RetrievalPluginConfig.solr_q)
  return solr_q_.Get(index);
}
::anyq::SolrQConfig* RetrievalPluginConfig::mutable_solr_q(int index) {
  // @@protoc_insertion_point(field_mutable:anyq.RetrievalPluginConfig.solr_q)
  return solr_q_.Mutable(index);
}
::anyq::SolrQConfig* RetrievalPluginConfig::add_solr_q() {
  // @@protoc_insertion_point(field_add:anyq.RetrievalPluginConfig.solr_q)
  return solr_q_.Add();
}
::google::protobuf::RepeatedPtrField< ::anyq::SolrQConfig >*
RetrievalPluginConfig::mutable_solr_q() {
  // @@protoc_insertion_point(field_mutable_list:anyq.RetrievalPluginConfig.solr_q)
  return &solr_q_;
}
const ::google::protobuf::RepeatedPtrField< ::anyq::SolrQConfig >&
RetrievalPluginConfig::solr_q() const {
  // @@protoc_insertion_point(field_list:anyq.RetrievalPluginConfig.solr_q)
  return solr_q_;
}

// optional uint32 vector_size = 9;
bool RetrievalPluginConfig::has_vector_size() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
void RetrievalPluginConfig::set_has_vector_size() {
  _has_bits_[0] |= 0x00000100u;
}
void RetrievalPluginConfig::clear_has_vector_size() {
  _has_bits_[0] &= ~0x00000100u;
}
void RetrievalPluginConfig::clear_vector_size() {
  vector_size_ = 0u;
  clear_has_vector_size();
}
::google::protobuf::uint32 RetrievalPluginConfig::vector_size() const {
  // @@protoc_insertion_point(field_get:anyq.RetrievalPluginConfig.vector_size)
  return vector_size_;
}
void RetrievalPluginConfig::set_vector_size(::google::protobuf::uint32 value) {
  set_has_vector_size();
  vector_size_ = value;
  // @@protoc_insertion_point(field_set:anyq.RetrievalPluginConfig.vector_size)
}

// optional uint32 search_k = 10;
bool RetrievalPluginConfig::has_search_k() const {
  return (_has_bits_[0] & 0x00000200u) != 0;
}
void RetrievalPluginConfig::set_has_search_k() {
  _has_bits_[0] |= 0x00000200u;
}
void RetrievalPluginConfig::clear_has_search_k() {
  _has_bits_[0] &= ~0x00000200u;
}
void RetrievalPluginConfig::clear_search_k() {
  search_k_ = 0u;
  clear_has_search_k();
}
::google::protobuf::uint32 RetrievalPluginConfig::search_k() const {
  // @@protoc_insertion_point(field_get:anyq.RetrievalPluginConfig.search_k)
  return search_k_;
}
void RetrievalPluginConfig::set_search_k(::google::protobuf::uint32 value) {
  set_has_search_k();
  search_k_ = value;
  // @@protoc_insertion_point(field_set:anyq.RetrievalPluginConfig.search_k)
}

// optional string index_path = 11;
bool RetrievalPluginConfig::has_index_path() const {
  return (_has_bits_[0] & 0x00000400u) != 0;
}
void RetrievalPluginConfig::set_has_index_path() {
  _has_bits_[0] |= 0x00000400u;
}
void RetrievalPluginConfig::clear_has_index_path() {
  _has_bits_[0] &= ~0x00000400u;
}
void RetrievalPluginConfig::clear_index_path() {
  index_path_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_index_path();
}
const ::std::string& RetrievalPluginConfig::index_path() const {
  // @@protoc_insertion_point(field_get:anyq.RetrievalPluginConfig.index_path)
  return index_path_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void RetrievalPluginConfig::set_index_path(const ::std::string& value) {
  set_has_index_path();
  index_path_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:anyq.RetrievalPluginConfig.index_path)
}
void RetrievalPluginConfig::set_index_path(const char* value) {
  set_has_index_path();
  index_path_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:anyq.RetrievalPluginConfig.index_path)
}
void RetrievalPluginConfig::set_index_path(const char* value, size_t size) {
  set_has_index_path();
  index_path_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:anyq.RetrievalPluginConfig.index_path)
}
::std::string* RetrievalPluginConfig::mutable_index_path() {
  set_has_index_path();
  // @@protoc_insertion_point(field_mutable:anyq.RetrievalPluginConfig.index_path)
  return index_path_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* RetrievalPluginConfig::release_index_path() {
  // @@protoc_insertion_point(field_release:anyq.RetrievalPluginConfig.index_path)
  clear_has_index_path();
  return index_path_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void RetrievalPluginConfig::set_allocated_index_path(::std::string* index_path) {
  if (index_path != NULL) {
    set_has_index_path();
  } else {
    clear_has_index_path();
  }
  index_path_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), index_path);
  // @@protoc_insertion_point(field_set_allocated:anyq.RetrievalPluginConfig.index_path)
}

// optional string using_dict_name = 12;
bool RetrievalPluginConfig::has_using_dict_name() const {
  return (_has_bits_[0] & 0x00000800u) != 0;
}
void RetrievalPluginConfig::set_has_using_dict_name() {
  _has_bits_[0] |= 0x00000800u;
}
void RetrievalPluginConfig::clear_has_using_dict_name() {
  _has_bits_[0] &= ~0x00000800u;
}
void RetrievalPluginConfig::clear_using_dict_name() {
  using_dict_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_using_dict_name();
}
const ::std::string& RetrievalPluginConfig::using_dict_name() const {
  // @@protoc_insertion_point(field_get:anyq.RetrievalPluginConfig.using_dict_name)
  return using_dict_name_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void RetrievalPluginConfig::set_using_dict_name(const ::std::string& value) {
  set_has_using_dict_name();
  using_dict_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:anyq.RetrievalPluginConfig.using_dict_name)
}
void RetrievalPluginConfig::set_using_dict_name(const char* value) {
  set_has_using_dict_name();
  using_dict_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:anyq.RetrievalPluginConfig.using_dict_name)
}
void RetrievalPluginConfig::set_using_dict_name(const char* value, size_t size) {
  set_has_using_dict_name();
  using_dict_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:anyq.RetrievalPluginConfig.using_dict_name)
}
::std::string* RetrievalPluginConfig::mutable_using_dict_name() {
  set_has_using_dict_name();
  // @@protoc_insertion_point(field_mutable:anyq.RetrievalPluginConfig.using_dict_name)
  return using_dict_name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* RetrievalPluginConfig::release_using_dict_name() {
  // @@protoc_insertion_point(field_release:anyq.RetrievalPluginConfig.using_dict_name)
  clear_has_using_dict_name();
  return using_dict_name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void RetrievalPluginConfig::set_allocated_using_dict_name(::std::string* using_dict_name) {
  if (using_dict_name != NULL) {
    set_has_using_dict_name();
  } else {
    clear_has_using_dict_name();
  }
  using_dict_name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), using_dict_name);
  // @@protoc_insertion_point(field_set_allocated:anyq.RetrievalPluginConfig.using_dict_name)
}

// optional string type_name = 14;
bool RetrievalPluginConfig::has_type_name() const {
  return (_has_bits_[0] & 0x00001000u) != 0;
}
void RetrievalPluginConfig::set_has_type_name() {
  _has_bits_[0] |= 0x00001000u;
}
void RetrievalPluginConfig::clear_has_type_name() {
  _has_bits_[0] &= ~0x00001000u;
}
void RetrievalPluginConfig::clear_type_name() {
  type_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_type_name();
}
const ::std::string& RetrievalPluginConfig::type_name() const {
  // @@protoc_insertion_point(field_get:anyq.RetrievalPluginConfig.type_name)
  return type_name_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void RetrievalPluginConfig::set_type_name(const ::std::string& value) {
  set_has_type_name();
  type_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:anyq.RetrievalPluginConfig.type_name)
}
void RetrievalPluginConfig::set_type_name(const char* value) {
  set_has_type_name();
  type_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:anyq.RetrievalPluginConfig.type_name)
}
void RetrievalPluginConfig::set_type_name(const char* value, size_t size) {
  set_has_type_name();
  type_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:anyq.RetrievalPluginConfig.type_name)
}
::std::string* RetrievalPluginConfig::mutable_type_name() {
  set_has_type_name();
  // @@protoc_insertion_point(field_mutable:anyq.RetrievalPluginConfig.type_name)
  return type_name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* RetrievalPluginConfig::release_type_name() {
  // @@protoc_insertion_point(field_release:anyq.RetrievalPluginConfig.type_name)
  clear_has_type_name();
  return type_name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void RetrievalPluginConfig::set_allocated_type_name(::std::string* type_name) {
  if (type_name != NULL) {
    set_has_type_name();
  } else {
    clear_has_type_name();
  }
  type_name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), type_name);
  // @@protoc_insertion_point(field_set_allocated:anyq.RetrievalPluginConfig.type_name)
}

inline const RetrievalPluginConfig* RetrievalPluginConfig::internal_default_instance() {
  return &RetrievalPluginConfig_default_instance_.get();
}
#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int RetrievalConfig::kRetrievalPluginFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

RetrievalConfig::RetrievalConfig()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (this != internal_default_instance()) protobuf_InitDefaults_anyq_2eproto();
  SharedCtor();
  // @@protoc_insertion_point(constructor:anyq.RetrievalConfig)
}

void RetrievalConfig::InitAsDefaultInstance() {
}

RetrievalConfig::RetrievalConfig(const RetrievalConfig& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  UnsafeMergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:anyq.RetrievalConfig)
}

void RetrievalConfig::SharedCtor() {
  _cached_size_ = 0;
}

RetrievalConfig::~RetrievalConfig() {
  // @@protoc_insertion_point(destructor:anyq.RetrievalConfig)
  SharedDtor();
}

void RetrievalConfig::SharedDtor() {
}

void RetrievalConfig::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* RetrievalConfig::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return RetrievalConfig_descriptor_;
}

const RetrievalConfig& RetrievalConfig::default_instance() {
  protobuf_InitDefaults_anyq_2eproto();
  return *internal_default_instance();
}

::google::protobuf::internal::ExplicitlyConstructed<RetrievalConfig> RetrievalConfig_default_instance_;

RetrievalConfig* RetrievalConfig::New(::google::protobuf::Arena* arena) const {
  RetrievalConfig* n = new RetrievalConfig;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void RetrievalConfig::Clear() {
// @@protoc_insertion_point(message_clear_start:anyq.RetrievalConfig)
  retrieval_plugin_.Clear();
  _has_bits_.Clear();
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool RetrievalConfig::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:anyq.RetrievalConfig)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .anyq.RetrievalPluginConfig retrieval_plugin = 1;
      case 1: {
        if (tag == 10) {
          DO_(input->IncrementRecursionDepth());
         parse_loop_retrieval_plugin:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtualNoRecursionDepth(
                input, add_retrieval_plugin()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(10)) goto parse_loop_retrieval_plugin;
        input->UnsafeDecrementRecursionDepth();
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:anyq.RetrievalConfig)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:anyq.RetrievalConfig)
  return false;
#undef DO_
}

void RetrievalConfig::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:anyq.RetrievalConfig)
  // repeated .anyq.RetrievalPluginConfig retrieval_plugin = 1;
  for (unsigned int i = 0, n = this->retrieval_plugin_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->retrieval_plugin(i), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:anyq.RetrievalConfig)
}

::google::protobuf::uint8* RetrievalConfig::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:anyq.RetrievalConfig)
  // repeated .anyq.RetrievalPluginConfig retrieval_plugin = 1;
  for (unsigned int i = 0, n = this->retrieval_plugin_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, this->retrieval_plugin(i), false, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:anyq.RetrievalConfig)
  return target;
}

size_t RetrievalConfig::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:anyq.RetrievalConfig)
  size_t total_size = 0;

  // repeated .anyq.RetrievalPluginConfig retrieval_plugin = 1;
  {
    unsigned int count = this->retrieval_plugin_size();
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->retrieval_plugin(i));
    }
  }

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void RetrievalConfig::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:anyq.RetrievalConfig)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const RetrievalConfig* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const RetrievalConfig>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:anyq.RetrievalConfig)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:anyq.RetrievalConfig)
    UnsafeMergeFrom(*source);
  }
}

void RetrievalConfig::MergeFrom(const RetrievalConfig& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:anyq.RetrievalConfig)
  if (GOOGLE_PREDICT_TRUE(&from != this)) {
    UnsafeMergeFrom(from);
  } else {
    MergeFromFail(__LINE__);
  }
}

void RetrievalConfig::UnsafeMergeFrom(const RetrievalConfig& from) {
  GOOGLE_DCHECK(&from != this);
  retrieval_plugin_.MergeFrom(from.retrieval_plugin_);
  if (from._internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::UnknownFieldSet::MergeToInternalMetdata(
      from.unknown_fields(), &_internal_metadata_);
  }
}

void RetrievalConfig::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:anyq.RetrievalConfig)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void RetrievalConfig::CopyFrom(const RetrievalConfig& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:anyq.RetrievalConfig)
  if (&from == this) return;
  Clear();
  UnsafeMergeFrom(from);
}

bool RetrievalConfig::IsInitialized() const {

  if (!::google::protobuf::internal::AllAreInitialized(this->retrieval_plugin())) return false;
  return true;
}

void RetrievalConfig::Swap(RetrievalConfig* other) {
  if (other == this) return;
  InternalSwap(other);
}
void RetrievalConfig::InternalSwap(RetrievalConfig* other) {
  retrieval_plugin_.UnsafeArenaSwap(&other->retrieval_plugin_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata RetrievalConfig::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = RetrievalConfig_descriptor_;
  metadata.reflection = RetrievalConfig_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// RetrievalConfig

// repeated .anyq.RetrievalPluginConfig retrieval_plugin = 1;
int RetrievalConfig::retrieval_plugin_size() const {
  return retrieval_plugin_.size();
}
void RetrievalConfig::clear_retrieval_plugin() {
  retrieval_plugin_.Clear();
}
const ::anyq::RetrievalPluginConfig& RetrievalConfig::retrieval_plugin(int index) const {
  // @@protoc_insertion_point(field_get:anyq.RetrievalConfig.retrieval_plugin)
  return retrieval_plugin_.Get(index);
}
::anyq::RetrievalPluginConfig* RetrievalConfig::mutable_retrieval_plugin(int index) {
  // @@protoc_insertion_point(field_mutable:anyq.RetrievalConfig.retrieval_plugin)
  return retrieval_plugin_.Mutable(index);
}
::anyq::RetrievalPluginConfig* RetrievalConfig::add_retrieval_plugin() {
  // @@protoc_insertion_point(field_add:anyq.RetrievalConfig.retrieval_plugin)
  return retrieval_plugin_.Add();
}
::google::protobuf::RepeatedPtrField< ::anyq::RetrievalPluginConfig >*
RetrievalConfig::mutable_retrieval_plugin() {
  // @@protoc_insertion_point(field_mutable_list:anyq.RetrievalConfig.retrieval_plugin)
  return &retrieval_plugin_;
}
const ::google::protobuf::RepeatedPtrField< ::anyq::RetrievalPluginConfig >&
RetrievalConfig::retrieval_plugin() const {
  // @@protoc_insertion_point(field_list:anyq.RetrievalConfig.retrieval_plugin)
  return retrieval_plugin_;
}

inline const RetrievalConfig* RetrievalConfig::internal_default_instance() {
  return &RetrievalConfig_default_instance_.get();
}
#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int SelectConfig::kSelectIndexFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

SelectConfig::SelectConfig()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (this != internal_default_instance()) protobuf_InitDefaults_anyq_2eproto();
  SharedCtor();
  // @@protoc_insertion_point(constructor:anyq.SelectConfig)
}

void SelectConfig::InitAsDefaultInstance() {
}

SelectConfig::SelectConfig(const SelectConfig& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  UnsafeMergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:anyq.SelectConfig)
}

void SelectConfig::SharedCtor() {
  _cached_size_ = 0;
  select_index_ = 0;
}

SelectConfig::~SelectConfig() {
  // @@protoc_insertion_point(destructor:anyq.SelectConfig)
  SharedDtor();
}

void SelectConfig::SharedDtor() {
}

void SelectConfig::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* SelectConfig::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return SelectConfig_descriptor_;
}

const SelectConfig& SelectConfig::default_instance() {
  protobuf_InitDefaults_anyq_2eproto();
  return *internal_default_instance();
}

::google::protobuf::internal::ExplicitlyConstructed<SelectConfig> SelectConfig_default_instance_;

SelectConfig* SelectConfig::New(::google::protobuf::Arena* arena) const {
  SelectConfig* n = new SelectConfig;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void SelectConfig::Clear() {
// @@protoc_insertion_point(message_clear_start:anyq.SelectConfig)
  select_index_ = 0;
  _has_bits_.Clear();
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool SelectConfig::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:anyq.SelectConfig)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 select_index = 1;
      case 1: {
        if (tag == 8) {
          set_has_select_index();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &select_index_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:anyq.SelectConfig)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:anyq.SelectConfig)
  return false;
#undef DO_
}

void SelectConfig::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:anyq.SelectConfig)
  // optional int32 select_index = 1;
  if (has_select_index()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->select_index(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:anyq.SelectConfig)
}

::google::protobuf::uint8* SelectConfig::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:anyq.SelectConfig)
  // optional int32 select_index = 1;
  if (has_select_index()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->select_index(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:anyq.SelectConfig)
  return target;
}

size_t SelectConfig::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:anyq.SelectConfig)
  size_t total_size = 0;

  // optional int32 select_index = 1;
  if (has_select_index()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->select_index());
  }

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void SelectConfig::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:anyq.SelectConfig)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const SelectConfig* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const SelectConfig>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:anyq.SelectConfig)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:anyq.SelectConfig)
    UnsafeMergeFrom(*source);
  }
}

void SelectConfig::MergeFrom(const SelectConfig& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:anyq.SelectConfig)
  if (GOOGLE_PREDICT_TRUE(&from != this)) {
    UnsafeMergeFrom(from);
  } else {
    MergeFromFail(__LINE__);
  }
}

void SelectConfig::UnsafeMergeFrom(const SelectConfig& from) {
  GOOGLE_DCHECK(&from != this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_select_index()) {
      set_select_index(from.select_index());
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::UnknownFieldSet::MergeToInternalMetdata(
      from.unknown_fields(), &_internal_metadata_);
  }
}

void SelectConfig::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:anyq.SelectConfig)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SelectConfig::CopyFrom(const SelectConfig& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:anyq.SelectConfig)
  if (&from == this) return;
  Clear();
  UnsafeMergeFrom(from);
}

bool SelectConfig::IsInitialized() const {

  return true;
}

void SelectConfig::Swap(SelectConfig* other) {
  if (other == this) return;
  InternalSwap(other);
}
void SelectConfig::InternalSwap(SelectConfig* other) {
  std::swap(select_index_, other->select_index_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata SelectConfig::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = SelectConfig_descriptor_;
  metadata.reflection = SelectConfig_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// SelectConfig

// optional int32 select_index = 1;
bool SelectConfig::has_select_index() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void SelectConfig::set_has_select_index() {
  _has_bits_[0] |= 0x00000001u;
}
void SelectConfig::clear_has_select_index() {
  _has_bits_[0] &= ~0x00000001u;
}
void SelectConfig::clear_select_index() {
  select_index_ = 0;
  clear_has_select_index();
}
::google::protobuf::int32 SelectConfig::select_index() const {
  // @@protoc_insertion_point(field_get:anyq.SelectConfig.select_index)
  return select_index_;
}
void SelectConfig::set_select_index(::google::protobuf::int32 value) {
  set_has_select_index();
  select_index_ = value;
  // @@protoc_insertion_point(field_set:anyq.SelectConfig.select_index)
}

inline const SelectConfig* SelectConfig::internal_default_instance() {
  return &SelectConfig_default_instance_.get();
}
#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int RankPredict::kTypeFieldNumber;
const int RankPredict::kUsingDictNameFieldNumber;
const int RankPredict::kBoosterModelPathFieldNumber;
const int RankPredict::kSelectConfigFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

RankPredict::RankPredict()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (this != internal_default_instance()) protobuf_InitDefaults_anyq_2eproto();
  SharedCtor();
  // @@protoc_insertion_point(constructor:anyq.RankPredict)
}

void RankPredict::InitAsDefaultInstance() {
  select_config_ = const_cast< ::anyq::SelectConfig*>(
      ::anyq::SelectConfig::internal_default_instance());
}

RankPredict::RankPredict(const RankPredict& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  UnsafeMergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:anyq.RankPredict)
}

void RankPredict::SharedCtor() {
  _cached_size_ = 0;
  type_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  using_dict_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  booster_model_path_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  select_config_ = NULL;
}

RankPredict::~RankPredict() {
  // @@protoc_insertion_point(destructor:anyq.RankPredict)
  SharedDtor();
}

void RankPredict::SharedDtor() {
  type_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  using_dict_name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  booster_model_path_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != &RankPredict_default_instance_.get()) {
    delete select_config_;
  }
}

void RankPredict::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* RankPredict::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return RankPredict_descriptor_;
}

const RankPredict& RankPredict::default_instance() {
  protobuf_InitDefaults_anyq_2eproto();
  return *internal_default_instance();
}

::google::protobuf::internal::ExplicitlyConstructed<RankPredict> RankPredict_default_instance_;

RankPredict* RankPredict::New(::google::protobuf::Arena* arena) const {
  RankPredict* n = new RankPredict;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void RankPredict::Clear() {
// @@protoc_insertion_point(message_clear_start:anyq.RankPredict)
  if (_has_bits_[0 / 32] & 15u) {
    if (has_type()) {
      type_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
    if (has_using_dict_name()) {
      using_dict_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
    if (has_booster_model_path()) {
      booster_model_path_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
    if (has_select_config()) {
      if (select_config_ != NULL) select_config_->::anyq::SelectConfig::Clear();
    }
  }
  _has_bits_.Clear();
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool RankPredict::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:anyq.RankPredict)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(16383);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required string type = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_type()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->type().data(), this->type().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "anyq.RankPredict.type");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_using_dict_name;
        break;
      }

      // optional string using_dict_name = 2;
      case 2: {
        if (tag == 18) {
         parse_using_dict_name:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_using_dict_name()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->using_dict_name().data(), this->using_dict_name().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "anyq.RankPredict.using_dict_name");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_booster_model_path;
        break;
      }

      // optional string booster_model_path = 3;
      case 3: {
        if (tag == 26) {
         parse_booster_model_path:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_booster_model_path()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->booster_model_path().data(), this->booster_model_path().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "anyq.RankPredict.booster_model_path");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(810)) goto parse_select_config;
        break;
      }

      // optional .anyq.SelectConfig select_config = 101;
      case 101: {
        if (tag == 810) {
         parse_select_config:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_select_config()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:anyq.RankPredict)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:anyq.RankPredict)
  return false;
#undef DO_
}

void RankPredict::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:anyq.RankPredict)
  // required string type = 1;
  if (has_type()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->type().data(), this->type().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "anyq.RankPredict.type");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->type(), output);
  }

  // optional string using_dict_name = 2;
  if (has_using_dict_name()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->using_dict_name().data(), this->using_dict_name().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "anyq.RankPredict.using_dict_name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->using_dict_name(), output);
  }

  // optional string booster_model_path = 3;
  if (has_booster_model_path()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->booster_model_path().data(), this->booster_model_path().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "anyq.RankPredict.booster_model_path");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->booster_model_path(), output);
  }

  // optional .anyq.SelectConfig select_config = 101;
  if (has_select_config()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      101, *this->select_config_, output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:anyq.RankPredict)
}

::google::protobuf::uint8* RankPredict::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:anyq.RankPredict)
  // required string type = 1;
  if (has_type()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->type().data(), this->type().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "anyq.RankPredict.type");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->type(), target);
  }

  // optional string using_dict_name = 2;
  if (has_using_dict_name()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->using_dict_name().data(), this->using_dict_name().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "anyq.RankPredict.using_dict_name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->using_dict_name(), target);
  }

  // optional string booster_model_path = 3;
  if (has_booster_model_path()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->booster_model_path().data(), this->booster_model_path().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "anyq.RankPredict.booster_model_path");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->booster_model_path(), target);
  }

  // optional .anyq.SelectConfig select_config = 101;
  if (has_select_config()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        101, *this->select_config_, false, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:anyq.RankPredict)
  return target;
}

size_t RankPredict::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:anyq.RankPredict)
  size_t total_size = 0;

  // required string type = 1;
  if (has_type()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->type());
  }
  if (_has_bits_[1 / 32] & 14u) {
    // optional string using_dict_name = 2;
    if (has_using_dict_name()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->using_dict_name());
    }

    // optional string booster_model_path = 3;
    if (has_booster_model_path()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->booster_model_path());
    }

    // optional .anyq.SelectConfig select_config = 101;
    if (has_select_config()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *this->select_config_);
    }

  }
  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void RankPredict::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:anyq.RankPredict)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const RankPredict* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const RankPredict>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:anyq.RankPredict)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:anyq.RankPredict)
    UnsafeMergeFrom(*source);
  }
}

void RankPredict::MergeFrom(const RankPredict& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:anyq.RankPredict)
  if (GOOGLE_PREDICT_TRUE(&from != this)) {
    UnsafeMergeFrom(from);
  } else {
    MergeFromFail(__LINE__);
  }
}

void RankPredict::UnsafeMergeFrom(const RankPredict& from) {
  GOOGLE_DCHECK(&from != this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_type()) {
      set_has_type();
      type_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.type_);
    }
    if (from.has_using_dict_name()) {
      set_has_using_dict_name();
      using_dict_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.using_dict_name_);
    }
    if (from.has_booster_model_path()) {
      set_has_booster_model_path();
      booster_model_path_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.booster_model_path_);
    }
    if (from.has_select_config()) {
      mutable_select_config()->::anyq::SelectConfig::MergeFrom(from.select_config());
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::UnknownFieldSet::MergeToInternalMetdata(
      from.unknown_fields(), &_internal_metadata_);
  }
}

void RankPredict::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:anyq.RankPredict)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void RankPredict::CopyFrom(const RankPredict& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:anyq.RankPredict)
  if (&from == this) return;
  Clear();
  UnsafeMergeFrom(from);
}

bool RankPredict::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;

  return true;
}

void RankPredict::Swap(RankPredict* other) {
  if (other == this) return;
  InternalSwap(other);
}
void RankPredict::InternalSwap(RankPredict* other) {
  type_.Swap(&other->type_);
  using_dict_name_.Swap(&other->using_dict_name_);
  booster_model_path_.Swap(&other->booster_model_path_);
  std::swap(select_config_, other->select_config_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata RankPredict::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = RankPredict_descriptor_;
  metadata.reflection = RankPredict_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// RankPredict

// required string type = 1;
bool RankPredict::has_type() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void RankPredict::set_has_type() {
  _has_bits_[0] |= 0x00000001u;
}
void RankPredict::clear_has_type() {
  _has_bits_[0] &= ~0x00000001u;
}
void RankPredict::clear_type() {
  type_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_type();
}
const ::std::string& RankPredict::type() const {
  // @@protoc_insertion_point(field_get:anyq.RankPredict.type)
  return type_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void RankPredict::set_type(const ::std::string& value) {
  set_has_type();
  type_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:anyq.RankPredict.type)
}
void RankPredict::set_type(const char* value) {
  set_has_type();
  type_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:anyq.RankPredict.type)
}
void RankPredict::set_type(const char* value, size_t size) {
  set_has_type();
  type_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:anyq.RankPredict.type)
}
::std::string* RankPredict::mutable_type() {
  set_has_type();
  // @@protoc_insertion_point(field_mutable:anyq.RankPredict.type)
  return type_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* RankPredict::release_type() {
  // @@protoc_insertion_point(field_release:anyq.RankPredict.type)
  clear_has_type();
  return type_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void RankPredict::set_allocated_type(::std::string* type) {
  if (type != NULL) {
    set_has_type();
  } else {
    clear_has_type();
  }
  type_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), type);
  // @@protoc_insertion_point(field_set_allocated:anyq.RankPredict.type)
}

// optional string using_dict_name = 2;
bool RankPredict::has_using_dict_name() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void RankPredict::set_has_using_dict_name() {
  _has_bits_[0] |= 0x00000002u;
}
void RankPredict::clear_has_using_dict_name() {
  _has_bits_[0] &= ~0x00000002u;
}
void RankPredict::clear_using_dict_name() {
  using_dict_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_using_dict_name();
}
const ::std::string& RankPredict::using_dict_name() const {
  // @@protoc_insertion_point(field_get:anyq.RankPredict.using_dict_name)
  return using_dict_name_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void RankPredict::set_using_dict_name(const ::std::string& value) {
  set_has_using_dict_name();
  using_dict_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:anyq.RankPredict.using_dict_name)
}
void RankPredict::set_using_dict_name(const char* value) {
  set_has_using_dict_name();
  using_dict_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:anyq.RankPredict.using_dict_name)
}
void RankPredict::set_using_dict_name(const char* value, size_t size) {
  set_has_using_dict_name();
  using_dict_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:anyq.RankPredict.using_dict_name)
}
::std::string* RankPredict::mutable_using_dict_name() {
  set_has_using_dict_name();
  // @@protoc_insertion_point(field_mutable:anyq.RankPredict.using_dict_name)
  return using_dict_name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* RankPredict::release_using_dict_name() {
  // @@protoc_insertion_point(field_release:anyq.RankPredict.using_dict_name)
  clear_has_using_dict_name();
  return using_dict_name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void RankPredict::set_allocated_using_dict_name(::std::string* using_dict_name) {
  if (using_dict_name != NULL) {
    set_has_using_dict_name();
  } else {
    clear_has_using_dict_name();
  }
  using_dict_name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), using_dict_name);
  // @@protoc_insertion_point(field_set_allocated:anyq.RankPredict.using_dict_name)
}

// optional string booster_model_path = 3;
bool RankPredict::has_booster_model_path() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
void RankPredict::set_has_booster_model_path() {
  _has_bits_[0] |= 0x00000004u;
}
void RankPredict::clear_has_booster_model_path() {
  _has_bits_[0] &= ~0x00000004u;
}
void RankPredict::clear_booster_model_path() {
  booster_model_path_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_booster_model_path();
}
const ::std::string& RankPredict::booster_model_path() const {
  // @@protoc_insertion_point(field_get:anyq.RankPredict.booster_model_path)
  return booster_model_path_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void RankPredict::set_booster_model_path(const ::std::string& value) {
  set_has_booster_model_path();
  booster_model_path_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:anyq.RankPredict.booster_model_path)
}
void RankPredict::set_booster_model_path(const char* value) {
  set_has_booster_model_path();
  booster_model_path_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:anyq.RankPredict.booster_model_path)
}
void RankPredict::set_booster_model_path(const char* value, size_t size) {
  set_has_booster_model_path();
  booster_model_path_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:anyq.RankPredict.booster_model_path)
}
::std::string* RankPredict::mutable_booster_model_path() {
  set_has_booster_model_path();
  // @@protoc_insertion_point(field_mutable:anyq.RankPredict.booster_model_path)
  return booster_model_path_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* RankPredict::release_booster_model_path() {
  // @@protoc_insertion_point(field_release:anyq.RankPredict.booster_model_path)
  clear_has_booster_model_path();
  return booster_model_path_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void RankPredict::set_allocated_booster_model_path(::std::string* booster_model_path) {
  if (booster_model_path != NULL) {
    set_has_booster_model_path();
  } else {
    clear_has_booster_model_path();
  }
  booster_model_path_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), booster_model_path);
  // @@protoc_insertion_point(field_set_allocated:anyq.RankPredict.booster_model_path)
}

// optional .anyq.SelectConfig select_config = 101;
bool RankPredict::has_select_config() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
void RankPredict::set_has_select_config() {
  _has_bits_[0] |= 0x00000008u;
}
void RankPredict::clear_has_select_config() {
  _has_bits_[0] &= ~0x00000008u;
}
void RankPredict::clear_select_config() {
  if (select_config_ != NULL) select_config_->::anyq::SelectConfig::Clear();
  clear_has_select_config();
}
const ::anyq::SelectConfig& RankPredict::select_config() const {
  // @@protoc_insertion_point(field_get:anyq.RankPredict.select_config)
  return select_config_ != NULL ? *select_config_
                         : *::anyq::SelectConfig::internal_default_instance();
}
::anyq::SelectConfig* RankPredict::mutable_select_config() {
  set_has_select_config();
  if (select_config_ == NULL) {
    select_config_ = new ::anyq::SelectConfig;
  }
  // @@protoc_insertion_point(field_mutable:anyq.RankPredict.select_config)
  return select_config_;
}
::anyq::SelectConfig* RankPredict::release_select_config() {
  // @@protoc_insertion_point(field_release:anyq.RankPredict.select_config)
  clear_has_select_config();
  ::anyq::SelectConfig* temp = select_config_;
  select_config_ = NULL;
  return temp;
}
void RankPredict::set_allocated_select_config(::anyq::SelectConfig* select_config) {
  delete select_config_;
  select_config_ = select_config;
  if (select_config) {
    set_has_select_config();
  } else {
    clear_has_select_config();
  }
  // @@protoc_insertion_point(field_set_allocated:anyq.RankPredict.select_config)
}

inline const RankPredict* RankPredict::internal_default_instance() {
  return &RankPredict_default_instance_.get();
}
#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int PatternConfig::kPatFnameFieldNumber;
const int PatternConfig::kDictFnameFieldNumber;
const int PatternConfig::kIgnoFnameFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

PatternConfig::PatternConfig()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (this != internal_default_instance()) protobuf_InitDefaults_anyq_2eproto();
  SharedCtor();
  // @@protoc_insertion_point(constructor:anyq.PatternConfig)
}

void PatternConfig::InitAsDefaultInstance() {
}

PatternConfig::PatternConfig(const PatternConfig& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  UnsafeMergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:anyq.PatternConfig)
}

void PatternConfig::SharedCtor() {
  _cached_size_ = 0;
  pat_fname_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  dict_fname_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  igno_fname_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

PatternConfig::~PatternConfig() {
  // @@protoc_insertion_point(destructor:anyq.PatternConfig)
  SharedDtor();
}

void PatternConfig::SharedDtor() {
  pat_fname_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  dict_fname_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  igno_fname_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void PatternConfig::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* PatternConfig::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return PatternConfig_descriptor_;
}

const PatternConfig& PatternConfig::default_instance() {
  protobuf_InitDefaults_anyq_2eproto();
  return *internal_default_instance();
}

::google::protobuf::internal::ExplicitlyConstructed<PatternConfig> PatternConfig_default_instance_;

PatternConfig* PatternConfig::New(::google::protobuf::Arena* arena) const {
  PatternConfig* n = new PatternConfig;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void PatternConfig::Clear() {
// @@protoc_insertion_point(message_clear_start:anyq.PatternConfig)
  if (_has_bits_[0 / 32] & 7u) {
    if (has_pat_fname()) {
      pat_fname_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
    if (has_dict_fname()) {
      dict_fname_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
    if (has_igno_fname()) {
      igno_fname_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
  }
  _has_bits_.Clear();
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool PatternConfig::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:anyq.PatternConfig)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required string pat_fname = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_pat_fname()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->pat_fname().data(), this->pat_fname().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "anyq.PatternConfig.pat_fname");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_dict_fname;
        break;
      }

      // required string dict_fname = 2;
      case 2: {
        if (tag == 18) {
         parse_dict_fname:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_dict_fname()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->dict_fname().data(), this->dict_fname().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "anyq.PatternConfig.dict_fname");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_igno_fname;
        break;
      }

      // required string igno_fname = 3;
      case 3: {
        if (tag == 26) {
         parse_igno_fname:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_igno_fname()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->igno_fname().data(), this->igno_fname().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "anyq.PatternConfig.igno_fname");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:anyq.PatternConfig)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:anyq.PatternConfig)
  return false;
#undef DO_
}

void PatternConfig::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:anyq.PatternConfig)
  // required string pat_fname = 1;
  if (has_pat_fname()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->pat_fname().data(), this->pat_fname().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "anyq.PatternConfig.pat_fname");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->pat_fname(), output);
  }

  // required string dict_fname = 2;
  if (has_dict_fname()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->dict_fname().data(), this->dict_fname().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "anyq.PatternConfig.dict_fname");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->dict_fname(), output);
  }

  // required string igno_fname = 3;
  if (has_igno_fname()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->igno_fname().data(), this->igno_fname().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "anyq.PatternConfig.igno_fname");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->igno_fname(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:anyq.PatternConfig)
}

::google::protobuf::uint8* PatternConfig::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:anyq.PatternConfig)
  // required string pat_fname = 1;
  if (has_pat_fname()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->pat_fname().data(), this->pat_fname().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "anyq.PatternConfig.pat_fname");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->pat_fname(), target);
  }

  // required string dict_fname = 2;
  if (has_dict_fname()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->dict_fname().data(), this->dict_fname().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "anyq.PatternConfig.dict_fname");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->dict_fname(), target);
  }

  // required string igno_fname = 3;
  if (has_igno_fname()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->igno_fname().data(), this->igno_fname().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "anyq.PatternConfig.igno_fname");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->igno_fname(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:anyq.PatternConfig)
  return target;
}

size_t PatternConfig::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:anyq.PatternConfig)
  size_t total_size = 0;

  if (has_pat_fname()) {
    // required string pat_fname = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->pat_fname());
  }

  if (has_dict_fname()) {
    // required string dict_fname = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->dict_fname());
  }

  if (has_igno_fname()) {
    // required string igno_fname = 3;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->igno_fname());
  }

  return total_size;
}
size_t PatternConfig::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:anyq.PatternConfig)
  size_t total_size = 0;

  if (((_has_bits_[0] & 0x00000007) ^ 0x00000007) == 0) {  // All required fields are present.
    // required string pat_fname = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->pat_fname());

    // required string dict_fname = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->dict_fname());

    // required string igno_fname = 3;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->igno_fname());

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void PatternConfig::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:anyq.PatternConfig)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const PatternConfig* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const PatternConfig>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:anyq.PatternConfig)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:anyq.PatternConfig)
    UnsafeMergeFrom(*source);
  }
}

void PatternConfig::MergeFrom(const PatternConfig& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:anyq.PatternConfig)
  if (GOOGLE_PREDICT_TRUE(&from != this)) {
    UnsafeMergeFrom(from);
  } else {
    MergeFromFail(__LINE__);
  }
}

void PatternConfig::UnsafeMergeFrom(const PatternConfig& from) {
  GOOGLE_DCHECK(&from != this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_pat_fname()) {
      set_has_pat_fname();
      pat_fname_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.pat_fname_);
    }
    if (from.has_dict_fname()) {
      set_has_dict_fname();
      dict_fname_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.dict_fname_);
    }
    if (from.has_igno_fname()) {
      set_has_igno_fname();
      igno_fname_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.igno_fname_);
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::UnknownFieldSet::MergeToInternalMetdata(
      from.unknown_fields(), &_internal_metadata_);
  }
}

void PatternConfig::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:anyq.PatternConfig)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PatternConfig::CopyFrom(const PatternConfig& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:anyq.PatternConfig)
  if (&from == this) return;
  Clear();
  UnsafeMergeFrom(from);
}

bool PatternConfig::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000007) != 0x00000007) return false;

  return true;
}

void PatternConfig::Swap(PatternConfig* other) {
  if (other == this) return;
  InternalSwap(other);
}
void PatternConfig::InternalSwap(PatternConfig* other) {
  pat_fname_.Swap(&other->pat_fname_);
  dict_fname_.Swap(&other->dict_fname_);
  igno_fname_.Swap(&other->igno_fname_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata PatternConfig::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = PatternConfig_descriptor_;
  metadata.reflection = PatternConfig_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// PatternConfig

// required string pat_fname = 1;
bool PatternConfig::has_pat_fname() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void PatternConfig::set_has_pat_fname() {
  _has_bits_[0] |= 0x00000001u;
}
void PatternConfig::clear_has_pat_fname() {
  _has_bits_[0] &= ~0x00000001u;
}
void PatternConfig::clear_pat_fname() {
  pat_fname_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_pat_fname();
}
const ::std::string& PatternConfig::pat_fname() const {
  // @@protoc_insertion_point(field_get:anyq.PatternConfig.pat_fname)
  return pat_fname_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void PatternConfig::set_pat_fname(const ::std::string& value) {
  set_has_pat_fname();
  pat_fname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:anyq.PatternConfig.pat_fname)
}
void PatternConfig::set_pat_fname(const char* value) {
  set_has_pat_fname();
  pat_fname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:anyq.PatternConfig.pat_fname)
}
void PatternConfig::set_pat_fname(const char* value, size_t size) {
  set_has_pat_fname();
  pat_fname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:anyq.PatternConfig.pat_fname)
}
::std::string* PatternConfig::mutable_pat_fname() {
  set_has_pat_fname();
  // @@protoc_insertion_point(field_mutable:anyq.PatternConfig.pat_fname)
  return pat_fname_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* PatternConfig::release_pat_fname() {
  // @@protoc_insertion_point(field_release:anyq.PatternConfig.pat_fname)
  clear_has_pat_fname();
  return pat_fname_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void PatternConfig::set_allocated_pat_fname(::std::string* pat_fname) {
  if (pat_fname != NULL) {
    set_has_pat_fname();
  } else {
    clear_has_pat_fname();
  }
  pat_fname_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), pat_fname);
  // @@protoc_insertion_point(field_set_allocated:anyq.PatternConfig.pat_fname)
}

// required string dict_fname = 2;
bool PatternConfig::has_dict_fname() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void PatternConfig::set_has_dict_fname() {
  _has_bits_[0] |= 0x00000002u;
}
void PatternConfig::clear_has_dict_fname() {
  _has_bits_[0] &= ~0x00000002u;
}
void PatternConfig::clear_dict_fname() {
  dict_fname_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_dict_fname();
}
const ::std::string& PatternConfig::dict_fname() const {
  // @@protoc_insertion_point(field_get:anyq.PatternConfig.dict_fname)
  return dict_fname_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void PatternConfig::set_dict_fname(const ::std::string& value) {
  set_has_dict_fname();
  dict_fname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:anyq.PatternConfig.dict_fname)
}
void PatternConfig::set_dict_fname(const char* value) {
  set_has_dict_fname();
  dict_fname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:anyq.PatternConfig.dict_fname)
}
void PatternConfig::set_dict_fname(const char* value, size_t size) {
  set_has_dict_fname();
  dict_fname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:anyq.PatternConfig.dict_fname)
}
::std::string* PatternConfig::mutable_dict_fname() {
  set_has_dict_fname();
  // @@protoc_insertion_point(field_mutable:anyq.PatternConfig.dict_fname)
  return dict_fname_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* PatternConfig::release_dict_fname() {
  // @@protoc_insertion_point(field_release:anyq.PatternConfig.dict_fname)
  clear_has_dict_fname();
  return dict_fname_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void PatternConfig::set_allocated_dict_fname(::std::string* dict_fname) {
  if (dict_fname != NULL) {
    set_has_dict_fname();
  } else {
    clear_has_dict_fname();
  }
  dict_fname_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), dict_fname);
  // @@protoc_insertion_point(field_set_allocated:anyq.PatternConfig.dict_fname)
}

// required string igno_fname = 3;
bool PatternConfig::has_igno_fname() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
void PatternConfig::set_has_igno_fname() {
  _has_bits_[0] |= 0x00000004u;
}
void PatternConfig::clear_has_igno_fname() {
  _has_bits_[0] &= ~0x00000004u;
}
void PatternConfig::clear_igno_fname() {
  igno_fname_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_igno_fname();
}
const ::std::string& PatternConfig::igno_fname() const {
  // @@protoc_insertion_point(field_get:anyq.PatternConfig.igno_fname)
  return igno_fname_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void PatternConfig::set_igno_fname(const ::std::string& value) {
  set_has_igno_fname();
  igno_fname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:anyq.PatternConfig.igno_fname)
}
void PatternConfig::set_igno_fname(const char* value) {
  set_has_igno_fname();
  igno_fname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:anyq.PatternConfig.igno_fname)
}
void PatternConfig::set_igno_fname(const char* value, size_t size) {
  set_has_igno_fname();
  igno_fname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:anyq.PatternConfig.igno_fname)
}
::std::string* PatternConfig::mutable_igno_fname() {
  set_has_igno_fname();
  // @@protoc_insertion_point(field_mutable:anyq.PatternConfig.igno_fname)
  return igno_fname_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* PatternConfig::release_igno_fname() {
  // @@protoc_insertion_point(field_release:anyq.PatternConfig.igno_fname)
  clear_has_igno_fname();
  return igno_fname_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void PatternConfig::set_allocated_igno_fname(::std::string* igno_fname) {
  if (igno_fname != NULL) {
    set_has_igno_fname();
  } else {
    clear_has_igno_fname();
  }
  igno_fname_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), igno_fname);
  // @@protoc_insertion_point(field_set_allocated:anyq.PatternConfig.igno_fname)
}

inline const PatternConfig* PatternConfig::internal_default_instance() {
  return &PatternConfig_default_instance_.get();
}
#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int TFSimConfig::kPadIdFieldNumber;
const int TFSimConfig::kSenLenFieldNumber;
const int TFSimConfig::kLeftInputNameFieldNumber;
const int TFSimConfig::kRightInputNameFieldNumber;
const int TFSimConfig::kOutputNameFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

TFSimConfig::TFSimConfig()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (this != internal_default_instance()) protobuf_InitDefaults_anyq_2eproto();
  SharedCtor();
  // @@protoc_insertion_point(constructor:anyq.TFSimConfig)
}

void TFSimConfig::InitAsDefaultInstance() {
}

TFSimConfig::TFSimConfig(const TFSimConfig& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  UnsafeMergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:anyq.TFSimConfig)
}

void TFSimConfig::SharedCtor() {
  _cached_size_ = 0;
  left_input_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  right_input_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  output_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&pad_id_, 0, reinterpret_cast<char*>(&sen_len_) -
    reinterpret_cast<char*>(&pad_id_) + sizeof(sen_len_));
}

TFSimConfig::~TFSimConfig() {
  // @@protoc_insertion_point(destructor:anyq.TFSimConfig)
  SharedDtor();
}

void TFSimConfig::SharedDtor() {
  left_input_name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  right_input_name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  output_name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void TFSimConfig::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TFSimConfig::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return TFSimConfig_descriptor_;
}

const TFSimConfig& TFSimConfig::default_instance() {
  protobuf_InitDefaults_anyq_2eproto();
  return *internal_default_instance();
}

::google::protobuf::internal::ExplicitlyConstructed<TFSimConfig> TFSimConfig_default_instance_;

TFSimConfig* TFSimConfig::New(::google::protobuf::Arena* arena) const {
  TFSimConfig* n = new TFSimConfig;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void TFSimConfig::Clear() {
// @@protoc_insertion_point(message_clear_start:anyq.TFSimConfig)
#if defined(__clang__)
#define ZR_HELPER_(f) \
  _Pragma("clang diagnostic push") \
  _Pragma("clang diagnostic ignored \"-Winvalid-offsetof\"") \
  __builtin_offsetof(TFSimConfig, f) \
  _Pragma("clang diagnostic pop")
#else
#define ZR_HELPER_(f) reinterpret_cast<char*>(\
  &reinterpret_cast<TFSimConfig*>(16)->f)
#endif

#define ZR_(first, last) do {\
  ::memset(&(first), 0,\
           ZR_HELPER_(last) - ZR_HELPER_(first) + sizeof(last));\
} while (0)

  if (_has_bits_[0 / 32] & 31u) {
    ZR_(pad_id_, sen_len_);
    if (has_left_input_name()) {
      left_input_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
    if (has_right_input_name()) {
      right_input_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
    if (has_output_name()) {
      output_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
  }

#undef ZR_HELPER_
#undef ZR_

  _has_bits_.Clear();
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool TFSimConfig::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:anyq.TFSimConfig)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 pad_id = 1;
      case 1: {
        if (tag == 8) {
          set_has_pad_id();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &pad_id_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_sen_len;
        break;
      }

      // optional int32 sen_len = 2;
      case 2: {
        if (tag == 16) {
         parse_sen_len:
          set_has_sen_len();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &sen_len_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_left_input_name;
        break;
      }

      // optional string left_input_name = 3;
      case 3: {
        if (tag == 26) {
         parse_left_input_name:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_left_input_name()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->left_input_name().data(), this->left_input_name().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "anyq.TFSimConfig.left_input_name");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(34)) goto parse_right_input_name;
        break;
      }

      // optional string right_input_name = 4;
      case 4: {
        if (tag == 34) {
         parse_right_input_name:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_right_input_name()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->right_input_name().data(), this->right_input_name().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "anyq.TFSimConfig.right_input_name");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(42)) goto parse_output_name;
        break;
      }

      // optional string output_name = 5;
      case 5: {
        if (tag == 42) {
         parse_output_name:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_output_name()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->output_name().data(), this->output_name().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "anyq.TFSimConfig.output_name");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:anyq.TFSimConfig)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:anyq.TFSimConfig)
  return false;
#undef DO_
}

void TFSimConfig::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:anyq.TFSimConfig)
  // optional int32 pad_id = 1;
  if (has_pad_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->pad_id(), output);
  }

  // optional int32 sen_len = 2;
  if (has_sen_len()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->sen_len(), output);
  }

  // optional string left_input_name = 3;
  if (has_left_input_name()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->left_input_name().data(), this->left_input_name().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "anyq.TFSimConfig.left_input_name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->left_input_name(), output);
  }

  // optional string right_input_name = 4;
  if (has_right_input_name()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->right_input_name().data(), this->right_input_name().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "anyq.TFSimConfig.right_input_name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->right_input_name(), output);
  }

  // optional string output_name = 5;
  if (has_output_name()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->output_name().data(), this->output_name().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "anyq.TFSimConfig.output_name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      5, this->output_name(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:anyq.TFSimConfig)
}

::google::protobuf::uint8* TFSimConfig::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:anyq.TFSimConfig)
  // optional int32 pad_id = 1;
  if (has_pad_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->pad_id(), target);
  }

  // optional int32 sen_len = 2;
  if (has_sen_len()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->sen_len(), target);
  }

  // optional string left_input_name = 3;
  if (has_left_input_name()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->left_input_name().data(), this->left_input_name().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "anyq.TFSimConfig.left_input_name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->left_input_name(), target);
  }

  // optional string right_input_name = 4;
  if (has_right_input_name()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->right_input_name().data(), this->right_input_name().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "anyq.TFSimConfig.right_input_name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->right_input_name(), target);
  }

  // optional string output_name = 5;
  if (has_output_name()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->output_name().data(), this->output_name().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "anyq.TFSimConfig.output_name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        5, this->output_name(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:anyq.TFSimConfig)
  return target;
}

size_t TFSimConfig::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:anyq.TFSimConfig)
  size_t total_size = 0;

  if (_has_bits_[0 / 32] & 31u) {
    // optional int32 pad_id = 1;
    if (has_pad_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->pad_id());
    }

    // optional int32 sen_len = 2;
    if (has_sen_len()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->sen_len());
    }

    // optional string left_input_name = 3;
    if (has_left_input_name()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->left_input_name());
    }

    // optional string right_input_name = 4;
    if (has_right_input_name()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->right_input_name());
    }

    // optional string output_name = 5;
    if (has_output_name()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->output_name());
    }

  }
  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void TFSimConfig::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:anyq.TFSimConfig)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const TFSimConfig* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const TFSimConfig>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:anyq.TFSimConfig)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:anyq.TFSimConfig)
    UnsafeMergeFrom(*source);
  }
}

void TFSimConfig::MergeFrom(const TFSimConfig& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:anyq.TFSimConfig)
  if (GOOGLE_PREDICT_TRUE(&from != this)) {
    UnsafeMergeFrom(from);
  } else {
    MergeFromFail(__LINE__);
  }
}

void TFSimConfig::UnsafeMergeFrom(const TFSimConfig& from) {
  GOOGLE_DCHECK(&from != this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_pad_id()) {
      set_pad_id(from.pad_id());
    }
    if (from.has_sen_len()) {
      set_sen_len(from.sen_len());
    }
    if (from.has_left_input_name()) {
      set_has_left_input_name();
      left_input_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.left_input_name_);
    }
    if (from.has_right_input_name()) {
      set_has_right_input_name();
      right_input_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.right_input_name_);
    }
    if (from.has_output_name()) {
      set_has_output_name();
      output_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.output_name_);
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::UnknownFieldSet::MergeToInternalMetdata(
      from.unknown_fields(), &_internal_metadata_);
  }
}

void TFSimConfig::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:anyq.TFSimConfig)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TFSimConfig::CopyFrom(const TFSimConfig& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:anyq.TFSimConfig)
  if (&from == this) return;
  Clear();
  UnsafeMergeFrom(from);
}

bool TFSimConfig::IsInitialized() const {

  return true;
}

void TFSimConfig::Swap(TFSimConfig* other) {
  if (other == this) return;
  InternalSwap(other);
}
void TFSimConfig::InternalSwap(TFSimConfig* other) {
  std::swap(pad_id_, other->pad_id_);
  std::swap(sen_len_, other->sen_len_);
  left_input_name_.Swap(&other->left_input_name_);
  right_input_name_.Swap(&other->right_input_name_);
  output_name_.Swap(&other->output_name_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata TFSimConfig::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = TFSimConfig_descriptor_;
  metadata.reflection = TFSimConfig_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// TFSimConfig

// optional int32 pad_id = 1;
bool TFSimConfig::has_pad_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void TFSimConfig::set_has_pad_id() {
  _has_bits_[0] |= 0x00000001u;
}
void TFSimConfig::clear_has_pad_id() {
  _has_bits_[0] &= ~0x00000001u;
}
void TFSimConfig::clear_pad_id() {
  pad_id_ = 0;
  clear_has_pad_id();
}
::google::protobuf::int32 TFSimConfig::pad_id() const {
  // @@protoc_insertion_point(field_get:anyq.TFSimConfig.pad_id)
  return pad_id_;
}
void TFSimConfig::set_pad_id(::google::protobuf::int32 value) {
  set_has_pad_id();
  pad_id_ = value;
  // @@protoc_insertion_point(field_set:anyq.TFSimConfig.pad_id)
}

// optional int32 sen_len = 2;
bool TFSimConfig::has_sen_len() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void TFSimConfig::set_has_sen_len() {
  _has_bits_[0] |= 0x00000002u;
}
void TFSimConfig::clear_has_sen_len() {
  _has_bits_[0] &= ~0x00000002u;
}
void TFSimConfig::clear_sen_len() {
  sen_len_ = 0;
  clear_has_sen_len();
}
::google::protobuf::int32 TFSimConfig::sen_len() const {
  // @@protoc_insertion_point(field_get:anyq.TFSimConfig.sen_len)
  return sen_len_;
}
void TFSimConfig::set_sen_len(::google::protobuf::int32 value) {
  set_has_sen_len();
  sen_len_ = value;
  // @@protoc_insertion_point(field_set:anyq.TFSimConfig.sen_len)
}

// optional string left_input_name = 3;
bool TFSimConfig::has_left_input_name() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
void TFSimConfig::set_has_left_input_name() {
  _has_bits_[0] |= 0x00000004u;
}
void TFSimConfig::clear_has_left_input_name() {
  _has_bits_[0] &= ~0x00000004u;
}
void TFSimConfig::clear_left_input_name() {
  left_input_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_left_input_name();
}
const ::std::string& TFSimConfig::left_input_name() const {
  // @@protoc_insertion_point(field_get:anyq.TFSimConfig.left_input_name)
  return left_input_name_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void TFSimConfig::set_left_input_name(const ::std::string& value) {
  set_has_left_input_name();
  left_input_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:anyq.TFSimConfig.left_input_name)
}
void TFSimConfig::set_left_input_name(const char* value) {
  set_has_left_input_name();
  left_input_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:anyq.TFSimConfig.left_input_name)
}
void TFSimConfig::set_left_input_name(const char* value, size_t size) {
  set_has_left_input_name();
  left_input_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:anyq.TFSimConfig.left_input_name)
}
::std::string* TFSimConfig::mutable_left_input_name() {
  set_has_left_input_name();
  // @@protoc_insertion_point(field_mutable:anyq.TFSimConfig.left_input_name)
  return left_input_name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* TFSimConfig::release_left_input_name() {
  // @@protoc_insertion_point(field_release:anyq.TFSimConfig.left_input_name)
  clear_has_left_input_name();
  return left_input_name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void TFSimConfig::set_allocated_left_input_name(::std::string* left_input_name) {
  if (left_input_name != NULL) {
    set_has_left_input_name();
  } else {
    clear_has_left_input_name();
  }
  left_input_name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), left_input_name);
  // @@protoc_insertion_point(field_set_allocated:anyq.TFSimConfig.left_input_name)
}

// optional string right_input_name = 4;
bool TFSimConfig::has_right_input_name() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
void TFSimConfig::set_has_right_input_name() {
  _has_bits_[0] |= 0x00000008u;
}
void TFSimConfig::clear_has_right_input_name() {
  _has_bits_[0] &= ~0x00000008u;
}
void TFSimConfig::clear_right_input_name() {
  right_input_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_right_input_name();
}
const ::std::string& TFSimConfig::right_input_name() const {
  // @@protoc_insertion_point(field_get:anyq.TFSimConfig.right_input_name)
  return right_input_name_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void TFSimConfig::set_right_input_name(const ::std::string& value) {
  set_has_right_input_name();
  right_input_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:anyq.TFSimConfig.right_input_name)
}
void TFSimConfig::set_right_input_name(const char* value) {
  set_has_right_input_name();
  right_input_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:anyq.TFSimConfig.right_input_name)
}
void TFSimConfig::set_right_input_name(const char* value, size_t size) {
  set_has_right_input_name();
  right_input_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:anyq.TFSimConfig.right_input_name)
}
::std::string* TFSimConfig::mutable_right_input_name() {
  set_has_right_input_name();
  // @@protoc_insertion_point(field_mutable:anyq.TFSimConfig.right_input_name)
  return right_input_name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* TFSimConfig::release_right_input_name() {
  // @@protoc_insertion_point(field_release:anyq.TFSimConfig.right_input_name)
  clear_has_right_input_name();
  return right_input_name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void TFSimConfig::set_allocated_right_input_name(::std::string* right_input_name) {
  if (right_input_name != NULL) {
    set_has_right_input_name();
  } else {
    clear_has_right_input_name();
  }
  right_input_name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), right_input_name);
  // @@protoc_insertion_point(field_set_allocated:anyq.TFSimConfig.right_input_name)
}

// optional string output_name = 5;
bool TFSimConfig::has_output_name() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
void TFSimConfig::set_has_output_name() {
  _has_bits_[0] |= 0x00000010u;
}
void TFSimConfig::clear_has_output_name() {
  _has_bits_[0] &= ~0x00000010u;
}
void TFSimConfig::clear_output_name() {
  output_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_output_name();
}
const ::std::string& TFSimConfig::output_name() const {
  // @@protoc_insertion_point(field_get:anyq.TFSimConfig.output_name)
  return output_name_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void TFSimConfig::set_output_name(const ::std::string& value) {
  set_has_output_name();
  output_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:anyq.TFSimConfig.output_name)
}
void TFSimConfig::set_output_name(const char* value) {
  set_has_output_name();
  output_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:anyq.TFSimConfig.output_name)
}
void TFSimConfig::set_output_name(const char* value, size_t size) {
  set_has_output_name();
  output_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:anyq.TFSimConfig.output_name)
}
::std::string* TFSimConfig::mutable_output_name() {
  set_has_output_name();
  // @@protoc_insertion_point(field_mutable:anyq.TFSimConfig.output_name)
  return output_name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* TFSimConfig::release_output_name() {
  // @@protoc_insertion_point(field_release:anyq.TFSimConfig.output_name)
  clear_has_output_name();
  return output_name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void TFSimConfig::set_allocated_output_name(::std::string* output_name) {
  if (output_name != NULL) {
    set_has_output_name();
  } else {
    clear_has_output_name();
  }
  output_name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), output_name);
  // @@protoc_insertion_point(field_set_allocated:anyq.TFSimConfig.output_name)
}

inline const TFSimConfig* TFSimConfig::internal_default_instance() {
  return &TFSimConfig_default_instance_.get();
}
#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int MatchingConfig::kNameFieldNumber;
const int MatchingConfig::kTypeFieldNumber;
const int MatchingConfig::kUsingDictNameFieldNumber;
const int MatchingConfig::kOutputNumFieldNumber;
const int MatchingConfig::kRoughFieldNumber;
const int MatchingConfig::kPatternFieldNumber;
const int MatchingConfig::kTfconfFieldNumber;
const int MatchingConfig::kQueryFeedNameFieldNumber;
const int MatchingConfig::kCandFeedNameFieldNumber;
const int MatchingConfig::kScoreFetchNameFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

MatchingConfig::MatchingConfig()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (this != internal_default_instance()) protobuf_InitDefaults_anyq_2eproto();
  SharedCtor();
  // @@protoc_insertion_point(constructor:anyq.MatchingConfig)
}

void MatchingConfig::InitAsDefaultInstance() {
  pattern_ = const_cast< ::anyq::PatternConfig*>(
      ::anyq::PatternConfig::internal_default_instance());
  tfconf_ = const_cast< ::anyq::TFSimConfig*>(
      ::anyq::TFSimConfig::internal_default_instance());
}

MatchingConfig::MatchingConfig(const MatchingConfig& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  UnsafeMergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:anyq.MatchingConfig)
}

void MatchingConfig::SharedCtor() {
  _cached_size_ = 0;
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  type_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  using_dict_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  query_feed_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  cand_feed_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  score_fetch_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  pattern_ = NULL;
  tfconf_ = NULL;
  ::memset(&output_num_, 0, reinterpret_cast<char*>(&rough_) -
    reinterpret_cast<char*>(&output_num_) + sizeof(rough_));
}

MatchingConfig::~MatchingConfig() {
  // @@protoc_insertion_point(destructor:anyq.MatchingConfig)
  SharedDtor();
}

void MatchingConfig::SharedDtor() {
  name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  type_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  using_dict_name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  query_feed_name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  cand_feed_name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  score_fetch_name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != &MatchingConfig_default_instance_.get()) {
    delete pattern_;
    delete tfconf_;
  }
}

void MatchingConfig::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* MatchingConfig::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return MatchingConfig_descriptor_;
}

const MatchingConfig& MatchingConfig::default_instance() {
  protobuf_InitDefaults_anyq_2eproto();
  return *internal_default_instance();
}

::google::protobuf::internal::ExplicitlyConstructed<MatchingConfig> MatchingConfig_default_instance_;

MatchingConfig* MatchingConfig::New(::google::protobuf::Arena* arena) const {
  MatchingConfig* n = new MatchingConfig;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void MatchingConfig::Clear() {
// @@protoc_insertion_point(message_clear_start:anyq.MatchingConfig)
#if defined(__clang__)
#define ZR_HELPER_(f) \
  _Pragma("clang diagnostic push") \
  _Pragma("clang diagnostic ignored \"-Winvalid-offsetof\"") \
  __builtin_offsetof(MatchingConfig, f) \
  _Pragma("clang diagnostic pop")
#else
#define ZR_HELPER_(f) reinterpret_cast<char*>(\
  &reinterpret_cast<MatchingConfig*>(16)->f)
#endif

#define ZR_(first, last) do {\
  ::memset(&(first), 0,\
           ZR_HELPER_(last) - ZR_HELPER_(first) + sizeof(last));\
} while (0)

  if (_has_bits_[0 / 32] & 255u) {
    ZR_(output_num_, rough_);
    if (has_name()) {
      name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
    if (has_type()) {
      type_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
    if (has_using_dict_name()) {
      using_dict_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
    if (has_pattern()) {
      if (pattern_ != NULL) pattern_->::anyq::PatternConfig::Clear();
    }
    if (has_tfconf()) {
      if (tfconf_ != NULL) tfconf_->::anyq::TFSimConfig::Clear();
    }
    if (has_query_feed_name()) {
      query_feed_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
  }
  if (_has_bits_[8 / 32] & 768u) {
    if (has_cand_feed_name()) {
      cand_feed_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
    if (has_score_fetch_name()) {
      score_fetch_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
  }

#undef ZR_HELPER_
#undef ZR_

  _has_bits_.Clear();
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool MatchingConfig::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:anyq.MatchingConfig)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required string name = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->name().data(), this->name().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "anyq.MatchingConfig.name");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_type;
        break;
      }

      // required string type = 2;
      case 2: {
        if (tag == 18) {
         parse_type:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_type()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->type().data(), this->type().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "anyq.MatchingConfig.type");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_using_dict_name;
        break;
      }

      // optional string using_dict_name = 3;
      case 3: {
        if (tag == 26) {
         parse_using_dict_name:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_using_dict_name()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->using_dict_name().data(), this->using_dict_name().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "anyq.MatchingConfig.using_dict_name");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(32)) goto parse_output_num;
        break;
      }

      // required int32 output_num = 4;
      case 4: {
        if (tag == 32) {
         parse_output_num:
          set_has_output_num();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &output_num_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(40)) goto parse_rough;
        break;
      }

      // required bool rough = 5;
      case 5: {
        if (tag == 40) {
         parse_rough:
          set_has_rough();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &rough_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(50)) goto parse_pattern;
        break;
      }

      // optional .anyq.PatternConfig pattern = 6;
      case 6: {
        if (tag == 50) {
         parse_pattern:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_pattern()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(82)) goto parse_tfconf;
        break;
      }

      // optional .anyq.TFSimConfig tfconf = 10;
      case 10: {
        if (tag == 82) {
         parse_tfconf:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_tfconf()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(90)) goto parse_query_feed_name;
        break;
      }

      // optional string query_feed_name = 11;
      case 11: {
        if (tag == 90) {
         parse_query_feed_name:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_query_feed_name()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->query_feed_name().data(), this->query_feed_name().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "anyq.MatchingConfig.query_feed_name");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(98)) goto parse_cand_feed_name;
        break;
      }

      // optional string cand_feed_name = 12;
      case 12: {
        if (tag == 98) {
         parse_cand_feed_name:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_cand_feed_name()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->cand_feed_name().data(), this->cand_feed_name().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "anyq.MatchingConfig.cand_feed_name");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(106)) goto parse_score_fetch_name;
        break;
      }

      // optional string score_fetch_name = 13;
      case 13: {
        if (tag == 106) {
         parse_score_fetch_name:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_score_fetch_name()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->score_fetch_name().data(), this->score_fetch_name().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "anyq.MatchingConfig.score_fetch_name");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:anyq.MatchingConfig)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:anyq.MatchingConfig)
  return false;
#undef DO_
}

void MatchingConfig::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:anyq.MatchingConfig)
  // required string name = 1;
  if (has_name()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->name().data(), this->name().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "anyq.MatchingConfig.name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->name(), output);
  }

  // required string type = 2;
  if (has_type()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->type().data(), this->type().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "anyq.MatchingConfig.type");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->type(), output);
  }

  // optional string using_dict_name = 3;
  if (has_using_dict_name()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->using_dict_name().data(), this->using_dict_name().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "anyq.MatchingConfig.using_dict_name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->using_dict_name(), output);
  }

  // required int32 output_num = 4;
  if (has_output_num()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->output_num(), output);
  }

  // required bool rough = 5;
  if (has_rough()) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(5, this->rough(), output);
  }

  // optional .anyq.PatternConfig pattern = 6;
  if (has_pattern()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      6, *this->pattern_, output);
  }

  // optional .anyq.TFSimConfig tfconf = 10;
  if (has_tfconf()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      10, *this->tfconf_, output);
  }

  // optional string query_feed_name = 11;
  if (has_query_feed_name()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->query_feed_name().data(), this->query_feed_name().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "anyq.MatchingConfig.query_feed_name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      11, this->query_feed_name(), output);
  }

  // optional string cand_feed_name = 12;
  if (has_cand_feed_name()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->cand_feed_name().data(), this->cand_feed_name().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "anyq.MatchingConfig.cand_feed_name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      12, this->cand_feed_name(), output);
  }

  // optional string score_fetch_name = 13;
  if (has_score_fetch_name()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->score_fetch_name().data(), this->score_fetch_name().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "anyq.MatchingConfig.score_fetch_name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      13, this->score_fetch_name(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:anyq.MatchingConfig)
}

::google::protobuf::uint8* MatchingConfig::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:anyq.MatchingConfig)
  // required string name = 1;
  if (has_name()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->name().data(), this->name().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "anyq.MatchingConfig.name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->name(), target);
  }

  // required string type = 2;
  if (has_type()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->type().data(), this->type().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "anyq.MatchingConfig.type");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->type(), target);
  }

  // optional string using_dict_name = 3;
  if (has_using_dict_name()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->using_dict_name().data(), this->using_dict_name().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "anyq.MatchingConfig.using_dict_name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->using_dict_name(), target);
  }

  // required int32 output_num = 4;
  if (has_output_num()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->output_num(), target);
  }

  // required bool rough = 5;
  if (has_rough()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(5, this->rough(), target);
  }

  // optional .anyq.PatternConfig pattern = 6;
  if (has_pattern()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        6, *this->pattern_, false, target);
  }

  // optional .anyq.TFSimConfig tfconf = 10;
  if (has_tfconf()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        10, *this->tfconf_, false, target);
  }

  // optional string query_feed_name = 11;
  if (has_query_feed_name()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->query_feed_name().data(), this->query_feed_name().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "anyq.MatchingConfig.query_feed_name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        11, this->query_feed_name(), target);
  }

  // optional string cand_feed_name = 12;
  if (has_cand_feed_name()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->cand_feed_name().data(), this->cand_feed_name().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "anyq.MatchingConfig.cand_feed_name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        12, this->cand_feed_name(), target);
  }

  // optional string score_fetch_name = 13;
  if (has_score_fetch_name()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->score_fetch_name().data(), this->score_fetch_name().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "anyq.MatchingConfig.score_fetch_name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        13, this->score_fetch_name(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:anyq.MatchingConfig)
  return target;
}

size_t MatchingConfig::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:anyq.MatchingConfig)
  size_t total_size = 0;

  if (has_name()) {
    // required string name = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->name());
  }

  if (has_type()) {
    // required string type = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->type());
  }

  if (has_output_num()) {
    // required int32 output_num = 4;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->output_num());
  }

  if (has_rough()) {
    // required bool rough = 5;
    total_size += 1 + 1;
  }

  return total_size;
}
size_t MatchingConfig::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:anyq.MatchingConfig)
  size_t total_size = 0;

  if (((_has_bits_[0] & 0x0000001b) ^ 0x0000001b) == 0) {  // All required fields are present.
    // required string name = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->name());

    // required string type = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->type());

    // required int32 output_num = 4;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->output_num());

    // required bool rough = 5;
    total_size += 1 + 1;

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  if (_has_bits_[2 / 32] & 228u) {
    // optional string using_dict_name = 3;
    if (has_using_dict_name()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->using_dict_name());
    }

    // optional .anyq.PatternConfig pattern = 6;
    if (has_pattern()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *this->pattern_);
    }

    // optional .anyq.TFSimConfig tfconf = 10;
    if (has_tfconf()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *this->tfconf_);
    }

    // optional string query_feed_name = 11;
    if (has_query_feed_name()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->query_feed_name());
    }

  }
  if (_has_bits_[8 / 32] & 768u) {
    // optional string cand_feed_name = 12;
    if (has_cand_feed_name()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->cand_feed_name());
    }

    // optional string score_fetch_name = 13;
    if (has_score_fetch_name()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->score_fetch_name());
    }

  }
  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void MatchingConfig::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:anyq.MatchingConfig)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const MatchingConfig* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const MatchingConfig>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:anyq.MatchingConfig)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:anyq.MatchingConfig)
    UnsafeMergeFrom(*source);
  }
}

void MatchingConfig::MergeFrom(const MatchingConfig& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:anyq.MatchingConfig)
  if (GOOGLE_PREDICT_TRUE(&from != this)) {
    UnsafeMergeFrom(from);
  } else {
    MergeFromFail(__LINE__);
  }
}

void MatchingConfig::UnsafeMergeFrom(const MatchingConfig& from) {
  GOOGLE_DCHECK(&from != this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_name()) {
      set_has_name();
      name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
    }
    if (from.has_type()) {
      set_has_type();
      type_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.type_);
    }
    if (from.has_using_dict_name()) {
      set_has_using_dict_name();
      using_dict_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.using_dict_name_);
    }
    if (from.has_output_num()) {
      set_output_num(from.output_num());
    }
    if (from.has_rough()) {
      set_rough(from.rough());
    }
    if (from.has_pattern()) {
      mutable_pattern()->::anyq::PatternConfig::MergeFrom(from.pattern());
    }
    if (from.has_tfconf()) {
      mutable_tfconf()->::anyq::TFSimConfig::MergeFrom(from.tfconf());
    }
    if (from.has_query_feed_name()) {
      set_has_query_feed_name();
      query_feed_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.query_feed_name_);
    }
  }
  if (from._has_bits_[8 / 32] & (0xffu << (8 % 32))) {
    if (from.has_cand_feed_name()) {
      set_has_cand_feed_name();
      cand_feed_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.cand_feed_name_);
    }
    if (from.has_score_fetch_name()) {
      set_has_score_fetch_name();
      score_fetch_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.score_fetch_name_);
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::UnknownFieldSet::MergeToInternalMetdata(
      from.unknown_fields(), &_internal_metadata_);
  }
}

void MatchingConfig::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:anyq.MatchingConfig)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MatchingConfig::CopyFrom(const MatchingConfig& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:anyq.MatchingConfig)
  if (&from == this) return;
  Clear();
  UnsafeMergeFrom(from);
}

bool MatchingConfig::IsInitialized() const {
  if ((_has_bits_[0] & 0x0000001b) != 0x0000001b) return false;

  if (has_pattern()) {
    if (!this->pattern_->IsInitialized()) return false;
  }
  return true;
}

void MatchingConfig::Swap(MatchingConfig* other) {
  if (other == this) return;
  InternalSwap(other);
}
void MatchingConfig::InternalSwap(MatchingConfig* other) {
  name_.Swap(&other->name_);
  type_.Swap(&other->type_);
  using_dict_name_.Swap(&other->using_dict_name_);
  std::swap(output_num_, other->output_num_);
  std::swap(rough_, other->rough_);
  std::swap(pattern_, other->pattern_);
  std::swap(tfconf_, other->tfconf_);
  query_feed_name_.Swap(&other->query_feed_name_);
  cand_feed_name_.Swap(&other->cand_feed_name_);
  score_fetch_name_.Swap(&other->score_fetch_name_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata MatchingConfig::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = MatchingConfig_descriptor_;
  metadata.reflection = MatchingConfig_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// MatchingConfig

// required string name = 1;
bool MatchingConfig::has_name() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void MatchingConfig::set_has_name() {
  _has_bits_[0] |= 0x00000001u;
}
void MatchingConfig::clear_has_name() {
  _has_bits_[0] &= ~0x00000001u;
}
void MatchingConfig::clear_name() {
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_name();
}
const ::std::string& MatchingConfig::name() const {
  // @@protoc_insertion_point(field_get:anyq.MatchingConfig.name)
  return name_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void MatchingConfig::set_name(const ::std::string& value) {
  set_has_name();
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:anyq.MatchingConfig.name)
}
void MatchingConfig::set_name(const char* value) {
  set_has_name();
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:anyq.MatchingConfig.name)
}
void MatchingConfig::set_name(const char* value, size_t size) {
  set_has_name();
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:anyq.MatchingConfig.name)
}
::std::string* MatchingConfig::mutable_name() {
  set_has_name();
  // @@protoc_insertion_point(field_mutable:anyq.MatchingConfig.name)
  return name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* MatchingConfig::release_name() {
  // @@protoc_insertion_point(field_release:anyq.MatchingConfig.name)
  clear_has_name();
  return name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void MatchingConfig::set_allocated_name(::std::string* name) {
  if (name != NULL) {
    set_has_name();
  } else {
    clear_has_name();
  }
  name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), name);
  // @@protoc_insertion_point(field_set_allocated:anyq.MatchingConfig.name)
}

// required string type = 2;
bool MatchingConfig::has_type() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void MatchingConfig::set_has_type() {
  _has_bits_[0] |= 0x00000002u;
}
void MatchingConfig::clear_has_type() {
  _has_bits_[0] &= ~0x00000002u;
}
void MatchingConfig::clear_type() {
  type_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_type();
}
const ::std::string& MatchingConfig::type() const {
  // @@protoc_insertion_point(field_get:anyq.MatchingConfig.type)
  return type_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void MatchingConfig::set_type(const ::std::string& value) {
  set_has_type();
  type_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:anyq.MatchingConfig.type)
}
void MatchingConfig::set_type(const char* value) {
  set_has_type();
  type_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:anyq.MatchingConfig.type)
}
void MatchingConfig::set_type(const char* value, size_t size) {
  set_has_type();
  type_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:anyq.MatchingConfig.type)
}
::std::string* MatchingConfig::mutable_type() {
  set_has_type();
  // @@protoc_insertion_point(field_mutable:anyq.MatchingConfig.type)
  return type_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* MatchingConfig::release_type() {
  // @@protoc_insertion_point(field_release:anyq.MatchingConfig.type)
  clear_has_type();
  return type_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void MatchingConfig::set_allocated_type(::std::string* type) {
  if (type != NULL) {
    set_has_type();
  } else {
    clear_has_type();
  }
  type_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), type);
  // @@protoc_insertion_point(field_set_allocated:anyq.MatchingConfig.type)
}

// optional string using_dict_name = 3;
bool MatchingConfig::has_using_dict_name() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
void MatchingConfig::set_has_using_dict_name() {
  _has_bits_[0] |= 0x00000004u;
}
void MatchingConfig::clear_has_using_dict_name() {
  _has_bits_[0] &= ~0x00000004u;
}
void MatchingConfig::clear_using_dict_name() {
  using_dict_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_using_dict_name();
}
const ::std::string& MatchingConfig::using_dict_name() const {
  // @@protoc_insertion_point(field_get:anyq.MatchingConfig.using_dict_name)
  return using_dict_name_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void MatchingConfig::set_using_dict_name(const ::std::string& value) {
  set_has_using_dict_name();
  using_dict_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:anyq.MatchingConfig.using_dict_name)
}
void MatchingConfig::set_using_dict_name(const char* value) {
  set_has_using_dict_name();
  using_dict_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:anyq.MatchingConfig.using_dict_name)
}
void MatchingConfig::set_using_dict_name(const char* value, size_t size) {
  set_has_using_dict_name();
  using_dict_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:anyq.MatchingConfig.using_dict_name)
}
::std::string* MatchingConfig::mutable_using_dict_name() {
  set_has_using_dict_name();
  // @@protoc_insertion_point(field_mutable:anyq.MatchingConfig.using_dict_name)
  return using_dict_name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* MatchingConfig::release_using_dict_name() {
  // @@protoc_insertion_point(field_release:anyq.MatchingConfig.using_dict_name)
  clear_has_using_dict_name();
  return using_dict_name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void MatchingConfig::set_allocated_using_dict_name(::std::string* using_dict_name) {
  if (using_dict_name != NULL) {
    set_has_using_dict_name();
  } else {
    clear_has_using_dict_name();
  }
  using_dict_name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), using_dict_name);
  // @@protoc_insertion_point(field_set_allocated:anyq.MatchingConfig.using_dict_name)
}

// required int32 output_num = 4;
bool MatchingConfig::has_output_num() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
void MatchingConfig::set_has_output_num() {
  _has_bits_[0] |= 0x00000008u;
}
void MatchingConfig::clear_has_output_num() {
  _has_bits_[0] &= ~0x00000008u;
}
void MatchingConfig::clear_output_num() {
  output_num_ = 0;
  clear_has_output_num();
}
::google::protobuf::int32 MatchingConfig::output_num() const {
  // @@protoc_insertion_point(field_get:anyq.MatchingConfig.output_num)
  return output_num_;
}
void MatchingConfig::set_output_num(::google::protobuf::int32 value) {
  set_has_output_num();
  output_num_ = value;
  // @@protoc_insertion_point(field_set:anyq.MatchingConfig.output_num)
}

// required bool rough = 5;
bool MatchingConfig::has_rough() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
void MatchingConfig::set_has_rough() {
  _has_bits_[0] |= 0x00000010u;
}
void MatchingConfig::clear_has_rough() {
  _has_bits_[0] &= ~0x00000010u;
}
void MatchingConfig::clear_rough() {
  rough_ = false;
  clear_has_rough();
}
bool MatchingConfig::rough() const {
  // @@protoc_insertion_point(field_get:anyq.MatchingConfig.rough)
  return rough_;
}
void MatchingConfig::set_rough(bool value) {
  set_has_rough();
  rough_ = value;
  // @@protoc_insertion_point(field_set:anyq.MatchingConfig.rough)
}

// optional .anyq.PatternConfig pattern = 6;
bool MatchingConfig::has_pattern() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
void MatchingConfig::set_has_pattern() {
  _has_bits_[0] |= 0x00000020u;
}
void MatchingConfig::clear_has_pattern() {
  _has_bits_[0] &= ~0x00000020u;
}
void MatchingConfig::clear_pattern() {
  if (pattern_ != NULL) pattern_->::anyq::PatternConfig::Clear();
  clear_has_pattern();
}
const ::anyq::PatternConfig& MatchingConfig::pattern() const {
  // @@protoc_insertion_point(field_get:anyq.MatchingConfig.pattern)
  return pattern_ != NULL ? *pattern_
                         : *::anyq::PatternConfig::internal_default_instance();
}
::anyq::PatternConfig* MatchingConfig::mutable_pattern() {
  set_has_pattern();
  if (pattern_ == NULL) {
    pattern_ = new ::anyq::PatternConfig;
  }
  // @@protoc_insertion_point(field_mutable:anyq.MatchingConfig.pattern)
  return pattern_;
}
::anyq::PatternConfig* MatchingConfig::release_pattern() {
  // @@protoc_insertion_point(field_release:anyq.MatchingConfig.pattern)
  clear_has_pattern();
  ::anyq::PatternConfig* temp = pattern_;
  pattern_ = NULL;
  return temp;
}
void MatchingConfig::set_allocated_pattern(::anyq::PatternConfig* pattern) {
  delete pattern_;
  pattern_ = pattern;
  if (pattern) {
    set_has_pattern();
  } else {
    clear_has_pattern();
  }
  // @@protoc_insertion_point(field_set_allocated:anyq.MatchingConfig.pattern)
}

// optional .anyq.TFSimConfig tfconf = 10;
bool MatchingConfig::has_tfconf() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
void MatchingConfig::set_has_tfconf() {
  _has_bits_[0] |= 0x00000040u;
}
void MatchingConfig::clear_has_tfconf() {
  _has_bits_[0] &= ~0x00000040u;
}
void MatchingConfig::clear_tfconf() {
  if (tfconf_ != NULL) tfconf_->::anyq::TFSimConfig::Clear();
  clear_has_tfconf();
}
const ::anyq::TFSimConfig& MatchingConfig::tfconf() const {
  // @@protoc_insertion_point(field_get:anyq.MatchingConfig.tfconf)
  return tfconf_ != NULL ? *tfconf_
                         : *::anyq::TFSimConfig::internal_default_instance();
}
::anyq::TFSimConfig* MatchingConfig::mutable_tfconf() {
  set_has_tfconf();
  if (tfconf_ == NULL) {
    tfconf_ = new ::anyq::TFSimConfig;
  }
  // @@protoc_insertion_point(field_mutable:anyq.MatchingConfig.tfconf)
  return tfconf_;
}
::anyq::TFSimConfig* MatchingConfig::release_tfconf() {
  // @@protoc_insertion_point(field_release:anyq.MatchingConfig.tfconf)
  clear_has_tfconf();
  ::anyq::TFSimConfig* temp = tfconf_;
  tfconf_ = NULL;
  return temp;
}
void MatchingConfig::set_allocated_tfconf(::anyq::TFSimConfig* tfconf) {
  delete tfconf_;
  tfconf_ = tfconf;
  if (tfconf) {
    set_has_tfconf();
  } else {
    clear_has_tfconf();
  }
  // @@protoc_insertion_point(field_set_allocated:anyq.MatchingConfig.tfconf)
}

// optional string query_feed_name = 11;
bool MatchingConfig::has_query_feed_name() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
void MatchingConfig::set_has_query_feed_name() {
  _has_bits_[0] |= 0x00000080u;
}
void MatchingConfig::clear_has_query_feed_name() {
  _has_bits_[0] &= ~0x00000080u;
}
void MatchingConfig::clear_query_feed_name() {
  query_feed_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_query_feed_name();
}
const ::std::string& MatchingConfig::query_feed_name() const {
  // @@protoc_insertion_point(field_get:anyq.MatchingConfig.query_feed_name)
  return query_feed_name_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void MatchingConfig::set_query_feed_name(const ::std::string& value) {
  set_has_query_feed_name();
  query_feed_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:anyq.MatchingConfig.query_feed_name)
}
void MatchingConfig::set_query_feed_name(const char* value) {
  set_has_query_feed_name();
  query_feed_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:anyq.MatchingConfig.query_feed_name)
}
void MatchingConfig::set_query_feed_name(const char* value, size_t size) {
  set_has_query_feed_name();
  query_feed_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:anyq.MatchingConfig.query_feed_name)
}
::std::string* MatchingConfig::mutable_query_feed_name() {
  set_has_query_feed_name();
  // @@protoc_insertion_point(field_mutable:anyq.MatchingConfig.query_feed_name)
  return query_feed_name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* MatchingConfig::release_query_feed_name() {
  // @@protoc_insertion_point(field_release:anyq.MatchingConfig.query_feed_name)
  clear_has_query_feed_name();
  return query_feed_name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void MatchingConfig::set_allocated_query_feed_name(::std::string* query_feed_name) {
  if (query_feed_name != NULL) {
    set_has_query_feed_name();
  } else {
    clear_has_query_feed_name();
  }
  query_feed_name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), query_feed_name);
  // @@protoc_insertion_point(field_set_allocated:anyq.MatchingConfig.query_feed_name)
}

// optional string cand_feed_name = 12;
bool MatchingConfig::has_cand_feed_name() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
void MatchingConfig::set_has_cand_feed_name() {
  _has_bits_[0] |= 0x00000100u;
}
void MatchingConfig::clear_has_cand_feed_name() {
  _has_bits_[0] &= ~0x00000100u;
}
void MatchingConfig::clear_cand_feed_name() {
  cand_feed_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_cand_feed_name();
}
const ::std::string& MatchingConfig::cand_feed_name() const {
  // @@protoc_insertion_point(field_get:anyq.MatchingConfig.cand_feed_name)
  return cand_feed_name_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void MatchingConfig::set_cand_feed_name(const ::std::string& value) {
  set_has_cand_feed_name();
  cand_feed_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:anyq.MatchingConfig.cand_feed_name)
}
void MatchingConfig::set_cand_feed_name(const char* value) {
  set_has_cand_feed_name();
  cand_feed_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:anyq.MatchingConfig.cand_feed_name)
}
void MatchingConfig::set_cand_feed_name(const char* value, size_t size) {
  set_has_cand_feed_name();
  cand_feed_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:anyq.MatchingConfig.cand_feed_name)
}
::std::string* MatchingConfig::mutable_cand_feed_name() {
  set_has_cand_feed_name();
  // @@protoc_insertion_point(field_mutable:anyq.MatchingConfig.cand_feed_name)
  return cand_feed_name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* MatchingConfig::release_cand_feed_name() {
  // @@protoc_insertion_point(field_release:anyq.MatchingConfig.cand_feed_name)
  clear_has_cand_feed_name();
  return cand_feed_name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void MatchingConfig::set_allocated_cand_feed_name(::std::string* cand_feed_name) {
  if (cand_feed_name != NULL) {
    set_has_cand_feed_name();
  } else {
    clear_has_cand_feed_name();
  }
  cand_feed_name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), cand_feed_name);
  // @@protoc_insertion_point(field_set_allocated:anyq.MatchingConfig.cand_feed_name)
}

// optional string score_fetch_name = 13;
bool MatchingConfig::has_score_fetch_name() const {
  return (_has_bits_[0] & 0x00000200u) != 0;
}
void MatchingConfig::set_has_score_fetch_name() {
  _has_bits_[0] |= 0x00000200u;
}
void MatchingConfig::clear_has_score_fetch_name() {
  _has_bits_[0] &= ~0x00000200u;
}
void MatchingConfig::clear_score_fetch_name() {
  score_fetch_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_score_fetch_name();
}
const ::std::string& MatchingConfig::score_fetch_name() const {
  // @@protoc_insertion_point(field_get:anyq.MatchingConfig.score_fetch_name)
  return score_fetch_name_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void MatchingConfig::set_score_fetch_name(const ::std::string& value) {
  set_has_score_fetch_name();
  score_fetch_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:anyq.MatchingConfig.score_fetch_name)
}
void MatchingConfig::set_score_fetch_name(const char* value) {
  set_has_score_fetch_name();
  score_fetch_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:anyq.MatchingConfig.score_fetch_name)
}
void MatchingConfig::set_score_fetch_name(const char* value, size_t size) {
  set_has_score_fetch_name();
  score_fetch_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:anyq.MatchingConfig.score_fetch_name)
}
::std::string* MatchingConfig::mutable_score_fetch_name() {
  set_has_score_fetch_name();
  // @@protoc_insertion_point(field_mutable:anyq.MatchingConfig.score_fetch_name)
  return score_fetch_name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* MatchingConfig::release_score_fetch_name() {
  // @@protoc_insertion_point(field_release:anyq.MatchingConfig.score_fetch_name)
  clear_has_score_fetch_name();
  return score_fetch_name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void MatchingConfig::set_allocated_score_fetch_name(::std::string* score_fetch_name) {
  if (score_fetch_name != NULL) {
    set_has_score_fetch_name();
  } else {
    clear_has_score_fetch_name();
  }
  score_fetch_name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), score_fetch_name);
  // @@protoc_insertion_point(field_set_allocated:anyq.MatchingConfig.score_fetch_name)
}

inline const MatchingConfig* MatchingConfig::internal_default_instance() {
  return &MatchingConfig_default_instance_.get();
}
#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int RankConfig::kNameFieldNumber;
const int RankConfig::kRoughTopResultFieldNumber;
const int RankConfig::kTopResultFieldNumber;
const int RankConfig::kMatchingConfigFieldNumber;
const int RankConfig::kRoughRankPredictorFieldNumber;
const int RankConfig::kRankPredictorFieldNumber;
const int RankConfig::kRoughThresholdFieldNumber;
const int RankConfig::kThresholdFieldNumber;
const int RankConfig::kDeepRankWithAnswerFieldNumber;
const int RankConfig::kMaxAnsNumPerQueryFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

RankConfig::RankConfig()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (this != internal_default_instance()) protobuf_InitDefaults_anyq_2eproto();
  SharedCtor();
  // @@protoc_insertion_point(constructor:anyq.RankConfig)
}

void RankConfig::InitAsDefaultInstance() {
  rough_rank_predictor_ = const_cast< ::anyq::RankPredict*>(
      ::anyq::RankPredict::internal_default_instance());
  rank_predictor_ = const_cast< ::anyq::RankPredict*>(
      ::anyq::RankPredict::internal_default_instance());
}

RankConfig::RankConfig(const RankConfig& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  UnsafeMergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:anyq.RankConfig)
}

void RankConfig::SharedCtor() {
  _cached_size_ = 0;
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  rough_rank_predictor_ = NULL;
  rank_predictor_ = NULL;
  ::memset(&rough_top_result_, 0, reinterpret_cast<char*>(&max_ans_num_per_query_) -
    reinterpret_cast<char*>(&rough_top_result_) + sizeof(max_ans_num_per_query_));
}

RankConfig::~RankConfig() {
  // @@protoc_insertion_point(destructor:anyq.RankConfig)
  SharedDtor();
}

void RankConfig::SharedDtor() {
  name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != &RankConfig_default_instance_.get()) {
    delete rough_rank_predictor_;
    delete rank_predictor_;
  }
}

void RankConfig::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* RankConfig::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return RankConfig_descriptor_;
}

const RankConfig& RankConfig::default_instance() {
  protobuf_InitDefaults_anyq_2eproto();
  return *internal_default_instance();
}

::google::protobuf::internal::ExplicitlyConstructed<RankConfig> RankConfig_default_instance_;

RankConfig* RankConfig::New(::google::protobuf::Arena* arena) const {
  RankConfig* n = new RankConfig;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void RankConfig::Clear() {
// @@protoc_insertion_point(message_clear_start:anyq.RankConfig)
#if defined(__clang__)
#define ZR_HELPER_(f) \
  _Pragma("clang diagnostic push") \
  _Pragma("clang diagnostic ignored \"-Winvalid-offsetof\"") \
  __builtin_offsetof(RankConfig, f) \
  _Pragma("clang diagnostic pop")
#else
#define ZR_HELPER_(f) reinterpret_cast<char*>(\
  &reinterpret_cast<RankConfig*>(16)->f)
#endif

#define ZR_(first, last) do {\
  ::memset(&(first), 0,\
           ZR_HELPER_(last) - ZR_HELPER_(first) + sizeof(last));\
} while (0)

  if (_has_bits_[0 / 32] & 247u) {
    ZR_(rough_top_result_, threshold_);
    if (has_name()) {
      name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
    if (has_rough_rank_predictor()) {
      if (rough_rank_predictor_ != NULL) rough_rank_predictor_->::anyq::RankPredict::Clear();
    }
    if (has_rank_predictor()) {
      if (rank_predictor_ != NULL) rank_predictor_->::anyq::RankPredict::Clear();
    }
  }
  ZR_(deep_rank_with_answer_, max_ans_num_per_query_);

#undef ZR_HELPER_
#undef ZR_

  matching_config_.Clear();
  _has_bits_.Clear();
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool RankConfig::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:anyq.RankConfig)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string name = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->name().data(), this->name().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "anyq.RankConfig.name");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_rough_top_result;
        break;
      }

      // optional int32 rough_top_result = 2;
      case 2: {
        if (tag == 16) {
         parse_rough_top_result:
          set_has_rough_top_result();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &rough_top_result_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_top_result;
        break;
      }

      // optional int32 top_result = 3;
      case 3: {
        if (tag == 24) {
         parse_top_result:
          set_has_top_result();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &top_result_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(34)) goto parse_matching_config;
        break;
      }

      // repeated .anyq.MatchingConfig matching_config = 4;
      case 4: {
        if (tag == 34) {
         parse_matching_config:
          DO_(input->IncrementRecursionDepth());
         parse_loop_matching_config:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtualNoRecursionDepth(
                input, add_matching_config()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(34)) goto parse_loop_matching_config;
        input->UnsafeDecrementRecursionDepth();
        if (input->ExpectTag(42)) goto parse_rough_rank_predictor;
        break;
      }

      // optional .anyq.RankPredict rough_rank_predictor = 5;
      case 5: {
        if (tag == 42) {
         parse_rough_rank_predictor:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_rough_rank_predictor()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(50)) goto parse_rank_predictor;
        break;
      }

      // optional .anyq.RankPredict rank_predictor = 6;
      case 6: {
        if (tag == 50) {
         parse_rank_predictor:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_rank_predictor()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(61)) goto parse_rough_threshold;
        break;
      }

      // optional float rough_threshold = 7;
      case 7: {
        if (tag == 61) {
         parse_rough_threshold:
          set_has_rough_threshold();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &rough_threshold_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(69)) goto parse_threshold;
        break;
      }

      // optional float threshold = 8;
      case 8: {
        if (tag == 69) {
         parse_threshold:
          set_has_threshold();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &threshold_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(72)) goto parse_deep_rank_with_answer;
        break;
      }

      // optional bool deep_rank_with_answer = 9;
      case 9: {
        if (tag == 72) {
         parse_deep_rank_with_answer:
          set_has_deep_rank_with_answer();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &deep_rank_with_answer_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(80)) goto parse_max_ans_num_per_query;
        break;
      }

      // optional int32 max_ans_num_per_query = 10;
      case 10: {
        if (tag == 80) {
         parse_max_ans_num_per_query:
          set_has_max_ans_num_per_query();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &max_ans_num_per_query_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:anyq.RankConfig)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:anyq.RankConfig)
  return false;
#undef DO_
}

void RankConfig::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:anyq.RankConfig)
  // optional string name = 1;
  if (has_name()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->name().data(), this->name().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "anyq.RankConfig.name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->name(), output);
  }

  // optional int32 rough_top_result = 2;
  if (has_rough_top_result()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->rough_top_result(), output);
  }

  // optional int32 top_result = 3;
  if (has_top_result()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->top_result(), output);
  }

  // repeated .anyq.MatchingConfig matching_config = 4;
  for (unsigned int i = 0, n = this->matching_config_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, this->matching_config(i), output);
  }

  // optional .anyq.RankPredict rough_rank_predictor = 5;
  if (has_rough_rank_predictor()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      5, *this->rough_rank_predictor_, output);
  }

  // optional .anyq.RankPredict rank_predictor = 6;
  if (has_rank_predictor()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      6, *this->rank_predictor_, output);
  }

  // optional float rough_threshold = 7;
  if (has_rough_threshold()) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(7, this->rough_threshold(), output);
  }

  // optional float threshold = 8;
  if (has_threshold()) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(8, this->threshold(), output);
  }

  // optional bool deep_rank_with_answer = 9;
  if (has_deep_rank_with_answer()) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(9, this->deep_rank_with_answer(), output);
  }

  // optional int32 max_ans_num_per_query = 10;
  if (has_max_ans_num_per_query()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(10, this->max_ans_num_per_query(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:anyq.RankConfig)
}

::google::protobuf::uint8* RankConfig::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:anyq.RankConfig)
  // optional string name = 1;
  if (has_name()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->name().data(), this->name().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "anyq.RankConfig.name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->name(), target);
  }

  // optional int32 rough_top_result = 2;
  if (has_rough_top_result()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->rough_top_result(), target);
  }

  // optional int32 top_result = 3;
  if (has_top_result()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->top_result(), target);
  }

  // repeated .anyq.MatchingConfig matching_config = 4;
  for (unsigned int i = 0, n = this->matching_config_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        4, this->matching_config(i), false, target);
  }

  // optional .anyq.RankPredict rough_rank_predictor = 5;
  if (has_rough_rank_predictor()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        5, *this->rough_rank_predictor_, false, target);
  }

  // optional .anyq.RankPredict rank_predictor = 6;
  if (has_rank_predictor()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        6, *this->rank_predictor_, false, target);
  }

  // optional float rough_threshold = 7;
  if (has_rough_threshold()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(7, this->rough_threshold(), target);
  }

  // optional float threshold = 8;
  if (has_threshold()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(8, this->threshold(), target);
  }

  // optional bool deep_rank_with_answer = 9;
  if (has_deep_rank_with_answer()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(9, this->deep_rank_with_answer(), target);
  }

  // optional int32 max_ans_num_per_query = 10;
  if (has_max_ans_num_per_query()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(10, this->max_ans_num_per_query(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:anyq.RankConfig)
  return target;
}

size_t RankConfig::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:anyq.RankConfig)
  size_t total_size = 0;

  if (_has_bits_[0 / 32] & 247u) {
    // optional string name = 1;
    if (has_name()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->name());
    }

    // optional int32 rough_top_result = 2;
    if (has_rough_top_result()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->rough_top_result());
    }

    // optional int32 top_result = 3;
    if (has_top_result()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->top_result());
    }

    // optional .anyq.RankPredict rough_rank_predictor = 5;
    if (has_rough_rank_predictor()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *this->rough_rank_predictor_);
    }

    // optional .anyq.RankPredict rank_predictor = 6;
    if (has_rank_predictor()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *this->rank_predictor_);
    }

    // optional float rough_threshold = 7;
    if (has_rough_threshold()) {
      total_size += 1 + 4;
    }

    // optional float threshold = 8;
    if (has_threshold()) {
      total_size += 1 + 4;
    }

  }
  if (_has_bits_[8 / 32] & 768u) {
    // optional bool deep_rank_with_answer = 9;
    if (has_deep_rank_with_answer()) {
      total_size += 1 + 1;
    }

    // optional int32 max_ans_num_per_query = 10;
    if (has_max_ans_num_per_query()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->max_ans_num_per_query());
    }

  }
  // repeated .anyq.MatchingConfig matching_config = 4;
  {
    unsigned int count = this->matching_config_size();
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->matching_config(i));
    }
  }

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void RankConfig::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:anyq.RankConfig)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const RankConfig* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const RankConfig>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:anyq.RankConfig)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:anyq.RankConfig)
    UnsafeMergeFrom(*source);
  }
}

void RankConfig::MergeFrom(const RankConfig& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:anyq.RankConfig)
  if (GOOGLE_PREDICT_TRUE(&from != this)) {
    UnsafeMergeFrom(from);
  } else {
    MergeFromFail(__LINE__);
  }
}

void RankConfig::UnsafeMergeFrom(const RankConfig& from) {
  GOOGLE_DCHECK(&from != this);
  matching_config_.MergeFrom(from.matching_config_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_name()) {
      set_has_name();
      name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
    }
    if (from.has_rough_top_result()) {
      set_rough_top_result(from.rough_top_result());
    }
    if (from.has_top_result()) {
      set_top_result(from.top_result());
    }
    if (from.has_rough_rank_predictor()) {
      mutable_rough_rank_predictor()->::anyq::RankPredict::MergeFrom(from.rough_rank_predictor());
    }
    if (from.has_rank_predictor()) {
      mutable_rank_predictor()->::anyq::RankPredict::MergeFrom(from.rank_predictor());
    }
    if (from.has_rough_threshold()) {
      set_rough_threshold(from.rough_threshold());
    }
    if (from.has_threshold()) {
      set_threshold(from.threshold());
    }
  }
  if (from._has_bits_[8 / 32] & (0xffu << (8 % 32))) {
    if (from.has_deep_rank_with_answer()) {
      set_deep_rank_with_answer(from.deep_rank_with_answer());
    }
    if (from.has_max_ans_num_per_query()) {
      set_max_ans_num_per_query(from.max_ans_num_per_query());
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::UnknownFieldSet::MergeToInternalMetdata(
      from.unknown_fields(), &_internal_metadata_);
  }
}

void RankConfig::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:anyq.RankConfig)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void RankConfig::CopyFrom(const RankConfig& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:anyq.RankConfig)
  if (&from == this) return;
  Clear();
  UnsafeMergeFrom(from);
}

bool RankConfig::IsInitialized() const {

  if (!::google::protobuf::internal::AllAreInitialized(this->matching_config())) return false;
  if (has_rough_rank_predictor()) {
    if (!this->rough_rank_predictor_->IsInitialized()) return false;
  }
  if (has_rank_predictor()) {
    if (!this->rank_predictor_->IsInitialized()) return false;
  }
  return true;
}

void RankConfig::Swap(RankConfig* other) {
  if (other == this) return;
  InternalSwap(other);
}
void RankConfig::InternalSwap(RankConfig* other) {
  name_.Swap(&other->name_);
  std::swap(rough_top_result_, other->rough_top_result_);
  std::swap(top_result_, other->top_result_);
  matching_config_.UnsafeArenaSwap(&other->matching_config_);
  std::swap(rough_rank_predictor_, other->rough_rank_predictor_);
  std::swap(rank_predictor_, other->rank_predictor_);
  std::swap(rough_threshold_, other->rough_threshold_);
  std::swap(threshold_, other->threshold_);
  std::swap(deep_rank_with_answer_, other->deep_rank_with_answer_);
  std::swap(max_ans_num_per_query_, other->max_ans_num_per_query_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata RankConfig::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = RankConfig_descriptor_;
  metadata.reflection = RankConfig_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// RankConfig

// optional string name = 1;
bool RankConfig::has_name() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void RankConfig::set_has_name() {
  _has_bits_[0] |= 0x00000001u;
}
void RankConfig::clear_has_name() {
  _has_bits_[0] &= ~0x00000001u;
}
void RankConfig::clear_name() {
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_name();
}
const ::std::string& RankConfig::name() const {
  // @@protoc_insertion_point(field_get:anyq.RankConfig.name)
  return name_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void RankConfig::set_name(const ::std::string& value) {
  set_has_name();
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:anyq.RankConfig.name)
}
void RankConfig::set_name(const char* value) {
  set_has_name();
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:anyq.RankConfig.name)
}
void RankConfig::set_name(const char* value, size_t size) {
  set_has_name();
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:anyq.RankConfig.name)
}
::std::string* RankConfig::mutable_name() {
  set_has_name();
  // @@protoc_insertion_point(field_mutable:anyq.RankConfig.name)
  return name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* RankConfig::release_name() {
  // @@protoc_insertion_point(field_release:anyq.RankConfig.name)
  clear_has_name();
  return name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void RankConfig::set_allocated_name(::std::string* name) {
  if (name != NULL) {
    set_has_name();
  } else {
    clear_has_name();
  }
  name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), name);
  // @@protoc_insertion_point(field_set_allocated:anyq.RankConfig.name)
}

// optional int32 rough_top_result = 2;
bool RankConfig::has_rough_top_result() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void RankConfig::set_has_rough_top_result() {
  _has_bits_[0] |= 0x00000002u;
}
void RankConfig::clear_has_rough_top_result() {
  _has_bits_[0] &= ~0x00000002u;
}
void RankConfig::clear_rough_top_result() {
  rough_top_result_ = 0;
  clear_has_rough_top_result();
}
::google::protobuf::int32 RankConfig::rough_top_result() const {
  // @@protoc_insertion_point(field_get:anyq.RankConfig.rough_top_result)
  return rough_top_result_;
}
void RankConfig::set_rough_top_result(::google::protobuf::int32 value) {
  set_has_rough_top_result();
  rough_top_result_ = value;
  // @@protoc_insertion_point(field_set:anyq.RankConfig.rough_top_result)
}

// optional int32 top_result = 3;
bool RankConfig::has_top_result() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
void RankConfig::set_has_top_result() {
  _has_bits_[0] |= 0x00000004u;
}
void RankConfig::clear_has_top_result() {
  _has_bits_[0] &= ~0x00000004u;
}
void RankConfig::clear_top_result() {
  top_result_ = 0;
  clear_has_top_result();
}
::google::protobuf::int32 RankConfig::top_result() const {
  // @@protoc_insertion_point(field_get:anyq.RankConfig.top_result)
  return top_result_;
}
void RankConfig::set_top_result(::google::protobuf::int32 value) {
  set_has_top_result();
  top_result_ = value;
  // @@protoc_insertion_point(field_set:anyq.RankConfig.top_result)
}

// repeated .anyq.MatchingConfig matching_config = 4;
int RankConfig::matching_config_size() const {
  return matching_config_.size();
}
void RankConfig::clear_matching_config() {
  matching_config_.Clear();
}
const ::anyq::MatchingConfig& RankConfig::matching_config(int index) const {
  // @@protoc_insertion_point(field_get:anyq.RankConfig.matching_config)
  return matching_config_.Get(index);
}
::anyq::MatchingConfig* RankConfig::mutable_matching_config(int index) {
  // @@protoc_insertion_point(field_mutable:anyq.RankConfig.matching_config)
  return matching_config_.Mutable(index);
}
::anyq::MatchingConfig* RankConfig::add_matching_config() {
  // @@protoc_insertion_point(field_add:anyq.RankConfig.matching_config)
  return matching_config_.Add();
}
::google::protobuf::RepeatedPtrField< ::anyq::MatchingConfig >*
RankConfig::mutable_matching_config() {
  // @@protoc_insertion_point(field_mutable_list:anyq.RankConfig.matching_config)
  return &matching_config_;
}
const ::google::protobuf::RepeatedPtrField< ::anyq::MatchingConfig >&
RankConfig::matching_config() const {
  // @@protoc_insertion_point(field_list:anyq.RankConfig.matching_config)
  return matching_config_;
}

// optional .anyq.RankPredict rough_rank_predictor = 5;
bool RankConfig::has_rough_rank_predictor() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
void RankConfig::set_has_rough_rank_predictor() {
  _has_bits_[0] |= 0x00000010u;
}
void RankConfig::clear_has_rough_rank_predictor() {
  _has_bits_[0] &= ~0x00000010u;
}
void RankConfig::clear_rough_rank_predictor() {
  if (rough_rank_predictor_ != NULL) rough_rank_predictor_->::anyq::RankPredict::Clear();
  clear_has_rough_rank_predictor();
}
const ::anyq::RankPredict& RankConfig::rough_rank_predictor() const {
  // @@protoc_insertion_point(field_get:anyq.RankConfig.rough_rank_predictor)
  return rough_rank_predictor_ != NULL ? *rough_rank_predictor_
                         : *::anyq::RankPredict::internal_default_instance();
}
::anyq::RankPredict* RankConfig::mutable_rough_rank_predictor() {
  set_has_rough_rank_predictor();
  if (rough_rank_predictor_ == NULL) {
    rough_rank_predictor_ = new ::anyq::RankPredict;
  }
  // @@protoc_insertion_point(field_mutable:anyq.RankConfig.rough_rank_predictor)
  return rough_rank_predictor_;
}
::anyq::RankPredict* RankConfig::release_rough_rank_predictor() {
  // @@protoc_insertion_point(field_release:anyq.RankConfig.rough_rank_predictor)
  clear_has_rough_rank_predictor();
  ::anyq::RankPredict* temp = rough_rank_predictor_;
  rough_rank_predictor_ = NULL;
  return temp;
}
void RankConfig::set_allocated_rough_rank_predictor(::anyq::RankPredict* rough_rank_predictor) {
  delete rough_rank_predictor_;
  rough_rank_predictor_ = rough_rank_predictor;
  if (rough_rank_predictor) {
    set_has_rough_rank_predictor();
  } else {
    clear_has_rough_rank_predictor();
  }
  // @@protoc_insertion_point(field_set_allocated:anyq.RankConfig.rough_rank_predictor)
}

// optional .anyq.RankPredict rank_predictor = 6;
bool RankConfig::has_rank_predictor() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
void RankConfig::set_has_rank_predictor() {
  _has_bits_[0] |= 0x00000020u;
}
void RankConfig::clear_has_rank_predictor() {
  _has_bits_[0] &= ~0x00000020u;
}
void RankConfig::clear_rank_predictor() {
  if (rank_predictor_ != NULL) rank_predictor_->::anyq::RankPredict::Clear();
  clear_has_rank_predictor();
}
const ::anyq::RankPredict& RankConfig::rank_predictor() const {
  // @@protoc_insertion_point(field_get:anyq.RankConfig.rank_predictor)
  return rank_predictor_ != NULL ? *rank_predictor_
                         : *::anyq::RankPredict::internal_default_instance();
}
::anyq::RankPredict* RankConfig::mutable_rank_predictor() {
  set_has_rank_predictor();
  if (rank_predictor_ == NULL) {
    rank_predictor_ = new ::anyq::RankPredict;
  }
  // @@protoc_insertion_point(field_mutable:anyq.RankConfig.rank_predictor)
  return rank_predictor_;
}
::anyq::RankPredict* RankConfig::release_rank_predictor() {
  // @@protoc_insertion_point(field_release:anyq.RankConfig.rank_predictor)
  clear_has_rank_predictor();
  ::anyq::RankPredict* temp = rank_predictor_;
  rank_predictor_ = NULL;
  return temp;
}
void RankConfig::set_allocated_rank_predictor(::anyq::RankPredict* rank_predictor) {
  delete rank_predictor_;
  rank_predictor_ = rank_predictor;
  if (rank_predictor) {
    set_has_rank_predictor();
  } else {
    clear_has_rank_predictor();
  }
  // @@protoc_insertion_point(field_set_allocated:anyq.RankConfig.rank_predictor)
}

// optional float rough_threshold = 7;
bool RankConfig::has_rough_threshold() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
void RankConfig::set_has_rough_threshold() {
  _has_bits_[0] |= 0x00000040u;
}
void RankConfig::clear_has_rough_threshold() {
  _has_bits_[0] &= ~0x00000040u;
}
void RankConfig::clear_rough_threshold() {
  rough_threshold_ = 0;
  clear_has_rough_threshold();
}
float RankConfig::rough_threshold() const {
  // @@protoc_insertion_point(field_get:anyq.RankConfig.rough_threshold)
  return rough_threshold_;
}
void RankConfig::set_rough_threshold(float value) {
  set_has_rough_threshold();
  rough_threshold_ = value;
  // @@protoc_insertion_point(field_set:anyq.RankConfig.rough_threshold)
}

// optional float threshold = 8;
bool RankConfig::has_threshold() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
void RankConfig::set_has_threshold() {
  _has_bits_[0] |= 0x00000080u;
}
void RankConfig::clear_has_threshold() {
  _has_bits_[0] &= ~0x00000080u;
}
void RankConfig::clear_threshold() {
  threshold_ = 0;
  clear_has_threshold();
}
float RankConfig::threshold() const {
  // @@protoc_insertion_point(field_get:anyq.RankConfig.threshold)
  return threshold_;
}
void RankConfig::set_threshold(float value) {
  set_has_threshold();
  threshold_ = value;
  // @@protoc_insertion_point(field_set:anyq.RankConfig.threshold)
}

// optional bool deep_rank_with_answer = 9;
bool RankConfig::has_deep_rank_with_answer() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
void RankConfig::set_has_deep_rank_with_answer() {
  _has_bits_[0] |= 0x00000100u;
}
void RankConfig::clear_has_deep_rank_with_answer() {
  _has_bits_[0] &= ~0x00000100u;
}
void RankConfig::clear_deep_rank_with_answer() {
  deep_rank_with_answer_ = false;
  clear_has_deep_rank_with_answer();
}
bool RankConfig::deep_rank_with_answer() const {
  // @@protoc_insertion_point(field_get:anyq.RankConfig.deep_rank_with_answer)
  return deep_rank_with_answer_;
}
void RankConfig::set_deep_rank_with_answer(bool value) {
  set_has_deep_rank_with_answer();
  deep_rank_with_answer_ = value;
  // @@protoc_insertion_point(field_set:anyq.RankConfig.deep_rank_with_answer)
}

// optional int32 max_ans_num_per_query = 10;
bool RankConfig::has_max_ans_num_per_query() const {
  return (_has_bits_[0] & 0x00000200u) != 0;
}
void RankConfig::set_has_max_ans_num_per_query() {
  _has_bits_[0] |= 0x00000200u;
}
void RankConfig::clear_has_max_ans_num_per_query() {
  _has_bits_[0] &= ~0x00000200u;
}
void RankConfig::clear_max_ans_num_per_query() {
  max_ans_num_per_query_ = 0;
  clear_has_max_ans_num_per_query();
}
::google::protobuf::int32 RankConfig::max_ans_num_per_query() const {
  // @@protoc_insertion_point(field_get:anyq.RankConfig.max_ans_num_per_query)
  return max_ans_num_per_query_;
}
void RankConfig::set_max_ans_num_per_query(::google::protobuf::int32 value) {
  set_has_max_ans_num_per_query();
  max_ans_num_per_query_ = value;
  // @@protoc_insertion_point(field_set:anyq.RankConfig.max_ans_num_per_query)
}

inline const RankConfig* RankConfig::internal_default_instance() {
  return &RankConfig_default_instance_.get();
}
#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int AnyqStrategyConfig::kAnalysisConfigFieldNumber;
const int AnyqStrategyConfig::kRetrievalConfigFieldNumber;
const int AnyqStrategyConfig::kRankConfigFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

AnyqStrategyConfig::AnyqStrategyConfig()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (this != internal_default_instance()) protobuf_InitDefaults_anyq_2eproto();
  SharedCtor();
  // @@protoc_insertion_point(constructor:anyq.AnyqStrategyConfig)
}

void AnyqStrategyConfig::InitAsDefaultInstance() {
}

AnyqStrategyConfig::AnyqStrategyConfig(const AnyqStrategyConfig& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  UnsafeMergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:anyq.AnyqStrategyConfig)
}

void AnyqStrategyConfig::SharedCtor() {
  _cached_size_ = 0;
  analysis_config_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  retrieval_config_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  rank_config_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

AnyqStrategyConfig::~AnyqStrategyConfig() {
  // @@protoc_insertion_point(destructor:anyq.AnyqStrategyConfig)
  SharedDtor();
}

void AnyqStrategyConfig::SharedDtor() {
  analysis_config_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  retrieval_config_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  rank_config_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void AnyqStrategyConfig::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* AnyqStrategyConfig::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return AnyqStrategyConfig_descriptor_;
}

const AnyqStrategyConfig& AnyqStrategyConfig::default_instance() {
  protobuf_InitDefaults_anyq_2eproto();
  return *internal_default_instance();
}

::google::protobuf::internal::ExplicitlyConstructed<AnyqStrategyConfig> AnyqStrategyConfig_default_instance_;

AnyqStrategyConfig* AnyqStrategyConfig::New(::google::protobuf::Arena* arena) const {
  AnyqStrategyConfig* n = new AnyqStrategyConfig;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void AnyqStrategyConfig::Clear() {
// @@protoc_insertion_point(message_clear_start:anyq.AnyqStrategyConfig)
  if (_has_bits_[0 / 32] & 7u) {
    if (has_analysis_config()) {
      analysis_config_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
    if (has_retrieval_config()) {
      retrieval_config_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
    if (has_rank_config()) {
      rank_config_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
  }
  _has_bits_.Clear();
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool AnyqStrategyConfig::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:anyq.AnyqStrategyConfig)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string analysis_config = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_analysis_config()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->analysis_config().data(), this->analysis_config().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "anyq.AnyqStrategyConfig.analysis_config");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_retrieval_config;
        break;
      }

      // optional string retrieval_config = 2;
      case 2: {
        if (tag == 18) {
         parse_retrieval_config:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_retrieval_config()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->retrieval_config().data(), this->retrieval_config().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "anyq.AnyqStrategyConfig.retrieval_config");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_rank_config;
        break;
      }

      // optional string rank_config = 3;
      case 3: {
        if (tag == 26) {
         parse_rank_config:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_rank_config()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->rank_config().data(), this->rank_config().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "anyq.AnyqStrategyConfig.rank_config");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:anyq.AnyqStrategyConfig)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:anyq.AnyqStrategyConfig)
  return false;
#undef DO_
}

void AnyqStrategyConfig::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:anyq.AnyqStrategyConfig)
  // optional string analysis_config = 1;
  if (has_analysis_config()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->analysis_config().data(), this->analysis_config().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "anyq.AnyqStrategyConfig.analysis_config");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->analysis_config(), output);
  }

  // optional string retrieval_config = 2;
  if (has_retrieval_config()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->retrieval_config().data(), this->retrieval_config().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "anyq.AnyqStrategyConfig.retrieval_config");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->retrieval_config(), output);
  }

  // optional string rank_config = 3;
  if (has_rank_config()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->rank_config().data(), this->rank_config().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "anyq.AnyqStrategyConfig.rank_config");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->rank_config(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:anyq.AnyqStrategyConfig)
}

::google::protobuf::uint8* AnyqStrategyConfig::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:anyq.AnyqStrategyConfig)
  // optional string analysis_config = 1;
  if (has_analysis_config()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->analysis_config().data(), this->analysis_config().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "anyq.AnyqStrategyConfig.analysis_config");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->analysis_config(), target);
  }

  // optional string retrieval_config = 2;
  if (has_retrieval_config()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->retrieval_config().data(), this->retrieval_config().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "anyq.AnyqStrategyConfig.retrieval_config");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->retrieval_config(), target);
  }

  // optional string rank_config = 3;
  if (has_rank_config()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->rank_config().data(), this->rank_config().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "anyq.AnyqStrategyConfig.rank_config");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->rank_config(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:anyq.AnyqStrategyConfig)
  return target;
}

size_t AnyqStrategyConfig::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:anyq.AnyqStrategyConfig)
  size_t total_size = 0;

  if (_has_bits_[0 / 32] & 7u) {
    // optional string analysis_config = 1;
    if (has_analysis_config()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->analysis_config());
    }

    // optional string retrieval_config = 2;
    if (has_retrieval_config()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->retrieval_config());
    }

    // optional string rank_config = 3;
    if (has_rank_config()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->rank_config());
    }

  }
  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void AnyqStrategyConfig::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:anyq.AnyqStrategyConfig)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const AnyqStrategyConfig* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const AnyqStrategyConfig>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:anyq.AnyqStrategyConfig)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:anyq.AnyqStrategyConfig)
    UnsafeMergeFrom(*source);
  }
}

void AnyqStrategyConfig::MergeFrom(const AnyqStrategyConfig& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:anyq.AnyqStrategyConfig)
  if (GOOGLE_PREDICT_TRUE(&from != this)) {
    UnsafeMergeFrom(from);
  } else {
    MergeFromFail(__LINE__);
  }
}

void AnyqStrategyConfig::UnsafeMergeFrom(const AnyqStrategyConfig& from) {
  GOOGLE_DCHECK(&from != this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_analysis_config()) {
      set_has_analysis_config();
      analysis_config_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.analysis_config_);
    }
    if (from.has_retrieval_config()) {
      set_has_retrieval_config();
      retrieval_config_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.retrieval_config_);
    }
    if (from.has_rank_config()) {
      set_has_rank_config();
      rank_config_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.rank_config_);
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::UnknownFieldSet::MergeToInternalMetdata(
      from.unknown_fields(), &_internal_metadata_);
  }
}

void AnyqStrategyConfig::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:anyq.AnyqStrategyConfig)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void AnyqStrategyConfig::CopyFrom(const AnyqStrategyConfig& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:anyq.AnyqStrategyConfig)
  if (&from == this) return;
  Clear();
  UnsafeMergeFrom(from);
}

bool AnyqStrategyConfig::IsInitialized() const {

  return true;
}

void AnyqStrategyConfig::Swap(AnyqStrategyConfig* other) {
  if (other == this) return;
  InternalSwap(other);
}
void AnyqStrategyConfig::InternalSwap(AnyqStrategyConfig* other) {
  analysis_config_.Swap(&other->analysis_config_);
  retrieval_config_.Swap(&other->retrieval_config_);
  rank_config_.Swap(&other->rank_config_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata AnyqStrategyConfig::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = AnyqStrategyConfig_descriptor_;
  metadata.reflection = AnyqStrategyConfig_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// AnyqStrategyConfig

// optional string analysis_config = 1;
bool AnyqStrategyConfig::has_analysis_config() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void AnyqStrategyConfig::set_has_analysis_config() {
  _has_bits_[0] |= 0x00000001u;
}
void AnyqStrategyConfig::clear_has_analysis_config() {
  _has_bits_[0] &= ~0x00000001u;
}
void AnyqStrategyConfig::clear_analysis_config() {
  analysis_config_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_analysis_config();
}
const ::std::string& AnyqStrategyConfig::analysis_config() const {
  // @@protoc_insertion_point(field_get:anyq.AnyqStrategyConfig.analysis_config)
  return analysis_config_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void AnyqStrategyConfig::set_analysis_config(const ::std::string& value) {
  set_has_analysis_config();
  analysis_config_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:anyq.AnyqStrategyConfig.analysis_config)
}
void AnyqStrategyConfig::set_analysis_config(const char* value) {
  set_has_analysis_config();
  analysis_config_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:anyq.AnyqStrategyConfig.analysis_config)
}
void AnyqStrategyConfig::set_analysis_config(const char* value, size_t size) {
  set_has_analysis_config();
  analysis_config_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:anyq.AnyqStrategyConfig.analysis_config)
}
::std::string* AnyqStrategyConfig::mutable_analysis_config() {
  set_has_analysis_config();
  // @@protoc_insertion_point(field_mutable:anyq.AnyqStrategyConfig.analysis_config)
  return analysis_config_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* AnyqStrategyConfig::release_analysis_config() {
  // @@protoc_insertion_point(field_release:anyq.AnyqStrategyConfig.analysis_config)
  clear_has_analysis_config();
  return analysis_config_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void AnyqStrategyConfig::set_allocated_analysis_config(::std::string* analysis_config) {
  if (analysis_config != NULL) {
    set_has_analysis_config();
  } else {
    clear_has_analysis_config();
  }
  analysis_config_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), analysis_config);
  // @@protoc_insertion_point(field_set_allocated:anyq.AnyqStrategyConfig.analysis_config)
}

// optional string retrieval_config = 2;
bool AnyqStrategyConfig::has_retrieval_config() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void AnyqStrategyConfig::set_has_retrieval_config() {
  _has_bits_[0] |= 0x00000002u;
}
void AnyqStrategyConfig::clear_has_retrieval_config() {
  _has_bits_[0] &= ~0x00000002u;
}
void AnyqStrategyConfig::clear_retrieval_config() {
  retrieval_config_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_retrieval_config();
}
const ::std::string& AnyqStrategyConfig::retrieval_config() const {
  // @@protoc_insertion_point(field_get:anyq.AnyqStrategyConfig.retrieval_config)
  return retrieval_config_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void AnyqStrategyConfig::set_retrieval_config(const ::std::string& value) {
  set_has_retrieval_config();
  retrieval_config_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:anyq.AnyqStrategyConfig.retrieval_config)
}
void AnyqStrategyConfig::set_retrieval_config(const char* value) {
  set_has_retrieval_config();
  retrieval_config_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:anyq.AnyqStrategyConfig.retrieval_config)
}
void AnyqStrategyConfig::set_retrieval_config(const char* value, size_t size) {
  set_has_retrieval_config();
  retrieval_config_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:anyq.AnyqStrategyConfig.retrieval_config)
}
::std::string* AnyqStrategyConfig::mutable_retrieval_config() {
  set_has_retrieval_config();
  // @@protoc_insertion_point(field_mutable:anyq.AnyqStrategyConfig.retrieval_config)
  return retrieval_config_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* AnyqStrategyConfig::release_retrieval_config() {
  // @@protoc_insertion_point(field_release:anyq.AnyqStrategyConfig.retrieval_config)
  clear_has_retrieval_config();
  return retrieval_config_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void AnyqStrategyConfig::set_allocated_retrieval_config(::std::string* retrieval_config) {
  if (retrieval_config != NULL) {
    set_has_retrieval_config();
  } else {
    clear_has_retrieval_config();
  }
  retrieval_config_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), retrieval_config);
  // @@protoc_insertion_point(field_set_allocated:anyq.AnyqStrategyConfig.retrieval_config)
}

// optional string rank_config = 3;
bool AnyqStrategyConfig::has_rank_config() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
void AnyqStrategyConfig::set_has_rank_config() {
  _has_bits_[0] |= 0x00000004u;
}
void AnyqStrategyConfig::clear_has_rank_config() {
  _has_bits_[0] &= ~0x00000004u;
}
void AnyqStrategyConfig::clear_rank_config() {
  rank_config_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_rank_config();
}
const ::std::string& AnyqStrategyConfig::rank_config() const {
  // @@protoc_insertion_point(field_get:anyq.AnyqStrategyConfig.rank_config)
  return rank_config_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void AnyqStrategyConfig::set_rank_config(const ::std::string& value) {
  set_has_rank_config();
  rank_config_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:anyq.AnyqStrategyConfig.rank_config)
}
void AnyqStrategyConfig::set_rank_config(const char* value) {
  set_has_rank_config();
  rank_config_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:anyq.AnyqStrategyConfig.rank_config)
}
void AnyqStrategyConfig::set_rank_config(const char* value, size_t size) {
  set_has_rank_config();
  rank_config_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:anyq.AnyqStrategyConfig.rank_config)
}
::std::string* AnyqStrategyConfig::mutable_rank_config() {
  set_has_rank_config();
  // @@protoc_insertion_point(field_mutable:anyq.AnyqStrategyConfig.rank_config)
  return rank_config_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* AnyqStrategyConfig::release_rank_config() {
  // @@protoc_insertion_point(field_release:anyq.AnyqStrategyConfig.rank_config)
  clear_has_rank_config();
  return rank_config_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void AnyqStrategyConfig::set_allocated_rank_config(::std::string* rank_config) {
  if (rank_config != NULL) {
    set_has_rank_config();
  } else {
    clear_has_rank_config();
  }
  rank_config_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), rank_config);
  // @@protoc_insertion_point(field_set_allocated:anyq.AnyqStrategyConfig.rank_config)
}

inline const AnyqStrategyConfig* AnyqStrategyConfig::internal_default_instance() {
  return &AnyqStrategyConfig_default_instance_.get();
}
#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ReqPreprocPluginConfig::kTypeFieldNumber;
const int ReqPreprocPluginConfig::kNameFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ReqPreprocPluginConfig::ReqPreprocPluginConfig()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (this != internal_default_instance()) protobuf_InitDefaults_anyq_2eproto();
  SharedCtor();
  // @@protoc_insertion_point(constructor:anyq.ReqPreprocPluginConfig)
}

void ReqPreprocPluginConfig::InitAsDefaultInstance() {
}

ReqPreprocPluginConfig::ReqPreprocPluginConfig(const ReqPreprocPluginConfig& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  UnsafeMergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:anyq.ReqPreprocPluginConfig)
}

void ReqPreprocPluginConfig::SharedCtor() {
  _cached_size_ = 0;
  type_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

ReqPreprocPluginConfig::~ReqPreprocPluginConfig() {
  // @@protoc_insertion_point(destructor:anyq.ReqPreprocPluginConfig)
  SharedDtor();
}

void ReqPreprocPluginConfig::SharedDtor() {
  type_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void ReqPreprocPluginConfig::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ReqPreprocPluginConfig::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return ReqPreprocPluginConfig_descriptor_;
}

const ReqPreprocPluginConfig& ReqPreprocPluginConfig::default_instance() {
  protobuf_InitDefaults_anyq_2eproto();
  return *internal_default_instance();
}

::google::protobuf::internal::ExplicitlyConstructed<ReqPreprocPluginConfig> ReqPreprocPluginConfig_default_instance_;

ReqPreprocPluginConfig* ReqPreprocPluginConfig::New(::google::protobuf::Arena* arena) const {
  ReqPreprocPluginConfig* n = new ReqPreprocPluginConfig;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void ReqPreprocPluginConfig::Clear() {
// @@protoc_insertion_point(message_clear_start:anyq.ReqPreprocPluginConfig)
  if (_has_bits_[0 / 32] & 3u) {
    if (has_type()) {
      type_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
    if (has_name()) {
      name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
  }
  _has_bits_.Clear();
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool ReqPreprocPluginConfig::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:anyq.ReqPreprocPluginConfig)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required string type = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_type()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->type().data(), this->type().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "anyq.ReqPreprocPluginConfig.type");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_name;
        break;
      }

      // required string name = 2;
      case 2: {
        if (tag == 18) {
         parse_name:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->name().data(), this->name().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "anyq.ReqPreprocPluginConfig.name");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:anyq.ReqPreprocPluginConfig)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:anyq.ReqPreprocPluginConfig)
  return false;
#undef DO_
}

void ReqPreprocPluginConfig::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:anyq.ReqPreprocPluginConfig)
  // required string type = 1;
  if (has_type()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->type().data(), this->type().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "anyq.ReqPreprocPluginConfig.type");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->type(), output);
  }

  // required string name = 2;
  if (has_name()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->name().data(), this->name().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "anyq.ReqPreprocPluginConfig.name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->name(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:anyq.ReqPreprocPluginConfig)
}

::google::protobuf::uint8* ReqPreprocPluginConfig::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:anyq.ReqPreprocPluginConfig)
  // required string type = 1;
  if (has_type()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->type().data(), this->type().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "anyq.ReqPreprocPluginConfig.type");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->type(), target);
  }

  // required string name = 2;
  if (has_name()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->name().data(), this->name().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "anyq.ReqPreprocPluginConfig.name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->name(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:anyq.ReqPreprocPluginConfig)
  return target;
}

size_t ReqPreprocPluginConfig::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:anyq.ReqPreprocPluginConfig)
  size_t total_size = 0;

  if (has_type()) {
    // required string type = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->type());
  }

  if (has_name()) {
    // required string name = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->name());
  }

  return total_size;
}
size_t ReqPreprocPluginConfig::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:anyq.ReqPreprocPluginConfig)
  size_t total_size = 0;

  if (((_has_bits_[0] & 0x00000003) ^ 0x00000003) == 0) {  // All required fields are present.
    // required string type = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->type());

    // required string name = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->name());

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ReqPreprocPluginConfig::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:anyq.ReqPreprocPluginConfig)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const ReqPreprocPluginConfig* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ReqPreprocPluginConfig>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:anyq.ReqPreprocPluginConfig)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:anyq.ReqPreprocPluginConfig)
    UnsafeMergeFrom(*source);
  }
}

void ReqPreprocPluginConfig::MergeFrom(const ReqPreprocPluginConfig& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:anyq.ReqPreprocPluginConfig)
  if (GOOGLE_PREDICT_TRUE(&from != this)) {
    UnsafeMergeFrom(from);
  } else {
    MergeFromFail(__LINE__);
  }
}

void ReqPreprocPluginConfig::UnsafeMergeFrom(const ReqPreprocPluginConfig& from) {
  GOOGLE_DCHECK(&from != this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_type()) {
      set_has_type();
      type_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.type_);
    }
    if (from.has_name()) {
      set_has_name();
      name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::UnknownFieldSet::MergeToInternalMetdata(
      from.unknown_fields(), &_internal_metadata_);
  }
}

void ReqPreprocPluginConfig::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:anyq.ReqPreprocPluginConfig)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ReqPreprocPluginConfig::CopyFrom(const ReqPreprocPluginConfig& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:anyq.ReqPreprocPluginConfig)
  if (&from == this) return;
  Clear();
  UnsafeMergeFrom(from);
}

bool ReqPreprocPluginConfig::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000003) != 0x00000003) return false;

  return true;
}

void ReqPreprocPluginConfig::Swap(ReqPreprocPluginConfig* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ReqPreprocPluginConfig::InternalSwap(ReqPreprocPluginConfig* other) {
  type_.Swap(&other->type_);
  name_.Swap(&other->name_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata ReqPreprocPluginConfig::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = ReqPreprocPluginConfig_descriptor_;
  metadata.reflection = ReqPreprocPluginConfig_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// ReqPreprocPluginConfig

// required string type = 1;
bool ReqPreprocPluginConfig::has_type() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void ReqPreprocPluginConfig::set_has_type() {
  _has_bits_[0] |= 0x00000001u;
}
void ReqPreprocPluginConfig::clear_has_type() {
  _has_bits_[0] &= ~0x00000001u;
}
void ReqPreprocPluginConfig::clear_type() {
  type_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_type();
}
const ::std::string& ReqPreprocPluginConfig::type() const {
  // @@protoc_insertion_point(field_get:anyq.ReqPreprocPluginConfig.type)
  return type_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void ReqPreprocPluginConfig::set_type(const ::std::string& value) {
  set_has_type();
  type_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:anyq.ReqPreprocPluginConfig.type)
}
void ReqPreprocPluginConfig::set_type(const char* value) {
  set_has_type();
  type_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:anyq.ReqPreprocPluginConfig.type)
}
void ReqPreprocPluginConfig::set_type(const char* value, size_t size) {
  set_has_type();
  type_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:anyq.ReqPreprocPluginConfig.type)
}
::std::string* ReqPreprocPluginConfig::mutable_type() {
  set_has_type();
  // @@protoc_insertion_point(field_mutable:anyq.ReqPreprocPluginConfig.type)
  return type_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* ReqPreprocPluginConfig::release_type() {
  // @@protoc_insertion_point(field_release:anyq.ReqPreprocPluginConfig.type)
  clear_has_type();
  return type_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void ReqPreprocPluginConfig::set_allocated_type(::std::string* type) {
  if (type != NULL) {
    set_has_type();
  } else {
    clear_has_type();
  }
  type_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), type);
  // @@protoc_insertion_point(field_set_allocated:anyq.ReqPreprocPluginConfig.type)
}

// required string name = 2;
bool ReqPreprocPluginConfig::has_name() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void ReqPreprocPluginConfig::set_has_name() {
  _has_bits_[0] |= 0x00000002u;
}
void ReqPreprocPluginConfig::clear_has_name() {
  _has_bits_[0] &= ~0x00000002u;
}
void ReqPreprocPluginConfig::clear_name() {
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_name();
}
const ::std::string& ReqPreprocPluginConfig::name() const {
  // @@protoc_insertion_point(field_get:anyq.ReqPreprocPluginConfig.name)
  return name_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void ReqPreprocPluginConfig::set_name(const ::std::string& value) {
  set_has_name();
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:anyq.ReqPreprocPluginConfig.name)
}
void ReqPreprocPluginConfig::set_name(const char* value) {
  set_has_name();
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:anyq.ReqPreprocPluginConfig.name)
}
void ReqPreprocPluginConfig::set_name(const char* value, size_t size) {
  set_has_name();
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:anyq.ReqPreprocPluginConfig.name)
}
::std::string* ReqPreprocPluginConfig::mutable_name() {
  set_has_name();
  // @@protoc_insertion_point(field_mutable:anyq.ReqPreprocPluginConfig.name)
  return name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* ReqPreprocPluginConfig::release_name() {
  // @@protoc_insertion_point(field_release:anyq.ReqPreprocPluginConfig.name)
  clear_has_name();
  return name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void ReqPreprocPluginConfig::set_allocated_name(::std::string* name) {
  if (name != NULL) {
    set_has_name();
  } else {
    clear_has_name();
  }
  name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), name);
  // @@protoc_insertion_point(field_set_allocated:anyq.ReqPreprocPluginConfig.name)
}

inline const ReqPreprocPluginConfig* ReqPreprocPluginConfig::internal_default_instance() {
  return &ReqPreprocPluginConfig_default_instance_.get();
}
#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ReqPostprocPluginConfig::kTypeFieldNumber;
const int ReqPostprocPluginConfig::kNameFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ReqPostprocPluginConfig::ReqPostprocPluginConfig()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (this != internal_default_instance()) protobuf_InitDefaults_anyq_2eproto();
  SharedCtor();
  // @@protoc_insertion_point(constructor:anyq.ReqPostprocPluginConfig)
}

void ReqPostprocPluginConfig::InitAsDefaultInstance() {
}

ReqPostprocPluginConfig::ReqPostprocPluginConfig(const ReqPostprocPluginConfig& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  UnsafeMergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:anyq.ReqPostprocPluginConfig)
}

void ReqPostprocPluginConfig::SharedCtor() {
  _cached_size_ = 0;
  type_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

ReqPostprocPluginConfig::~ReqPostprocPluginConfig() {
  // @@protoc_insertion_point(destructor:anyq.ReqPostprocPluginConfig)
  SharedDtor();
}

void ReqPostprocPluginConfig::SharedDtor() {
  type_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void ReqPostprocPluginConfig::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ReqPostprocPluginConfig::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return ReqPostprocPluginConfig_descriptor_;
}

const ReqPostprocPluginConfig& ReqPostprocPluginConfig::default_instance() {
  protobuf_InitDefaults_anyq_2eproto();
  return *internal_default_instance();
}

::google::protobuf::internal::ExplicitlyConstructed<ReqPostprocPluginConfig> ReqPostprocPluginConfig_default_instance_;

ReqPostprocPluginConfig* ReqPostprocPluginConfig::New(::google::protobuf::Arena* arena) const {
  ReqPostprocPluginConfig* n = new ReqPostprocPluginConfig;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void ReqPostprocPluginConfig::Clear() {
// @@protoc_insertion_point(message_clear_start:anyq.ReqPostprocPluginConfig)
  if (_has_bits_[0 / 32] & 3u) {
    if (has_type()) {
      type_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
    if (has_name()) {
      name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
  }
  _has_bits_.Clear();
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool ReqPostprocPluginConfig::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:anyq.ReqPostprocPluginConfig)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required string type = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_type()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->type().data(), this->type().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "anyq.ReqPostprocPluginConfig.type");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_name;
        break;
      }

      // required string name = 2;
      case 2: {
        if (tag == 18) {
         parse_name:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->name().data(), this->name().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "anyq.ReqPostprocPluginConfig.name");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:anyq.ReqPostprocPluginConfig)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:anyq.ReqPostprocPluginConfig)
  return false;
#undef DO_
}

void ReqPostprocPluginConfig::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:anyq.ReqPostprocPluginConfig)
  // required string type = 1;
  if (has_type()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->type().data(), this->type().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "anyq.ReqPostprocPluginConfig.type");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->type(), output);
  }

  // required string name = 2;
  if (has_name()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->name().data(), this->name().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "anyq.ReqPostprocPluginConfig.name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->name(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:anyq.ReqPostprocPluginConfig)
}

::google::protobuf::uint8* ReqPostprocPluginConfig::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:anyq.ReqPostprocPluginConfig)
  // required string type = 1;
  if (has_type()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->type().data(), this->type().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "anyq.ReqPostprocPluginConfig.type");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->type(), target);
  }

  // required string name = 2;
  if (has_name()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->name().data(), this->name().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "anyq.ReqPostprocPluginConfig.name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->name(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:anyq.ReqPostprocPluginConfig)
  return target;
}

size_t ReqPostprocPluginConfig::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:anyq.ReqPostprocPluginConfig)
  size_t total_size = 0;

  if (has_type()) {
    // required string type = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->type());
  }

  if (has_name()) {
    // required string name = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->name());
  }

  return total_size;
}
size_t ReqPostprocPluginConfig::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:anyq.ReqPostprocPluginConfig)
  size_t total_size = 0;

  if (((_has_bits_[0] & 0x00000003) ^ 0x00000003) == 0) {  // All required fields are present.
    // required string type = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->type());

    // required string name = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->name());

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ReqPostprocPluginConfig::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:anyq.ReqPostprocPluginConfig)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const ReqPostprocPluginConfig* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ReqPostprocPluginConfig>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:anyq.ReqPostprocPluginConfig)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:anyq.ReqPostprocPluginConfig)
    UnsafeMergeFrom(*source);
  }
}

void ReqPostprocPluginConfig::MergeFrom(const ReqPostprocPluginConfig& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:anyq.ReqPostprocPluginConfig)
  if (GOOGLE_PREDICT_TRUE(&from != this)) {
    UnsafeMergeFrom(from);
  } else {
    MergeFromFail(__LINE__);
  }
}

void ReqPostprocPluginConfig::UnsafeMergeFrom(const ReqPostprocPluginConfig& from) {
  GOOGLE_DCHECK(&from != this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_type()) {
      set_has_type();
      type_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.type_);
    }
    if (from.has_name()) {
      set_has_name();
      name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::UnknownFieldSet::MergeToInternalMetdata(
      from.unknown_fields(), &_internal_metadata_);
  }
}

void ReqPostprocPluginConfig::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:anyq.ReqPostprocPluginConfig)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ReqPostprocPluginConfig::CopyFrom(const ReqPostprocPluginConfig& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:anyq.ReqPostprocPluginConfig)
  if (&from == this) return;
  Clear();
  UnsafeMergeFrom(from);
}

bool ReqPostprocPluginConfig::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000003) != 0x00000003) return false;

  return true;
}

void ReqPostprocPluginConfig::Swap(ReqPostprocPluginConfig* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ReqPostprocPluginConfig::InternalSwap(ReqPostprocPluginConfig* other) {
  type_.Swap(&other->type_);
  name_.Swap(&other->name_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata ReqPostprocPluginConfig::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = ReqPostprocPluginConfig_descriptor_;
  metadata.reflection = ReqPostprocPluginConfig_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// ReqPostprocPluginConfig

// required string type = 1;
bool ReqPostprocPluginConfig::has_type() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void ReqPostprocPluginConfig::set_has_type() {
  _has_bits_[0] |= 0x00000001u;
}
void ReqPostprocPluginConfig::clear_has_type() {
  _has_bits_[0] &= ~0x00000001u;
}
void ReqPostprocPluginConfig::clear_type() {
  type_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_type();
}
const ::std::string& ReqPostprocPluginConfig::type() const {
  // @@protoc_insertion_point(field_get:anyq.ReqPostprocPluginConfig.type)
  return type_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void ReqPostprocPluginConfig::set_type(const ::std::string& value) {
  set_has_type();
  type_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:anyq.ReqPostprocPluginConfig.type)
}
void ReqPostprocPluginConfig::set_type(const char* value) {
  set_has_type();
  type_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:anyq.ReqPostprocPluginConfig.type)
}
void ReqPostprocPluginConfig::set_type(const char* value, size_t size) {
  set_has_type();
  type_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:anyq.ReqPostprocPluginConfig.type)
}
::std::string* ReqPostprocPluginConfig::mutable_type() {
  set_has_type();
  // @@protoc_insertion_point(field_mutable:anyq.ReqPostprocPluginConfig.type)
  return type_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* ReqPostprocPluginConfig::release_type() {
  // @@protoc_insertion_point(field_release:anyq.ReqPostprocPluginConfig.type)
  clear_has_type();
  return type_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void ReqPostprocPluginConfig::set_allocated_type(::std::string* type) {
  if (type != NULL) {
    set_has_type();
  } else {
    clear_has_type();
  }
  type_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), type);
  // @@protoc_insertion_point(field_set_allocated:anyq.ReqPostprocPluginConfig.type)
}

// required string name = 2;
bool ReqPostprocPluginConfig::has_name() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void ReqPostprocPluginConfig::set_has_name() {
  _has_bits_[0] |= 0x00000002u;
}
void ReqPostprocPluginConfig::clear_has_name() {
  _has_bits_[0] &= ~0x00000002u;
}
void ReqPostprocPluginConfig::clear_name() {
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_name();
}
const ::std::string& ReqPostprocPluginConfig::name() const {
  // @@protoc_insertion_point(field_get:anyq.ReqPostprocPluginConfig.name)
  return name_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void ReqPostprocPluginConfig::set_name(const ::std::string& value) {
  set_has_name();
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:anyq.ReqPostprocPluginConfig.name)
}
void ReqPostprocPluginConfig::set_name(const char* value) {
  set_has_name();
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:anyq.ReqPostprocPluginConfig.name)
}
void ReqPostprocPluginConfig::set_name(const char* value, size_t size) {
  set_has_name();
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:anyq.ReqPostprocPluginConfig.name)
}
::std::string* ReqPostprocPluginConfig::mutable_name() {
  set_has_name();
  // @@protoc_insertion_point(field_mutable:anyq.ReqPostprocPluginConfig.name)
  return name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* ReqPostprocPluginConfig::release_name() {
  // @@protoc_insertion_point(field_release:anyq.ReqPostprocPluginConfig.name)
  clear_has_name();
  return name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void ReqPostprocPluginConfig::set_allocated_name(::std::string* name) {
  if (name != NULL) {
    set_has_name();
  } else {
    clear_has_name();
  }
  name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), name);
  // @@protoc_insertion_point(field_set_allocated:anyq.ReqPostprocPluginConfig.name)
}

inline const ReqPostprocPluginConfig* ReqPostprocPluginConfig::internal_default_instance() {
  return &ReqPostprocPluginConfig_default_instance_.get();
}
#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ServerConfig::kIdleTimeoutSecFieldNumber;
const int ServerConfig::kMaxConcurrencyFieldNumber;
const int ServerConfig::kPortFieldNumber;
const int ServerConfig::kServerConfDirFieldNumber;
const int ServerConfig::kLogConfFileFieldNumber;
const int ServerConfig::kAnyqDictConfDirFieldNumber;
const int ServerConfig::kAnyqConfDirFieldNumber;
const int ServerConfig::kPreprocPluginFieldNumber;
const int ServerConfig::kPostprocPluginFieldNumber;
const int ServerConfig::kSolrClearPasswdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ServerConfig::ServerConfig()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (this != internal_default_instance()) protobuf_InitDefaults_anyq_2eproto();
  SharedCtor();
  // @@protoc_insertion_point(constructor:anyq.ServerConfig)
}

void ServerConfig::InitAsDefaultInstance() {
  preproc_plugin_ = const_cast< ::anyq::ReqPreprocPluginConfig*>(
      ::anyq::ReqPreprocPluginConfig::internal_default_instance());
  postproc_plugin_ = const_cast< ::anyq::ReqPostprocPluginConfig*>(
      ::anyq::ReqPostprocPluginConfig::internal_default_instance());
}

ServerConfig::ServerConfig(const ServerConfig& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  UnsafeMergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:anyq.ServerConfig)
}

void ServerConfig::SharedCtor() {
  _cached_size_ = 0;
  server_conf_dir_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  log_conf_file_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  anyq_dict_conf_dir_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  anyq_conf_dir_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  solr_clear_passwd_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  preproc_plugin_ = NULL;
  postproc_plugin_ = NULL;
  ::memset(&idle_timeout_sec_, 0, reinterpret_cast<char*>(&port_) -
    reinterpret_cast<char*>(&idle_timeout_sec_) + sizeof(port_));
}

ServerConfig::~ServerConfig() {
  // @@protoc_insertion_point(destructor:anyq.ServerConfig)
  SharedDtor();
}

void ServerConfig::SharedDtor() {
  server_conf_dir_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  log_conf_file_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  anyq_dict_conf_dir_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  anyq_conf_dir_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  solr_clear_passwd_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != &ServerConfig_default_instance_.get()) {
    delete preproc_plugin_;
    delete postproc_plugin_;
  }
}

void ServerConfig::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ServerConfig::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return ServerConfig_descriptor_;
}

const ServerConfig& ServerConfig::default_instance() {
  protobuf_InitDefaults_anyq_2eproto();
  return *internal_default_instance();
}

::google::protobuf::internal::ExplicitlyConstructed<ServerConfig> ServerConfig_default_instance_;

ServerConfig* ServerConfig::New(::google::protobuf::Arena* arena) const {
  ServerConfig* n = new ServerConfig;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void ServerConfig::Clear() {
// @@protoc_insertion_point(message_clear_start:anyq.ServerConfig)
#if defined(__clang__)
#define ZR_HELPER_(f) \
  _Pragma("clang diagnostic push") \
  _Pragma("clang diagnostic ignored \"-Winvalid-offsetof\"") \
  __builtin_offsetof(ServerConfig, f) \
  _Pragma("clang diagnostic pop")
#else
#define ZR_HELPER_(f) reinterpret_cast<char*>(\
  &reinterpret_cast<ServerConfig*>(16)->f)
#endif

#define ZR_(first, last) do {\
  ::memset(&(first), 0,\
           ZR_HELPER_(last) - ZR_HELPER_(first) + sizeof(last));\
} while (0)

  if (_has_bits_[0 / 32] & 255u) {
    ZR_(idle_timeout_sec_, port_);
    if (has_server_conf_dir()) {
      server_conf_dir_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
    if (has_log_conf_file()) {
      log_conf_file_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
    if (has_anyq_dict_conf_dir()) {
      anyq_dict_conf_dir_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
    if (has_anyq_conf_dir()) {
      anyq_conf_dir_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
    if (has_preproc_plugin()) {
      if (preproc_plugin_ != NULL) preproc_plugin_->::anyq::ReqPreprocPluginConfig::Clear();
    }
  }
  if (_has_bits_[8 / 32] & 768u) {
    if (has_postproc_plugin()) {
      if (postproc_plugin_ != NULL) postproc_plugin_->::anyq::ReqPostprocPluginConfig::Clear();
    }
    if (has_solr_clear_passwd()) {
      solr_clear_passwd_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
  }

#undef ZR_HELPER_
#undef ZR_

  _has_bits_.Clear();
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool ServerConfig::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:anyq.ServerConfig)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required int32 idle_timeout_sec = 1;
      case 1: {
        if (tag == 8) {
          set_has_idle_timeout_sec();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &idle_timeout_sec_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_max_concurrency;
        break;
      }

      // required int32 max_concurrency = 2;
      case 2: {
        if (tag == 16) {
         parse_max_concurrency:
          set_has_max_concurrency();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &max_concurrency_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_port;
        break;
      }

      // required int32 port = 3;
      case 3: {
        if (tag == 24) {
         parse_port:
          set_has_port();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &port_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(34)) goto parse_server_conf_dir;
        break;
      }

      // required string server_conf_dir = 4;
      case 4: {
        if (tag == 34) {
         parse_server_conf_dir:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_server_conf_dir()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->server_conf_dir().data(), this->server_conf_dir().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "anyq.ServerConfig.server_conf_dir");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(42)) goto parse_log_conf_file;
        break;
      }

      // required string log_conf_file = 5;
      case 5: {
        if (tag == 42) {
         parse_log_conf_file:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_log_conf_file()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->log_conf_file().data(), this->log_conf_file().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "anyq.ServerConfig.log_conf_file");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(50)) goto parse_anyq_dict_conf_dir;
        break;
      }

      // required string anyq_dict_conf_dir = 6;
      case 6: {
        if (tag == 50) {
         parse_anyq_dict_conf_dir:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_anyq_dict_conf_dir()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->anyq_dict_conf_dir().data(), this->anyq_dict_conf_dir().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "anyq.ServerConfig.anyq_dict_conf_dir");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(58)) goto parse_anyq_conf_dir;
        break;
      }

      // required string anyq_conf_dir = 7;
      case 7: {
        if (tag == 58) {
         parse_anyq_conf_dir:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_anyq_conf_dir()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->anyq_conf_dir().data(), this->anyq_conf_dir().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "anyq.ServerConfig.anyq_conf_dir");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(66)) goto parse_preproc_plugin;
        break;
      }

      // required .anyq.ReqPreprocPluginConfig preproc_plugin = 8;
      case 8: {
        if (tag == 66) {
         parse_preproc_plugin:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_preproc_plugin()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(74)) goto parse_postproc_plugin;
        break;
      }

      // required .anyq.ReqPostprocPluginConfig postproc_plugin = 9;
      case 9: {
        if (tag == 74) {
         parse_postproc_plugin:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_postproc_plugin()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(82)) goto parse_solr_clear_passwd;
        break;
      }

      // optional string solr_clear_passwd = 10;
      case 10: {
        if (tag == 82) {
         parse_solr_clear_passwd:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_solr_clear_passwd()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->solr_clear_passwd().data(), this->solr_clear_passwd().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "anyq.ServerConfig.solr_clear_passwd");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:anyq.ServerConfig)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:anyq.ServerConfig)
  return false;
#undef DO_
}

void ServerConfig::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:anyq.ServerConfig)
  // required int32 idle_timeout_sec = 1;
  if (has_idle_timeout_sec()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->idle_timeout_sec(), output);
  }

  // required int32 max_concurrency = 2;
  if (has_max_concurrency()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->max_concurrency(), output);
  }

  // required int32 port = 3;
  if (has_port()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->port(), output);
  }

  // required string server_conf_dir = 4;
  if (has_server_conf_dir()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->server_conf_dir().data(), this->server_conf_dir().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "anyq.ServerConfig.server_conf_dir");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->server_conf_dir(), output);
  }

  // required string log_conf_file = 5;
  if (has_log_conf_file()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->log_conf_file().data(), this->log_conf_file().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "anyq.ServerConfig.log_conf_file");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      5, this->log_conf_file(), output);
  }

  // required string anyq_dict_conf_dir = 6;
  if (has_anyq_dict_conf_dir()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->anyq_dict_conf_dir().data(), this->anyq_dict_conf_dir().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "anyq.ServerConfig.anyq_dict_conf_dir");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      6, this->anyq_dict_conf_dir(), output);
  }

  // required string anyq_conf_dir = 7;
  if (has_anyq_conf_dir()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->anyq_conf_dir().data(), this->anyq_conf_dir().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "anyq.ServerConfig.anyq_conf_dir");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      7, this->anyq_conf_dir(), output);
  }

  // required .anyq.ReqPreprocPluginConfig preproc_plugin = 8;
  if (has_preproc_plugin()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      8, *this->preproc_plugin_, output);
  }

  // required .anyq.ReqPostprocPluginConfig postproc_plugin = 9;
  if (has_postproc_plugin()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      9, *this->postproc_plugin_, output);
  }

  // optional string solr_clear_passwd = 10;
  if (has_solr_clear_passwd()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->solr_clear_passwd().data(), this->solr_clear_passwd().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "anyq.ServerConfig.solr_clear_passwd");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      10, this->solr_clear_passwd(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:anyq.ServerConfig)
}

::google::protobuf::uint8* ServerConfig::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:anyq.ServerConfig)
  // required int32 idle_timeout_sec = 1;
  if (has_idle_timeout_sec()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->idle_timeout_sec(), target);
  }

  // required int32 max_concurrency = 2;
  if (has_max_concurrency()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->max_concurrency(), target);
  }

  // required int32 port = 3;
  if (has_port()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->port(), target);
  }

  // required string server_conf_dir = 4;
  if (has_server_conf_dir()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->server_conf_dir().data(), this->server_conf_dir().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "anyq.ServerConfig.server_conf_dir");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->server_conf_dir(), target);
  }

  // required string log_conf_file = 5;
  if (has_log_conf_file()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->log_conf_file().data(), this->log_conf_file().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "anyq.ServerConfig.log_conf_file");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        5, this->log_conf_file(), target);
  }

  // required string anyq_dict_conf_dir = 6;
  if (has_anyq_dict_conf_dir()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->anyq_dict_conf_dir().data(), this->anyq_dict_conf_dir().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "anyq.ServerConfig.anyq_dict_conf_dir");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        6, this->anyq_dict_conf_dir(), target);
  }

  // required string anyq_conf_dir = 7;
  if (has_anyq_conf_dir()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->anyq_conf_dir().data(), this->anyq_conf_dir().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "anyq.ServerConfig.anyq_conf_dir");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        7, this->anyq_conf_dir(), target);
  }

  // required .anyq.ReqPreprocPluginConfig preproc_plugin = 8;
  if (has_preproc_plugin()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        8, *this->preproc_plugin_, false, target);
  }

  // required .anyq.ReqPostprocPluginConfig postproc_plugin = 9;
  if (has_postproc_plugin()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        9, *this->postproc_plugin_, false, target);
  }

  // optional string solr_clear_passwd = 10;
  if (has_solr_clear_passwd()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->solr_clear_passwd().data(), this->solr_clear_passwd().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "anyq.ServerConfig.solr_clear_passwd");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        10, this->solr_clear_passwd(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:anyq.ServerConfig)
  return target;
}

size_t ServerConfig::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:anyq.ServerConfig)
  size_t total_size = 0;

  if (has_idle_timeout_sec()) {
    // required int32 idle_timeout_sec = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->idle_timeout_sec());
  }

  if (has_max_concurrency()) {
    // required int32 max_concurrency = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->max_concurrency());
  }

  if (has_port()) {
    // required int32 port = 3;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->port());
  }

  if (has_server_conf_dir()) {
    // required string server_conf_dir = 4;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->server_conf_dir());
  }

  if (has_log_conf_file()) {
    // required string log_conf_file = 5;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->log_conf_file());
  }

  if (has_anyq_dict_conf_dir()) {
    // required string anyq_dict_conf_dir = 6;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->anyq_dict_conf_dir());
  }

  if (has_anyq_conf_dir()) {
    // required string anyq_conf_dir = 7;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->anyq_conf_dir());
  }

  if (has_preproc_plugin()) {
    // required .anyq.ReqPreprocPluginConfig preproc_plugin = 8;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->preproc_plugin_);
  }

  if (has_postproc_plugin()) {
    // required .anyq.ReqPostprocPluginConfig postproc_plugin = 9;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->postproc_plugin_);
  }

  return total_size;
}
size_t ServerConfig::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:anyq.ServerConfig)
  size_t total_size = 0;

  if (((_has_bits_[0] & 0x000001ff) ^ 0x000001ff) == 0) {  // All required fields are present.
    // required int32 idle_timeout_sec = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->idle_timeout_sec());

    // required int32 max_concurrency = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->max_concurrency());

    // required int32 port = 3;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->port());

    // required string server_conf_dir = 4;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->server_conf_dir());

    // required string log_conf_file = 5;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->log_conf_file());

    // required string anyq_dict_conf_dir = 6;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->anyq_dict_conf_dir());

    // required string anyq_conf_dir = 7;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->anyq_conf_dir());

    // required .anyq.ReqPreprocPluginConfig preproc_plugin = 8;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->preproc_plugin_);

    // required .anyq.ReqPostprocPluginConfig postproc_plugin = 9;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->postproc_plugin_);

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  // optional string solr_clear_passwd = 10;
  if (has_solr_clear_passwd()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->solr_clear_passwd());
  }

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ServerConfig::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:anyq.ServerConfig)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const ServerConfig* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ServerConfig>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:anyq.ServerConfig)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:anyq.ServerConfig)
    UnsafeMergeFrom(*source);
  }
}

void ServerConfig::MergeFrom(const ServerConfig& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:anyq.ServerConfig)
  if (GOOGLE_PREDICT_TRUE(&from != this)) {
    UnsafeMergeFrom(from);
  } else {
    MergeFromFail(__LINE__);
  }
}

void ServerConfig::UnsafeMergeFrom(const ServerConfig& from) {
  GOOGLE_DCHECK(&from != this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_idle_timeout_sec()) {
      set_idle_timeout_sec(from.idle_timeout_sec());
    }
    if (from.has_max_concurrency()) {
      set_max_concurrency(from.max_concurrency());
    }
    if (from.has_port()) {
      set_port(from.port());
    }
    if (from.has_server_conf_dir()) {
      set_has_server_conf_dir();
      server_conf_dir_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.server_conf_dir_);
    }
    if (from.has_log_conf_file()) {
      set_has_log_conf_file();
      log_conf_file_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.log_conf_file_);
    }
    if (from.has_anyq_dict_conf_dir()) {
      set_has_anyq_dict_conf_dir();
      anyq_dict_conf_dir_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.anyq_dict_conf_dir_);
    }
    if (from.has_anyq_conf_dir()) {
      set_has_anyq_conf_dir();
      anyq_conf_dir_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.anyq_conf_dir_);
    }
    if (from.has_preproc_plugin()) {
      mutable_preproc_plugin()->::anyq::ReqPreprocPluginConfig::MergeFrom(from.preproc_plugin());
    }
  }
  if (from._has_bits_[8 / 32] & (0xffu << (8 % 32))) {
    if (from.has_postproc_plugin()) {
      mutable_postproc_plugin()->::anyq::ReqPostprocPluginConfig::MergeFrom(from.postproc_plugin());
    }
    if (from.has_solr_clear_passwd()) {
      set_has_solr_clear_passwd();
      solr_clear_passwd_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.solr_clear_passwd_);
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::UnknownFieldSet::MergeToInternalMetdata(
      from.unknown_fields(), &_internal_metadata_);
  }
}

void ServerConfig::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:anyq.ServerConfig)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ServerConfig::CopyFrom(const ServerConfig& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:anyq.ServerConfig)
  if (&from == this) return;
  Clear();
  UnsafeMergeFrom(from);
}

bool ServerConfig::IsInitialized() const {
  if ((_has_bits_[0] & 0x000001ff) != 0x000001ff) return false;

  if (has_preproc_plugin()) {
    if (!this->preproc_plugin_->IsInitialized()) return false;
  }
  if (has_postproc_plugin()) {
    if (!this->postproc_plugin_->IsInitialized()) return false;
  }
  return true;
}

void ServerConfig::Swap(ServerConfig* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ServerConfig::InternalSwap(ServerConfig* other) {
  std::swap(idle_timeout_sec_, other->idle_timeout_sec_);
  std::swap(max_concurrency_, other->max_concurrency_);
  std::swap(port_, other->port_);
  server_conf_dir_.Swap(&other->server_conf_dir_);
  log_conf_file_.Swap(&other->log_conf_file_);
  anyq_dict_conf_dir_.Swap(&other->anyq_dict_conf_dir_);
  anyq_conf_dir_.Swap(&other->anyq_conf_dir_);
  std::swap(preproc_plugin_, other->preproc_plugin_);
  std::swap(postproc_plugin_, other->postproc_plugin_);
  solr_clear_passwd_.Swap(&other->solr_clear_passwd_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata ServerConfig::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = ServerConfig_descriptor_;
  metadata.reflection = ServerConfig_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// ServerConfig

// required int32 idle_timeout_sec = 1;
bool ServerConfig::has_idle_timeout_sec() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void ServerConfig::set_has_idle_timeout_sec() {
  _has_bits_[0] |= 0x00000001u;
}
void ServerConfig::clear_has_idle_timeout_sec() {
  _has_bits_[0] &= ~0x00000001u;
}
void ServerConfig::clear_idle_timeout_sec() {
  idle_timeout_sec_ = 0;
  clear_has_idle_timeout_sec();
}
::google::protobuf::int32 ServerConfig::idle_timeout_sec() const {
  // @@protoc_insertion_point(field_get:anyq.ServerConfig.idle_timeout_sec)
  return idle_timeout_sec_;
}
void ServerConfig::set_idle_timeout_sec(::google::protobuf::int32 value) {
  set_has_idle_timeout_sec();
  idle_timeout_sec_ = value;
  // @@protoc_insertion_point(field_set:anyq.ServerConfig.idle_timeout_sec)
}

// required int32 max_concurrency = 2;
bool ServerConfig::has_max_concurrency() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void ServerConfig::set_has_max_concurrency() {
  _has_bits_[0] |= 0x00000002u;
}
void ServerConfig::clear_has_max_concurrency() {
  _has_bits_[0] &= ~0x00000002u;
}
void ServerConfig::clear_max_concurrency() {
  max_concurrency_ = 0;
  clear_has_max_concurrency();
}
::google::protobuf::int32 ServerConfig::max_concurrency() const {
  // @@protoc_insertion_point(field_get:anyq.ServerConfig.max_concurrency)
  return max_concurrency_;
}
void ServerConfig::set_max_concurrency(::google::protobuf::int32 value) {
  set_has_max_concurrency();
  max_concurrency_ = value;
  // @@protoc_insertion_point(field_set:anyq.ServerConfig.max_concurrency)
}

// required int32 port = 3;
bool ServerConfig::has_port() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
void ServerConfig::set_has_port() {
  _has_bits_[0] |= 0x00000004u;
}
void ServerConfig::clear_has_port() {
  _has_bits_[0] &= ~0x00000004u;
}
void ServerConfig::clear_port() {
  port_ = 0;
  clear_has_port();
}
::google::protobuf::int32 ServerConfig::port() const {
  // @@protoc_insertion_point(field_get:anyq.ServerConfig.port)
  return port_;
}
void ServerConfig::set_port(::google::protobuf::int32 value) {
  set_has_port();
  port_ = value;
  // @@protoc_insertion_point(field_set:anyq.ServerConfig.port)
}

// required string server_conf_dir = 4;
bool ServerConfig::has_server_conf_dir() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
void ServerConfig::set_has_server_conf_dir() {
  _has_bits_[0] |= 0x00000008u;
}
void ServerConfig::clear_has_server_conf_dir() {
  _has_bits_[0] &= ~0x00000008u;
}
void ServerConfig::clear_server_conf_dir() {
  server_conf_dir_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_server_conf_dir();
}
const ::std::string& ServerConfig::server_conf_dir() const {
  // @@protoc_insertion_point(field_get:anyq.ServerConfig.server_conf_dir)
  return server_conf_dir_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void ServerConfig::set_server_conf_dir(const ::std::string& value) {
  set_has_server_conf_dir();
  server_conf_dir_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:anyq.ServerConfig.server_conf_dir)
}
void ServerConfig::set_server_conf_dir(const char* value) {
  set_has_server_conf_dir();
  server_conf_dir_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:anyq.ServerConfig.server_conf_dir)
}
void ServerConfig::set_server_conf_dir(const char* value, size_t size) {
  set_has_server_conf_dir();
  server_conf_dir_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:anyq.ServerConfig.server_conf_dir)
}
::std::string* ServerConfig::mutable_server_conf_dir() {
  set_has_server_conf_dir();
  // @@protoc_insertion_point(field_mutable:anyq.ServerConfig.server_conf_dir)
  return server_conf_dir_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* ServerConfig::release_server_conf_dir() {
  // @@protoc_insertion_point(field_release:anyq.ServerConfig.server_conf_dir)
  clear_has_server_conf_dir();
  return server_conf_dir_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void ServerConfig::set_allocated_server_conf_dir(::std::string* server_conf_dir) {
  if (server_conf_dir != NULL) {
    set_has_server_conf_dir();
  } else {
    clear_has_server_conf_dir();
  }
  server_conf_dir_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), server_conf_dir);
  // @@protoc_insertion_point(field_set_allocated:anyq.ServerConfig.server_conf_dir)
}

// required string log_conf_file = 5;
bool ServerConfig::has_log_conf_file() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
void ServerConfig::set_has_log_conf_file() {
  _has_bits_[0] |= 0x00000010u;
}
void ServerConfig::clear_has_log_conf_file() {
  _has_bits_[0] &= ~0x00000010u;
}
void ServerConfig::clear_log_conf_file() {
  log_conf_file_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_log_conf_file();
}
const ::std::string& ServerConfig::log_conf_file() const {
  // @@protoc_insertion_point(field_get:anyq.ServerConfig.log_conf_file)
  return log_conf_file_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void ServerConfig::set_log_conf_file(const ::std::string& value) {
  set_has_log_conf_file();
  log_conf_file_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:anyq.ServerConfig.log_conf_file)
}
void ServerConfig::set_log_conf_file(const char* value) {
  set_has_log_conf_file();
  log_conf_file_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:anyq.ServerConfig.log_conf_file)
}
void ServerConfig::set_log_conf_file(const char* value, size_t size) {
  set_has_log_conf_file();
  log_conf_file_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:anyq.ServerConfig.log_conf_file)
}
::std::string* ServerConfig::mutable_log_conf_file() {
  set_has_log_conf_file();
  // @@protoc_insertion_point(field_mutable:anyq.ServerConfig.log_conf_file)
  return log_conf_file_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* ServerConfig::release_log_conf_file() {
  // @@protoc_insertion_point(field_release:anyq.ServerConfig.log_conf_file)
  clear_has_log_conf_file();
  return log_conf_file_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void ServerConfig::set_allocated_log_conf_file(::std::string* log_conf_file) {
  if (log_conf_file != NULL) {
    set_has_log_conf_file();
  } else {
    clear_has_log_conf_file();
  }
  log_conf_file_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), log_conf_file);
  // @@protoc_insertion_point(field_set_allocated:anyq.ServerConfig.log_conf_file)
}

// required string anyq_dict_conf_dir = 6;
bool ServerConfig::has_anyq_dict_conf_dir() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
void ServerConfig::set_has_anyq_dict_conf_dir() {
  _has_bits_[0] |= 0x00000020u;
}
void ServerConfig::clear_has_anyq_dict_conf_dir() {
  _has_bits_[0] &= ~0x00000020u;
}
void ServerConfig::clear_anyq_dict_conf_dir() {
  anyq_dict_conf_dir_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_anyq_dict_conf_dir();
}
const ::std::string& ServerConfig::anyq_dict_conf_dir() const {
  // @@protoc_insertion_point(field_get:anyq.ServerConfig.anyq_dict_conf_dir)
  return anyq_dict_conf_dir_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void ServerConfig::set_anyq_dict_conf_dir(const ::std::string& value) {
  set_has_anyq_dict_conf_dir();
  anyq_dict_conf_dir_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:anyq.ServerConfig.anyq_dict_conf_dir)
}
void ServerConfig::set_anyq_dict_conf_dir(const char* value) {
  set_has_anyq_dict_conf_dir();
  anyq_dict_conf_dir_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:anyq.ServerConfig.anyq_dict_conf_dir)
}
void ServerConfig::set_anyq_dict_conf_dir(const char* value, size_t size) {
  set_has_anyq_dict_conf_dir();
  anyq_dict_conf_dir_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:anyq.ServerConfig.anyq_dict_conf_dir)
}
::std::string* ServerConfig::mutable_anyq_dict_conf_dir() {
  set_has_anyq_dict_conf_dir();
  // @@protoc_insertion_point(field_mutable:anyq.ServerConfig.anyq_dict_conf_dir)
  return anyq_dict_conf_dir_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* ServerConfig::release_anyq_dict_conf_dir() {
  // @@protoc_insertion_point(field_release:anyq.ServerConfig.anyq_dict_conf_dir)
  clear_has_anyq_dict_conf_dir();
  return anyq_dict_conf_dir_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void ServerConfig::set_allocated_anyq_dict_conf_dir(::std::string* anyq_dict_conf_dir) {
  if (anyq_dict_conf_dir != NULL) {
    set_has_anyq_dict_conf_dir();
  } else {
    clear_has_anyq_dict_conf_dir();
  }
  anyq_dict_conf_dir_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), anyq_dict_conf_dir);
  // @@protoc_insertion_point(field_set_allocated:anyq.ServerConfig.anyq_dict_conf_dir)
}

// required string anyq_conf_dir = 7;
bool ServerConfig::has_anyq_conf_dir() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
void ServerConfig::set_has_anyq_conf_dir() {
  _has_bits_[0] |= 0x00000040u;
}
void ServerConfig::clear_has_anyq_conf_dir() {
  _has_bits_[0] &= ~0x00000040u;
}
void ServerConfig::clear_anyq_conf_dir() {
  anyq_conf_dir_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_anyq_conf_dir();
}
const ::std::string& ServerConfig::anyq_conf_dir() const {
  // @@protoc_insertion_point(field_get:anyq.ServerConfig.anyq_conf_dir)
  return anyq_conf_dir_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void ServerConfig::set_anyq_conf_dir(const ::std::string& value) {
  set_has_anyq_conf_dir();
  anyq_conf_dir_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:anyq.ServerConfig.anyq_conf_dir)
}
void ServerConfig::set_anyq_conf_dir(const char* value) {
  set_has_anyq_conf_dir();
  anyq_conf_dir_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:anyq.ServerConfig.anyq_conf_dir)
}
void ServerConfig::set_anyq_conf_dir(const char* value, size_t size) {
  set_has_anyq_conf_dir();
  anyq_conf_dir_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:anyq.ServerConfig.anyq_conf_dir)
}
::std::string* ServerConfig::mutable_anyq_conf_dir() {
  set_has_anyq_conf_dir();
  // @@protoc_insertion_point(field_mutable:anyq.ServerConfig.anyq_conf_dir)
  return anyq_conf_dir_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* ServerConfig::release_anyq_conf_dir() {
  // @@protoc_insertion_point(field_release:anyq.ServerConfig.anyq_conf_dir)
  clear_has_anyq_conf_dir();
  return anyq_conf_dir_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void ServerConfig::set_allocated_anyq_conf_dir(::std::string* anyq_conf_dir) {
  if (anyq_conf_dir != NULL) {
    set_has_anyq_conf_dir();
  } else {
    clear_has_anyq_conf_dir();
  }
  anyq_conf_dir_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), anyq_conf_dir);
  // @@protoc_insertion_point(field_set_allocated:anyq.ServerConfig.anyq_conf_dir)
}

// required .anyq.ReqPreprocPluginConfig preproc_plugin = 8;
bool ServerConfig::has_preproc_plugin() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
void ServerConfig::set_has_preproc_plugin() {
  _has_bits_[0] |= 0x00000080u;
}
void ServerConfig::clear_has_preproc_plugin() {
  _has_bits_[0] &= ~0x00000080u;
}
void ServerConfig::clear_preproc_plugin() {
  if (preproc_plugin_ != NULL) preproc_plugin_->::anyq::ReqPreprocPluginConfig::Clear();
  clear_has_preproc_plugin();
}
const ::anyq::ReqPreprocPluginConfig& ServerConfig::preproc_plugin() const {
  // @@protoc_insertion_point(field_get:anyq.ServerConfig.preproc_plugin)
  return preproc_plugin_ != NULL ? *preproc_plugin_
                         : *::anyq::ReqPreprocPluginConfig::internal_default_instance();
}
::anyq::ReqPreprocPluginConfig* ServerConfig::mutable_preproc_plugin() {
  set_has_preproc_plugin();
  if (preproc_plugin_ == NULL) {
    preproc_plugin_ = new ::anyq::ReqPreprocPluginConfig;
  }
  // @@protoc_insertion_point(field_mutable:anyq.ServerConfig.preproc_plugin)
  return preproc_plugin_;
}
::anyq::ReqPreprocPluginConfig* ServerConfig::release_preproc_plugin() {
  // @@protoc_insertion_point(field_release:anyq.ServerConfig.preproc_plugin)
  clear_has_preproc_plugin();
  ::anyq::ReqPreprocPluginConfig* temp = preproc_plugin_;
  preproc_plugin_ = NULL;
  return temp;
}
void ServerConfig::set_allocated_preproc_plugin(::anyq::ReqPreprocPluginConfig* preproc_plugin) {
  delete preproc_plugin_;
  preproc_plugin_ = preproc_plugin;
  if (preproc_plugin) {
    set_has_preproc_plugin();
  } else {
    clear_has_preproc_plugin();
  }
  // @@protoc_insertion_point(field_set_allocated:anyq.ServerConfig.preproc_plugin)
}

// required .anyq.ReqPostprocPluginConfig postproc_plugin = 9;
bool ServerConfig::has_postproc_plugin() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
void ServerConfig::set_has_postproc_plugin() {
  _has_bits_[0] |= 0x00000100u;
}
void ServerConfig::clear_has_postproc_plugin() {
  _has_bits_[0] &= ~0x00000100u;
}
void ServerConfig::clear_postproc_plugin() {
  if (postproc_plugin_ != NULL) postproc_plugin_->::anyq::ReqPostprocPluginConfig::Clear();
  clear_has_postproc_plugin();
}
const ::anyq::ReqPostprocPluginConfig& ServerConfig::postproc_plugin() const {
  // @@protoc_insertion_point(field_get:anyq.ServerConfig.postproc_plugin)
  return postproc_plugin_ != NULL ? *postproc_plugin_
                         : *::anyq::ReqPostprocPluginConfig::internal_default_instance();
}
::anyq::ReqPostprocPluginConfig* ServerConfig::mutable_postproc_plugin() {
  set_has_postproc_plugin();
  if (postproc_plugin_ == NULL) {
    postproc_plugin_ = new ::anyq::ReqPostprocPluginConfig;
  }
  // @@protoc_insertion_point(field_mutable:anyq.ServerConfig.postproc_plugin)
  return postproc_plugin_;
}
::anyq::ReqPostprocPluginConfig* ServerConfig::release_postproc_plugin() {
  // @@protoc_insertion_point(field_release:anyq.ServerConfig.postproc_plugin)
  clear_has_postproc_plugin();
  ::anyq::ReqPostprocPluginConfig* temp = postproc_plugin_;
  postproc_plugin_ = NULL;
  return temp;
}
void ServerConfig::set_allocated_postproc_plugin(::anyq::ReqPostprocPluginConfig* postproc_plugin) {
  delete postproc_plugin_;
  postproc_plugin_ = postproc_plugin;
  if (postproc_plugin) {
    set_has_postproc_plugin();
  } else {
    clear_has_postproc_plugin();
  }
  // @@protoc_insertion_point(field_set_allocated:anyq.ServerConfig.postproc_plugin)
}

// optional string solr_clear_passwd = 10;
bool ServerConfig::has_solr_clear_passwd() const {
  return (_has_bits_[0] & 0x00000200u) != 0;
}
void ServerConfig::set_has_solr_clear_passwd() {
  _has_bits_[0] |= 0x00000200u;
}
void ServerConfig::clear_has_solr_clear_passwd() {
  _has_bits_[0] &= ~0x00000200u;
}
void ServerConfig::clear_solr_clear_passwd() {
  solr_clear_passwd_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_solr_clear_passwd();
}
const ::std::string& ServerConfig::solr_clear_passwd() const {
  // @@protoc_insertion_point(field_get:anyq.ServerConfig.solr_clear_passwd)
  return solr_clear_passwd_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void ServerConfig::set_solr_clear_passwd(const ::std::string& value) {
  set_has_solr_clear_passwd();
  solr_clear_passwd_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:anyq.ServerConfig.solr_clear_passwd)
}
void ServerConfig::set_solr_clear_passwd(const char* value) {
  set_has_solr_clear_passwd();
  solr_clear_passwd_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:anyq.ServerConfig.solr_clear_passwd)
}
void ServerConfig::set_solr_clear_passwd(const char* value, size_t size) {
  set_has_solr_clear_passwd();
  solr_clear_passwd_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:anyq.ServerConfig.solr_clear_passwd)
}
::std::string* ServerConfig::mutable_solr_clear_passwd() {
  set_has_solr_clear_passwd();
  // @@protoc_insertion_point(field_mutable:anyq.ServerConfig.solr_clear_passwd)
  return solr_clear_passwd_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* ServerConfig::release_solr_clear_passwd() {
  // @@protoc_insertion_point(field_release:anyq.ServerConfig.solr_clear_passwd)
  clear_has_solr_clear_passwd();
  return solr_clear_passwd_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void ServerConfig::set_allocated_solr_clear_passwd(::std::string* solr_clear_passwd) {
  if (solr_clear_passwd != NULL) {
    set_has_solr_clear_passwd();
  } else {
    clear_has_solr_clear_passwd();
  }
  solr_clear_passwd_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), solr_clear_passwd);
  // @@protoc_insertion_point(field_set_allocated:anyq.ServerConfig.solr_clear_passwd)
}

inline const ServerConfig* ServerConfig::internal_default_instance() {
  return &ServerConfig_default_instance_.get();
}
#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// @@protoc_insertion_point(namespace_scope)

}  // namespace anyq

// @@protoc_insertion_point(global_scope)
